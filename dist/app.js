/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./assets/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/Enemy.js":
/*!****************************!*\
  !*** ./assets/js/Enemy.js ***!
  \****************************/
/*! exports provided: Enemy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Enemy\", function() { return Enemy; });\n/* harmony import */ var _funcs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./funcs.js */ \"./assets/js/funcs.js\");\n\n\n// import { Player } from './Player.js';\n// import { TileSet } from './TileSet.js';\n\n\nclass Enemy {\n  constructor(x, y, name, maxHealth, damage, speed, expGive) {\n    this.name = name;\n    this.maxHealth = maxHealth;\n    this.health = maxHealth;\n    this.damage = damage;\n    this.speed = speed;\n    this.expGive = expGive;\n    this.xPos = x;\n    this.yPos = y;\n    // this.image = 'slime_red.png';\n    this.offsetFrameY = 0;\n    this.offsetFrameX = 0;\n    this.animationFrames = [3];\n    this.width = 16;\n    this.height = 16;\n    this.hurtTimer = null;\n    this.alive = true;\n    this.hurt = false;\n    this.missiles = [];\n    this.attacking = false;\n    this.attackCooldown = 2000;\n    this.moveTimer = null;\n    this.canMove = true;\n    this.isCollidingX = false;\n    this.isCollidingY = false;\n  }\n\n  getImage() {\n    return this.image;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  calculateAttackCooldown() {\n    return this.attackCooldown;\n  }\n\n  move(player, map) {\n    let dx = player.posX - this.getXPos();\n    let dy = player.posY - this.getYPos();\n    let distance = Math.round(Math.sqrt(dx * dx + dy * dy));\n\n    if (distance < 300 && distance > 150) {\n      if (!this.hurt) {\n        this.doMove(distance, dx, dy, map);\n      }\n    } else if (distance > 300) {\n      this.moveRandom();\n    }\n  }\n\n  checkObjectsCollision(a1, a2, map) {\n    let objL = map.plane.objects;\n    let ts = map.tileSets[0].tiles;\n\n    // console.log(map);\n    for (let x = map.startX; x < map.endX; x++) {\n      for (let y = map.startY; y < map.endY; y++) {\n        if (objL[x][y]) {\n          let tileType = objL[x][y].getType();\n\n          if (tileType != 0) {\n            let t = {\n              x: objL[x][y].xOffset + map.worldXOffset,\n              y: objL[x][y].yOffset + map.worldYOffset,\n              width: objL[x][y].width,\n              height: objL[x][y].height\n            };\n\n            if (_funcs_js__WEBPACK_IMPORTED_MODULE_0__[\"funcs\"].isCollide(a1, t)) {\n              // console.log(objL[x][y])\n              // console.log('colliding;')\n              this.isCollidingX = true;\n            }\n\n            if (_funcs_js__WEBPACK_IMPORTED_MODULE_0__[\"funcs\"].isCollide(a2, t)) {\n              // console.log('colliding;')\n              this.isCollidingY = true;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  doMove(distance, dx, dy, map) {\n    if (distance > this.moveSpeed) {\n      clearInterval(this.moveTimer);\n      let hMovement = dx > 0 ? 1 : dx < 0 ? -1 : 0;\n      let vMovement = dy > 0 ? 1 : dy < 0 ? -1 : 0;\n      let xSpeed = Math.round((dx / distance) * this.moveSpeed * hMovement);\n      let ySpeed = Math.round((dy / distance) * this.moveSpeed * vMovement);\n\n      let a1 = {\n        x: this.getXPos() + map.worldXOffset + this.moveSpeed * hMovement,\n        y: this.getYPos() + map.worldYOffset,\n        width: this.width * 2,\n        height: this.height * 2\n      };\n      let a2 = {\n        x: this.getXPos() + map.worldXOffset,\n        y: this.getYPos() + map.worldYOffset + this.moveSpeed * vMovement,\n        width: this.width * 2,\n        height: this.height * 2\n      };\n\n      this.checkObjectsCollision(a1, a2, map);\n\n      // if (this.isCollidingX && this.isCollidingY) {\n      //     // this.stopMoving();\n      // } else {\n      if (!this.isCollidingX) {\n        this.xPos += xSpeed * hMovement;\n        // this.posX += xSpeed * hMovement;\n      } else if (ySpeed <= 0.5) {\n        // this.stopMoving();\n        // this.posY += this.moveSpeed * vMovement;\n        // this.posX += 0.1 * -hMovement;\n      }\n      if (!this.isCollidingY) {\n        this.yPos += ySpeed * vMovement;\n        // this.posY += ySpeed * vMovement;\n      } else if (xSpeed <= 0.5) {\n        // this.stopMoving();\n        // this.posX += this.moveSpeed * hMovement;\n        // this.posY += 0.1 * -vMovement;\n      }\n      // }\n\n      this.moving = true;\n    } else {\n      this.moving = false;\n    }\n  }\n\n  moveRandom() {\n    let canMove = this.canMove;\n\n    if (canMove) {\n      let r = Math.random();\n      let plusOrMinus = r < 0.33 ? -1 : r > 0.66 ? 1 : 0;\n      let targetX = this.getXPos() + 100 * plusOrMinus;\n\n      r = Math.random();\n      plusOrMinus = r < 0.33 ? -1 : r > 0.66 ? 1 : 0;\n      let targetY = this.getYPos() + 100 * plusOrMinus;\n      let moveLoop = this.moveLoop.bind(this);\n      let moveTimer = this.moveTimer;\n      let setCanMove = this.setCanMove.bind(this);\n      let target = {\n        targetX: targetX,\n        targetY: targetY,\n        posX: this.getXPos(),\n        posY: this.getYPos()\n      };\n\n      this.canMove = false;\n      this.moveTimeout = setTimeout(function() {\n        clearInterval(moveTimer);\n        setCanMove();\n      }, 5000);\n\n      this.moveTimer = setInterval(function() {\n        moveLoop(target);\n      }, 50);\n    }\n  }\n\n  setCanMove() {\n    this.canMove = true;\n  }\n\n  moveLoop(target) {\n    let dx = target.targetX - this.xPos;\n    let dy = target.targetY - this.yPos;\n    let hMovement = dx > 0 ? 1 : dx < 0 ? -1 : 0;\n    let vMovement = dy > 0 ? 1 : dy < 0 ? -1 : 0;\n    let distance = Math.sqrt(dx * dx + dy * dy);\n    let xSpeed = (dx / distance) * this.moveSpeed * hMovement;\n    let ySpeed = (dy / distance) * this.moveSpeed * vMovement;\n\n    if (distance <= this.moveSpeed) {\n      clearInterval(this.moveTimer);\n    } else if (distance > this.moveSpeed) {\n      this.xPos += xSpeed * hMovement;\n      this.yPos += ySpeed * vMovement;\n    }\n  }\n\n  setAttacking() {\n    this.attacking = true;\n  }\n\n  setNotAttacking() {\n    this.attacking = false;\n  }\n\n  checkAttack(player) {\n    if (!this.attacking && player.alive && !this.hurt) {\n      let dx = player.posX - this.getXPos();\n      let dy = player.posY - this.getYPos();\n      let distance = Math.round(Math.sqrt(dx * dx + dy * dy));\n      let setNotAttacking = this.setNotAttacking.bind(this);\n\n      if (distance < 160) {\n        this.doAttack(player, dy, dx);\n        this.attackTimeout = setTimeout(function() {\n          setNotAttacking();\n        }, this.calculateAttackCooldown());\n        this.attacking = true;\n      }\n    }\n  }\n\n  getMissileImage(dy, dx) {\n    let image = \"enemies/slime_red_missile\";\n    let theta = Math.atan2(dy, dx); // range (-PI, PI]\n    let range = 22.5;\n\n    theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n\n    if (theta <= 0 + range && theta > 0 - range) {\n      // east\n      image += \"_east\";\n    } else if (theta <= 45 + range && theta > 45 - range) {\n      // south-east\n      image += \"_south_east\";\n    } else if (theta <= 90 + range && theta > 90 - range) {\n      // south\n      image += \"_south\";\n    } else if (theta <= 135 + range && theta > 135 - range) {\n      // south-west\n      image += \"_south_west\";\n    } else if (\n      (theta <= 180 && theta > 180 - range) ||\n      (theta <= -180 + range && theta > -180)\n    ) {\n      // west\n      image += \"_west\";\n    } else if (theta <= -135 + range && theta > -135 - range) {\n      // south-west\n      image += \"_north_west\";\n    } else if (theta <= -90 + range && theta > -90 - range) {\n      // south-west\n      image += \"_north\";\n    } else if (theta <= -45 + range && theta > -45 - range) {\n      // south-west\n      image += \"_north_east\";\n    } else {\n      image += \"_east\";\n    }\n\n    image += \".png\";\n    return image;\n  }\n\n  doAttack(player, dy, dx) {\n    let missile = {\n      targetX: player.posX + dx - 16,\n      targetY: player.posY + dy - 16,\n      posX: this.getXPos() - 12,\n      posY: this.getYPos() - 16,\n      moveSpeed: 15,\n      width: 16,\n      height: 16,\n      image: this.getMissileImage(dy, dx),\n      hit: false\n    };\n    let attackLoop = this.attackLoop.bind(this);\n    let missileId = this.missiles.push(missile);\n\n    missile.id = missileId;\n    let attackTimer = setInterval(function() {\n      attackLoop(missile, attackTimer);\n    }, 100);\n  }\n\n  attackLoop(missile, timer) {\n    let dx = missile.targetX - missile.posX;\n    let dy = missile.targetY - missile.posY;\n    let hMovement = dx > 0 ? 1 : dx < 0 ? -1 : 0;\n    let vMovement = dy > 0 ? 1 : dy < 0 ? -1 : 0;\n\n    let distance = Math.sqrt(dx * dx + dy * dy);\n\n    let xSpeed = (dx / distance) * missile.moveSpeed * hMovement;\n    let ySpeed = (dy / distance) * missile.moveSpeed * vMovement;\n\n    if (distance <= missile.moveSpeed || missile.hit) {\n      for (let m in this.missiles) {\n        if (this.missiles[m].id == missile.id) {\n          this.missiles.splice(m, 1);\n          clearInterval(timer);\n        }\n      }\n    } else if (distance > missile.moveSpeed) {\n      missile.posX += xSpeed * hMovement;\n      missile.posY += ySpeed * vMovement;\n    }\n  }\n\n  getXPos() {\n    return this.xPos;\n  }\n\n  getYPos() {\n    return this.yPos;\n  }\n\n  getXCenterPos() {\n    return this.xPos + (this.width * 2) / 2;\n  }\n\n  getYCenterPos() {\n    return this.yPos + (this.height * 2) / 2;\n  }\n\n  startAnimation() {\n    let that = this;\n\n    if (!that.started) {\n      that.animationTimer = setInterval(function() {\n        that.updateAnimationFrames();\n      }, 1000 / 10);\n      that.started = true;\n    }\n  }\n\n  die() {\n    this.alive = false;\n  }\n\n  getHurt(damage) {\n    let that = this;\n\n    if (!that.hurt) {\n      console.log(`${that.name} was damaged ${damage} points!`);\n      that.hurt = true;\n      that.health -= damage;\n      that.hurtTimer = setTimeout(function() {\n        if (that.health <= 0) {\n          that.die();\n          console.log(`${that.name} died!`);\n        }\n        that.hurt = false;\n        console.log(\"not hurt\");\n      }, 200);\n    }\n  }\n\n  updateAnimationFrames() {\n    let that = this;\n    let outOfBounds =\n      that.offsetFrameX >= that.animationFrames[that.offsetFrameY];\n\n    // if (that.attacking && outOfBounds) {\n    //     that.attacking = false;\n    // }\n\n    if (that.hurt && that.offsetFrameX % 2 != 0) {\n      that.offsetFrameY = 1;\n    } else {\n      that.offsetFrameY = 0;\n    }\n\n    if (that.animationFrames[that.offsetFrameY] === undefined || outOfBounds) {\n      that.animationFrame = 0;\n      that.offsetFrameX = 0;\n    } else {\n      that.offsetFrameX += 1;\n    }\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/Enemy.js\n");

/***/ }),

/***/ "./assets/js/Game.js":
/*!***************************!*\
  !*** ./assets/js/Game.js ***!
  \***************************/
/*! exports provided: Game */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Game\", function() { return Game; });\n/* harmony import */ var _Player_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Player.js */ \"./assets/js/Player.js\");\n/* harmony import */ var _Enemy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Enemy.js */ \"./assets/js/Enemy.js\");\n/* harmony import */ var _Slime_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Slime.js */ \"./assets/js/Slime.js\");\n/* harmony import */ var _funcs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./funcs.js */ \"./assets/js/funcs.js\");\n\n\n\n\n\n\n\nclass Game {\n  constructor(width, height) {\n    this.barWidth = 200;\n    this.barHeight = 10;\n    this.started = false;\n    this.plane = [];\n    this.player = null;\n    this.image = null;\n    this.imageUrls = [\n      \"adventurer/adventurer.png\",\n      \"enemies/slime_red.png\",\n      \"cross.png\",\n      \"glove.png\",\n      \"sword.png\",\n      \"enemies/slime_red_missile_east.png\",\n      \"enemies/slime_red_missile_south_east.png\",\n      \"enemies/slime_red_missile_south.png\",\n      \"enemies/slime_red_missile_south_west.png\",\n      \"enemies/slime_red_missile_west.png\",\n      \"enemies/slime_red_missile_north_west.png\",\n      \"enemies/slime_red_missile_north.png\",\n      \"enemies/slime_red_missile_north_east.png\"\n    ];\n    this.images = {};\n    this.enemies = [];\n    this.directions = [\n      \"standingnorth\",\n      \"standingwest\",\n      \"standingeast\",\n      \"standingsouth\",\n      \"runningeast1\",\n      \"runningeast2\"\n    ];\n    this.width = width;\n    this.height = height;\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.id = \"CursorLayer\";\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.canvas.style.zIndex = 8;\n    this.canvas.style.margin = \"auto\";\n    this.canvas.style.display = \"block\";\n    this.canvas.style.border = \"1px solid #bbb\";\n    this.fps = 20;\n    this.timer = null;\n    this.map = null;\n    this.mouseX;\n    this.mouseY;\n  }\n\n  init() {\n    if (this.map.layers.ground) {\n      let startPoint = this.map.dataLayer.startingPoint;\n      let mouseMove = this.mouseMove.bind(this);\n\n      this.imageUrls.push(\n        \"map/\" + this.map.tileSets[0].mapImage.getAttribute(\"source\")\n      );\n      this.map.realWidth = this.map.width * this.map.layers.ground.tileWidth;\n      this.map.realHeight = this.map.height * this.map.layers.ground.tileHeight;\n\n      this.stop();\n      this.player = new _Player_js__WEBPACK_IMPORTED_MODULE_0__[\"Player\"](startPoint.x, startPoint.y);\n      this.enemies.push(\n        new _Slime_js__WEBPACK_IMPORTED_MODULE_2__[\"Slime\"](\n          startPoint.x + 200,\n          startPoint.y + 200,\n          \"redSlime\",\n          20,\n          10,\n          1,\n          100\n        )\n      );\n      // this.enemies.push(new Slime(\n      //     startPoint.x + 300,\n      //     startPoint.y + 300,\n      //     'redSlime',\n      //     20,\n      //     10,\n      //     1,\n      //     10)\n      // );\n      this.centerCamera();\n\n      let player = this.player;\n      let map = this.map;\n\n      window.addEventListener(\"mousedown\", function(e) {\n        player.mouseDown(e, map.worldXOffset, map.worldYOffset);\n      });\n      window.addEventListener(\"mouseup\", function(e) {\n        player.mouseUp(e, true);\n      });\n      window.addEventListener(\"mousemove\", function(e) {\n        mouseMove(e, true);\n      });\n\n      document.getElementById(\"plane\").appendChild(this.canvas);\n      this.ctx = this.canvas.getContext(\"2d\");\n\n      let loadImage = this.loadImage.bind(this);\n\n      loadImage();\n      // this.loadImage();\n    } else {\n      console.log(\"No ground layer found\");\n    }\n  }\n\n  mouseMove(e) {\n    let el = e.target;\n\n    if ((el.getTagName = \"canvas\")) {\n      this.mouseX = e.clientX - el.offsetLeft;\n      this.mouseY = e.clientY - el.offsetTop;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      clearInterval(this.timer);\n      this.started = false;\n    }\n  }\n\n  start() {\n    let redraw = this.redraw.bind(this);\n    let startAnimation = this.player.startAnimation.bind(this.player);\n    let startData = this.player.startData.bind(this.player);\n\n    startData();\n    startAnimation();\n    for (let enemy of this.enemies) {\n      enemy.startAnimation();\n    }\n\n    if (!this.started) {\n      this.timer = setInterval(function() {\n        redraw();\n        // }, 1500);\n      }, 1000 / this.fps);\n      this.started = true;\n    }\n  }\n\n  redraw() {\n    this.getMapScope();\n    this.player.move2(\n      {\n        x: this.map.worldXOffset,\n        y: this.map.worldYOffset,\n        w: this.map.realWidth,\n        h: this.map.realHeight\n      },\n      this.enemies,\n      this.map\n    );\n    this.checkEnemies();\n    this.mapScroll();\n    this.draw();\n  }\n\n  checkEnemies() {\n    for (let enemy in this.enemies) {\n      this.enemies[enemy].realXPos =\n        this.enemies[enemy].getXPos() - 16 + this.map.worldXOffset;\n      this.enemies[enemy].realYPos =\n        this.enemies[enemy].getYPos() - 16 + this.map.worldYOffset;\n      this.enemies[enemy].realXCenterPos =\n        this.enemies[enemy].getXCenterPos() + this.map.worldXOffset;\n      this.enemies[enemy].realYCenterPos =\n        this.enemies[enemy].getYCenterPos() + this.map.worldYOffset;\n      if (!this.enemies[enemy].alive) {\n        this.player.getxp(this.enemies[enemy].expGive);\n        this.enemies.splice(enemy, 1);\n      } else {\n        this.enemies[enemy].move(this.player, this.map);\n        this.enemies[enemy].checkAttack(this.player);\n      }\n    }\n  }\n\n  centerCamera() {\n    this.map.worldXOffset =\n      -this.player.posX + this.width / 2 - this.player.height;\n    this.map.worldYOffset =\n      -this.player.posY + this.height / 2 - this.player.height;\n  }\n\n  mapScroll() {\n    let margin = 300;\n    let realYPos = this.player.posY + this.map.worldYOffset;\n    let realXPos = this.player.posX + this.map.worldXOffset;\n    let isBelow = realYPos > this.height - margin ? 1 : 0;\n    let isAbove = realYPos + this.player.height * 2 < margin ? 1 : 0;\n    let isRight =\n      realXPos + this.player.width * 2 > this.width - margin ? 1 : 0;\n    let isLeft = realXPos < margin ? 1 : 0;\n    let dx = this.player.realClickX - this.player.posX;\n    let dy = this.player.realClickY - this.player.posY;\n    let hMovement = dx > 0 ? 1 : dx < 0 ? -1 : 0;\n    let vMovement = dy > 0 ? 1 : dy < 0 ? -1 : 0;\n    let distance = Math.sqrt(dx * dx + dy * dy);\n    let xSpeed = (dx / distance) * this.player.moveSpeed * hMovement;\n    let ySpeed = (dy / distance) * this.player.moveSpeed * vMovement;\n\n    if (\n      isRight &&\n      this.map.worldXOffset - xSpeed * 1 > -this.map.realWidth + this.width\n    ) {\n      this.map.worldXOffset -= xSpeed * 1;\n    } else if (isLeft && this.map.worldXOffset + xSpeed * 1 <= 0) {\n      this.map.worldXOffset += xSpeed * 1;\n    }\n\n    if (\n      isBelow &&\n      this.map.worldYOffset - ySpeed * 1 > -this.map.realHeight + this.height\n    ) {\n      this.map.worldYOffset -= ySpeed * 1;\n    } else if (isAbove && this.map.worldYOffset + ySpeed * 1 < 0) {\n      this.map.worldYOffset += ySpeed * 1;\n    }\n  }\n\n  loadImage() {\n    let imageUrls = this.imageUrls;\n    let start = this.start.bind(this);\n    let loadCounter = 0;\n\n    for (let image of imageUrls) {\n      this.images[image] = new Image();\n      this.images[image].onload = function() {\n        loadCounter++;\n        if (loadCounter === imageUrls.length) {\n          start();\n        }\n      };\n      this.images[image].src = \"assets/img/\" + image;\n    }\n  }\n\n  reset() {\n    this.player.posX = this.player.startX;\n    this.player.posY = this.player.startY;\n  }\n\n  draw() {\n    let getAnimationType = this.player.getAnimationType.bind(this.player);\n\n    // getAnimationType();\n\n    this.ctx.font = \"14px courier\";\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.ctx.msImageSmoothingEnabled = false;\n    this.ctx.webkitImageSmoothingEnabled = false;\n    this.ctx.imageSmoothingEnabled = false;\n\n    this.drawMap();\n    this.drawPlayer();\n    this.drawEnemies();\n    this.drawOverlayObjects();\n    // this.drawAttackingSquares();\n    // this.drawStatusText();\n    this.drawHealthbar();\n    this.drawPointer();\n  }\n\n  getMapScope() {\n    let tileWidth = this.map.tileWidth;\n    let restY = -this.map.worldXOffset % tileWidth;\n\n    let startY = (-this.map.worldXOffset - restY) / tileWidth;\n    let restX = -this.map.worldYOffset % tileWidth;\n\n    let startX = (-this.map.worldYOffset - restX) / tileWidth;\n    let restEndX = (-this.map.worldYOffset + this.width) % tileWidth;\n    let endX = (-this.map.worldYOffset + this.width - restEndX) / tileWidth;\n    let restEndY = (-this.map.worldXOffset + this.width) % tileWidth;\n    let endY = (-this.map.worldXOffset + this.width - restEndY) / tileWidth;\n\n    this.map.startX = startX > 0 ? startX - 1 : 0;\n    this.map.startY = startY > 0 ? startY - 1 : 0;\n\n    this.map.endX = endX + 1 < this.map.width ? endX + 1 : this.map.width;\n    this.map.endY = endY + 1 < this.map.height ? endY + 1 : this.map.height;\n  }\n\n  drawMap() {\n    for (let layer in this.map.plane) {\n      for (let x = this.map.startX; x < this.map.endX; x++) {\n        for (let y = this.map.startY; y < this.map.endY; y++) {\n          if (\n            this.map.plane[layer][x][y] &&\n            this.map.tileSets[0].tiles[this.map.plane[layer][x][y].getType()]\n          ) {\n            let tileType = this.map.plane[layer][x][y].getType();\n\n            this.ctx.drawImage(\n              this.images[\"map/overworld1.png\"], //bilden\n              this.map.tileSets[0].tiles[tileType].xOffset,\n              this.map.tileSets[0].tiles[tileType].yOffset,\n              this.map.tileSets[0].tiles[tileType].getWidth(),\n              this.map.tileSets[0].tiles[tileType].getHeight(),\n              this.map.plane[layer][x][y].xOffset + this.map.worldXOffset,\n              this.map.plane[layer][x][y].yOffset + this.map.worldYOffset,\n              this.map.plane[layer][x][y].getWidth(),\n              this.map.plane[layer][x][y].getHeight()\n            );\n          }\n        }\n      }\n    }\n  }\n\n  drawOverlayObjects() {\n    for (let x = this.map.startX; x < this.map.endX; x++) {\n      for (let y = this.map.startY; y < this.map.endY; y++) {\n        if (\n          this.map.objectsOverlay[x][y] &&\n          this.map.tileSets[0].tiles[this.map.objectsOverlay[x][y].getType()]\n        ) {\n          let tileType = this.map.objectsOverlay[x][y].getType();\n\n          this.ctx.drawImage(\n            this.images[\"map/overworld1.png\"], //bilden\n            this.map.tileSets[0].tiles[tileType].xOffset,\n            this.map.tileSets[0].tiles[tileType].yOffset,\n            this.map.tileSets[0].tiles[tileType].getWidth(),\n            this.map.tileSets[0].tiles[tileType].getHeight(),\n            this.map.objectsOverlay[x][y].xOffset + this.map.worldXOffset,\n            this.map.objectsOverlay[x][y].yOffset + this.map.worldYOffset,\n            this.map.objectsOverlay[x][y].getWidth(),\n            this.map.objectsOverlay[x][y].getHeight()\n          );\n        }\n      }\n    }\n  }\n\n  drawPlayer() {\n    // let facingPlayerOffset = this.player.facingX == 1 ? 10 : 18;\n    let playerYPos = this.player.posY + 18 + this.map.worldYOffset - 32;\n    let playerXPos = this.player.posX + 14 + this.map.worldXOffset - 32;\n    // let targetX = this.player.realClickX + this.map.worldXOffset - 16;\n    // let targetY = this.player.realClickY + this.map.worldYOffset - 16;\n\n    // this.player.facingPlayerOffset = facingPlayerOffset;\n    this.player.playerXPos = playerXPos;\n    this.player.playerYPos = playerYPos;\n\n    // if (this.player.clickTarget) {\n    //     targetX = this.player.clickTarget.getXPos() + this.map.worldXOffset - 16;\n    //     targetY = this.player.clickTarget.getYPos() + this.map.worldYOffset - 16;\n    // }\n\n    // if (this.player.realClickX && this.player.realClickX) {\n    //     this.ctx.drawImage(\n    //         this.images['cross.png'],\n    //         targetX,\n    //         targetY,\n    //         32,\n    //         32\n    //     );\n    // }\n\n    // this.ctx.fillStyle = '#BBBBBB4D';\n    // this.ctx.fillRect(\n    //     this.player.playerXPos,\n    //     this.player.playerYPos,\n    //     (this.player.width * 1.5) - 12,\n    //     (this.player.height * 1.5) - 6\n    // );\n\n    this.ctx.drawImage(\n      this.images[\"adventurer/adventurer.png\"],\n      this.player.offsetFrameX * this.player.width, // sidled/animation\n      this.player.offsetFrameY * this.player.height + 1, // höjden\n      this.player.width,\n      this.player.height,\n      this.player.posX + this.map.worldXOffset - 32,\n      this.player.posY + this.map.worldYOffset - 32,\n      // playerXPos,\n      // playerYPos,\n      // this.player.posX + this.map.worldXOffset,\n      // this.player.posY + this.map.worldYOffset,\n      this.player.width * 2,\n      this.player.height * 2\n    );\n    // this.ctx.fillStyle = '#000000';\n    // this.ctx.fillRect(\n    //     this.player.posX + this.map.worldXOffset,\n    //     this.player.posY + this.map.worldYOffset,\n    //     1,\n    //     1\n    // );\n  }\n\n  drawEnemies() {\n    let a = {\n      x: this.player.playerXPos,\n      y: this.player.playerYPos,\n      width: this.player.width * 1.5 - 12,\n      height: this.player.height * 1.5 - 6\n    };\n\n    // this.ctx.fillStyle = '#BBBBBB4D';\n    // this.ctx.fillRect(\n    //     this.player.playerXPos,\n    //     this.player.playerYPos,\n    //     (this.player.width * 1.5) - 12,\n    //     (this.player.height * 1.5) - 6\n    // );\n\n    for (let enemy of this.enemies) {\n      this.ctx.drawImage(\n        this.images[\"enemies/\" + enemy.getImage()],\n        enemy.offsetFrameX * enemy.width, // sidled/animation\n        enemy.offsetFrameY * enemy.height, // höjden\n        enemy.getWidth(),\n        enemy.getHeight(),\n        enemy.realXPos,\n        enemy.realYPos,\n        enemy.getWidth() * 2,\n        enemy.getHeight() * 2\n      );\n      this.ctx.fillStyle = \"#000000\";\n      this.ctx.fillRect(\n        enemy.realXPos + (enemy.width * 2) / 2,\n        enemy.realYPos + (enemy.height * 2) / 2,\n        3,\n        3\n        // enemy.getWidth() * 2,\n        // enemy.getHeight() * 2\n      );\n\n      if (enemy.missiles) {\n        for (let missile of enemy.missiles) {\n          this.ctx.drawImage(\n            this.images[missile.image],\n            missile.posX - 8 + this.map.worldXOffset,\n            missile.posY - 8 + this.map.worldYOffset,\n            32,\n            32\n          );\n          // this.ctx.fillRect(\n          //     missile.posX + this.map.worldXOffset,\n          //     missile.posY + this.map.worldYOffset,\n          //     missile.width,\n          //     missile.height\n          // );\n          let b = {\n            x: missile.posX + this.map.worldXOffset,\n            y: missile.posY + this.map.worldYOffset,\n            width: missile.width,\n            height: missile.height\n          };\n\n          if (_funcs_js__WEBPACK_IMPORTED_MODULE_3__[\"funcs\"].isCollide(a, b)) {\n            missile.hit = true;\n            this.player.getHurt(enemy.damage);\n            // enemy.getHurt(this.player.damage);\n          }\n        }\n\n        // for (let enemy of this.enemies) {\n        // }\n      }\n\n      /*if (funcs.isCollide({\n                x: this.player.playerXPos,\n                y: this.player.playerYPos,\n                width: (this.player.width * 1.5) - 12,\n                height: (this.player.height * 1.5) - 6\n            }, {\n                x: enemy.realXPos,\n                y: enemy.realYPos,\n                width: enemy.getWidth() * 2,\n                height: enemy.getHeight() * 2\n            }) && !enemy.hurt) {\n            // if (realXPos > attackXPos &&\n            //     realXPos < attackXPos + 20 &&\n            //     realYPos > attackYPos &&\n            //     realYPos < attackYPos + 40\n            // ) {\n                this.player.getHurt(enemy.damage);\n            }*/\n    }\n  }\n\n  drawAttackingSquares() {\n    if (this.player.attacking) {\n      let facingOffset = this.player.facingX == 1 ? 32 + 12 : 0;\n      let attackYPos = this.player.posY + 20 + this.map.worldYOffset - 32;\n      let attackXPos =\n        this.player.posX + facingOffset + this.map.worldXOffset - 32;\n\n      let a = {\n        x: attackXPos,\n        y: attackYPos,\n        width: 20,\n        height: 40\n      };\n\n      this.ctx.fillStyle = \"#005AFF4D\";\n      this.ctx.fillRect(attackXPos, attackYPos, 20, 40);\n      this.ctx.fillStyle = \"#005AFF\";\n      this.ctx.strokeRect(attackXPos, attackYPos, 20, 40);\n\n      for (let enemy of this.enemies) {\n        let b = {\n          x: enemy.realXPos,\n          y: enemy.realYPos,\n          width: enemy.getWidth() * 2,\n          height: enemy.getHeight() * 2\n        };\n\n        if (_funcs_js__WEBPACK_IMPORTED_MODULE_3__[\"funcs\"].isCollide(a, b)) {\n          enemy.getHurt(this.player.damage);\n        }\n      }\n    }\n  }\n\n  drawStatusText() {\n    this.ctx.font = \"20px courier\";\n    this.ctx.fillStyle = \"#fff\";\n    this.ctx.fillText(\n      \"lvl: \" +\n        this.player.level +\n        \"  xp \" +\n        this.player.experience +\n        \"/\" +\n        this.player.nextLevel,\n      20,\n      80\n    );\n    this.ctx.fillStyle = \"#ffffffc\";\n    this.ctx.fillText(this.player.facing, 10, 120);\n    this.ctx.fillText(\n      Math.round(this.player.posY) + \", \" + Math.round(this.player.posX),\n      10,\n      140\n    );\n\n    this.ctx.fillText(\n      Math.round(\n        this.player.posY + this.map.worldYOffset - this.player.height * 2\n      ) +\n        \", \" +\n        Math.round(\n          this.player.posX + this.map.worldXOffset - this.player.width * 2\n        ),\n      10,\n      160\n    );\n\n    this.ctx.fillText(\n      Math.round(this.player.clickY - this.map.worldYOffset) +\n        \", \" +\n        Math.round(this.player.clickX - this.map.worldXOffset),\n      10,\n      180\n    );\n    this.ctx.stroke();\n  }\n\n  drawHealthbar() {\n    this.ctx.font = \"20px courier\";\n    this.ctx.fillStyle = \"#fff\";\n    this.ctx.fillText(\n      \"lvl: \" +\n        this.player.level +\n        \"  xp \" +\n        this.player.experience +\n        \"/\" +\n        this.player.nextLevel,\n      20,\n      80\n    );\n    this.ctx.fillStyle = \"#FFFFFF55\";\n    this.ctx.fillRect(17, 17, this.barWidth + 6, this.barHeight + 6);\n\n    this.ctx.fillStyle = \"#CB2E2E\";\n    this.ctx.fillRect(\n      20,\n      20,\n      this.barWidth * (this.player.health / this.player.maxHealth),\n      this.barHeight\n    );\n\n    this.ctx.fillStyle = \"#FFFFFF55\";\n    this.ctx.fillRect(17, 37, this.barWidth + 6, this.barHeight + 6);\n\n    this.ctx.fillStyle = \"#24A733\";\n    this.ctx.fillRect(\n      20,\n      40,\n      this.barWidth * (this.player.stamina / this.player.maxStamina),\n      this.barHeight\n    );\n  }\n\n  drawPointer() {\n    let image = this.images[\"glove.png\"];\n    this.player.hoverAction = \"move\";\n    this.player.hoverTarget = null;\n\n    let a = {\n      x: this.mouseX,\n      y: this.mouseY,\n      width: 1,\n      height: 1\n    };\n\n    for (let enemy of this.enemies) {\n      let b = {\n        x: enemy.realXPos,\n        y: enemy.realYPos,\n        width: enemy.getWidth() * 2,\n        height: enemy.getHeight() * 2\n      };\n\n      if (_funcs_js__WEBPACK_IMPORTED_MODULE_3__[\"funcs\"].isCollide(a, b)) {\n        this.player.hoverAction = \"attack\";\n        this.player.hoverTarget = enemy;\n        image = this.images[\"sword.png\"];\n      }\n    }\n\n    if (this.mouseX && this.mouseY) {\n      this.ctx.drawImage(image, this.mouseX, this.mouseY, 32, 32);\n    }\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/Game.js\n");

/***/ }),

/***/ "./assets/js/Layer.js":
/*!****************************!*\
  !*** ./assets/js/Layer.js ***!
  \****************************/
/*! exports provided: Layer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Layer\", function() { return Layer; });\n\n\n// import { Player } from './Player.js';\n// import { TileSet } from './TileSet.js';\n// import { funcs } from './funcs.js';\n\nclass Layer {\n  constructor(\n    id,\n    data,\n    width,\n    height,\n    visible,\n    opacity,\n    layerName,\n    tileWidth,\n    tileHeight,\n    objects\n  ) {\n    this.id = id;\n    this.name = layerName;\n    this.width = width;\n    this.height = height;\n    this.visible = visible;\n    this.opacity = opacity;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.data = data;\n    this.objects = objects;\n    // console.log(this.image);\n    // var tileAmountWidth = Math.floor(width / tileWidth);\n    // this.lastgid = tileAmountWidth * Math.floor(height / tileHeight) + firstgid - 1;\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvTGF5ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvTGF5ZXIuanM/MGQ1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLy8gaW1wb3J0IHsgUGxheWVyIH0gZnJvbSAnLi9QbGF5ZXIuanMnO1xuLy8gaW1wb3J0IHsgVGlsZVNldCB9IGZyb20gJy4vVGlsZVNldC5qcyc7XG4vLyBpbXBvcnQgeyBmdW5jcyB9IGZyb20gJy4vZnVuY3MuanMnO1xuXG5jbGFzcyBMYXllciB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIGlkLFxuICAgIGRhdGEsXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHZpc2libGUsXG4gICAgb3BhY2l0eSxcbiAgICBsYXllck5hbWUsXG4gICAgdGlsZVdpZHRoLFxuICAgIHRpbGVIZWlnaHQsXG4gICAgb2JqZWN0c1xuICApIHtcbiAgICB0aGlzLmlkID0gaWQ7XG4gICAgdGhpcy5uYW1lID0gbGF5ZXJOYW1lO1xuICAgIHRoaXMud2lkdGggPSB3aWR0aDtcbiAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcbiAgICB0aGlzLnZpc2libGUgPSB2aXNpYmxlO1xuICAgIHRoaXMub3BhY2l0eSA9IG9wYWNpdHk7XG4gICAgdGhpcy50aWxlV2lkdGggPSB0aWxlV2lkdGg7XG4gICAgdGhpcy50aWxlSGVpZ2h0ID0gdGlsZUhlaWdodDtcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICAgIHRoaXMub2JqZWN0cyA9IG9iamVjdHM7XG4gICAgLy8gY29uc29sZS5sb2codGhpcy5pbWFnZSk7XG4gICAgLy8gdmFyIHRpbGVBbW91bnRXaWR0aCA9IE1hdGguZmxvb3Iod2lkdGggLyB0aWxlV2lkdGgpO1xuICAgIC8vIHRoaXMubGFzdGdpZCA9IHRpbGVBbW91bnRXaWR0aCAqIE1hdGguZmxvb3IoaGVpZ2h0IC8gdGlsZUhlaWdodCkgKyBmaXJzdGdpZCAtIDE7XG4gIH1cbn1cblxuZXhwb3J0IHsgTGF5ZXIgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/js/Layer.js\n");

/***/ }),

/***/ "./assets/js/Map.js":
/*!**************************!*\
  !*** ./assets/js/Map.js ***!
  \**************************/
/*! exports provided: Map */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Map\", function() { return Map; });\n/* harmony import */ var _Player_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Player.js */ \"./assets/js/Player.js\");\n/* harmony import */ var _TileSet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TileSet.js */ \"./assets/js/TileSet.js\");\n/* harmony import */ var _Layer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Layer.js */ \"./assets/js/Layer.js\");\n/* harmony import */ var _Tile_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tile.js */ \"./assets/js/Tile.js\");\n/* harmony import */ var _funcs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./funcs.js */ \"./assets/js/funcs.js\");\n\n\n\n\n\n\n\n\nclass Map {\n  constructor(url) {\n    this.url = url;\n    this.xmlDoc = null;\n    this.tileSets = [];\n    this.layers = {};\n    this.plane = [];\n    this.data = null;\n    this.worldXOffset = 0;\n    this.worldYOffset = 0;\n    this.realWidth = 0;\n    this.realHeight = 0;\n    this.dataLayer = {};\n  }\n\n  loadLayers() {\n    console.log(this.data);\n    for (let datalayer of this.data.layers) {\n      let id = datalayer.id;\n      let width = datalayer.width;\n      let height = datalayer.height;\n      let visible = datalayer.visible;\n      let opacity = datalayer.opacity;\n      let layerName = datalayer.name.toCamelCase();\n      let tileWidth = this.data.tilewidth;\n      let tiledata = datalayer.data;\n      let tileHeight = this.data.tileheight;\n      let objects = datalayer.objects;\n\n      this.layers[layerName] = new _Layer_js__WEBPACK_IMPORTED_MODULE_2__[\"Layer\"](\n        id,\n        tiledata,\n        width,\n        height,\n        visible,\n        opacity,\n        layerName,\n        tileWidth,\n        tileHeight,\n        objects\n      );\n    }\n  }\n\n  loadTilesets() {\n    // console.log(this.data.tilesets)\n    for (let tileset of this.data.tilesets) {\n      // console.log(tileset);\n      let firstGid = tileset.firstgid;\n      let tilesetImagePath = tileset.image;\n      let width = this.data.width;\n      let height = this.data.height;\n      let tileWidth = this.data.tilewidth;\n      let tileHeight = this.data.tileheight;\n\n      this.tileSets.push(\n        new _TileSet_js__WEBPACK_IMPORTED_MODULE_1__[\"TileSet\"](\n          firstGid,\n          tileWidth,\n          tileHeight,\n          tilesetImagePath,\n          width,\n          height\n        )\n      );\n    }\n  }\n\n  setMapData() {\n    if (this.layers[\"dataLayer\"]) {\n      for (let dataObj of this.layers[\"dataLayer\"].objects) {\n        this.dataLayer[dataObj.name.toCamelCase()] = dataObj;\n      }\n      delete this.layers[\"dataLayer\"];\n      // this.layers.splice(dataLayer, 1);\n    }\n  }\n\n  async loadTileSetimages() {\n    for (let tileset of this.tileSets) {\n      await tileset.loadTileSetImage();\n    }\n  }\n\n  async getMapData() {\n    let that = this;\n    let object = await window.fetch(that.url);\n    let data = await object.json();\n\n    that.data = data;\n  }\n\n  async loadMap() {\n    await this.getMapData();\n    let that = this;\n\n    that.width = that.data.width;\n    that.height = that.data.height;\n    that.tileWidth = that.data.tilewidth;\n    that.tileHeight = that.data.tileheight;\n\n    that.loadLayers();\n    that.loadTilesets();\n    await that.loadTileSetimages();\n    that.setMapData();\n    // that.layers[0].data\n    for (let layer in that.layers) {\n      let tileCounter = 0;\n\n      that.plane[layer] = [];\n      for (let y = 0; y < that.data.height; y++) {\n        that.plane[layer][y] = [];\n        for (let x = 0; x < that.data.width; x++) {\n          let xOffset = x * that.data.tilewidth;\n          let yOffset = y * that.data.tileheight;\n\n          that.plane[layer][y][x] = new _Tile_js__WEBPACK_IMPORTED_MODULE_3__[\"Tile\"](\n            tileCounter,\n            xOffset,\n            yOffset,\n            that.data.tilewidth,\n            that.data.tileheight,\n            that.layers[layer].data[tileCounter]\n          );\n          tileCounter++;\n        }\n      }\n    }\n    that.objectsOverlay = that.plane.objectsOverlay;\n    delete that.plane.objectsOverlay;\n    // console.log(that.objectsOverlay);\n    /*for (let y = 0; y < that.data.height; y++) {\n            that.plane[y] = [];\n            for (let x = 0; x < that.data.width; x++) {\n                let xOffset = x * that.data.tilewidth;\n                let yOffset = y * that.data.tileheight;\n\n                that.plane[y][x] = new Tile(\n                    tileCounter,\n                    xOffset,\n                    yOffset,\n                    that.data.tilewidth,\n                    that.data.tileheight,\n                    that.layers['ground'].data[tileCounter]\n                );\n                tileCounter++;\n            }\n        }*/\n    // let screenBitmap = new Bitmap(new BitmapData(mapWidth * tileWidth, mapHeight * tileHeight, false, 0x22ffff));\n    // let screenBitmapTopLayer = new Bitmap(new BitmapData(mapWidth*tileWidth,mapHeight*tileHeight,true,0));\n\n    // load images for tileset\n    // for (let i = 0; i < that.tileSets.length; i++) {\n    //     // let loader = new TileCodeEventLoader();\n    //     // loader.contentLoaderInfo.addEventListener(Event.COMPLETE, tilesLoadComplete);\n    //     // loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, progressHandler);\n    //     // loader.tileSet = tileSets[i];\n    //     // loader.load(new URLRequest(\"../assets/\" + tileSets[i].source));\n    //     // eventLoaders.push(loader);\n    //     let mapimage = await window.fetch('assets/img/map/' + that.tileSets[i].source);\n    //     let text = await mapimage.text();\n    //     let xmlDoc = (new window.DOMParser()).parseFromString(text, \"text/xml\");\n\n    //     console.log(xmlDoc);\n    //     // console.log(xmlDoc.activeElement.children[0]);\n    //     that.mapImage = xmlDoc.activeElement.children[0];\n    // }\n    // let screenBitmap = image\n  }\n\n  /*async loadMap() {\n        let that = this;\n        let xmlDoc = window.fetch(that.url)\n            .then(response => response.text())\n            .then(function(str) {\n                return (new window.DOMParser()).parseFromString(str, \"text/xml\")\n            })\n            // .then(str => return (new window.DOMParser()).parseFromString(str, \"text/xml\"))\n            .then(function(ret) {\n                console.log(ret.activeElement);\n                let map = ret.activeElement;\n                that.width = map.getAttribute(\"width\");\n                that.height = map.getAttribute(\"height\");\n                that.tileWidth = map.getAttribute(\"tilewidth\");\n                that.tileHeight = map.getAttribute(\"tileheight\");\n                that.xmlDoc = ret;\n\n                for (let tileSet of map.getElementsByTagName('tileset')) {\n                    console.log(tileSet);\n                    let imageWidth = tileSet.getAttribute('width');\n                    let imageHeight = tileSet.getAttribute('height');\n                    let firstGid = tileSet.getAttribute(\"firstgid\");\n                    let tilesetName = tileSet.getAttribute(\"name\");\n                    let tilesetTileWidth = tileSet.getAttribute(\"tilewidth\");\n                    let tilesetTileHeight = tileSet.getAttribute(\"tileheight\");\n                    let tilesetImagePath = tileSet.getAttribute(\"source\");\n                    that.tileSets.push(new TileSet(firstGid, tilesetName, tilesetTileWidth, tilesetTileHeight, tilesetImagePath, imageWidth, imageHeight));\n                }\n\n                let xmlCounter = 0;\n            });\n            // .then(data => console.log(data));\n            // that.width = xmlDoc.attribute(\"width\");\n            // that.height = xmlDoc.attribute(\"height\");\n            // that.tileWidth = xmlDoc.attribute(\"tilewidth\");\n            // that.tileHeight = xmlDoc.attribute(\"tileheight\");\n        // console.log(xmlDoc);\n    }*/\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/Map.js\n");

/***/ }),

/***/ "./assets/js/Player.js":
/*!*****************************!*\
  !*** ./assets/js/Player.js ***!
  \*****************************/
/*! exports provided: Player */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Player\", function() { return Player; });\n/* harmony import */ var _funcs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./funcs.js */ \"./assets/js/funcs.js\");\n\n// import { Game } from './Game.js';\n\n\nclass Player {\n  constructor(startX, startY) {\n    this.level = 1;\n    this.experience = 0;\n    this.nextLevel = 100;\n    this.damage = 5;\n    this.health = 100;\n    this.stamina = 100;\n    this.maxHealth = 100;\n    this.maxStamina = 100;\n    this.facing = \"\";\n    this.facingY = \"south\";\n    this.facingX = 1;\n    this.frame = 1;\n    this.startX = startX;\n    this.startY = startY;\n    this.keyPressed = {};\n    this.posX = startX;\n    this.posY = startY;\n    this.moving = false;\n    this.moveSpeed = 8;\n    this.calculatedMoveSpeed = 1;\n    this.offsetFrameY = 0;\n    this.offsetFrameX = 0;\n    this.animationFrame = 0;\n    this.animationFrames = [12, 7, 9, 9, 9, 5, 4, 7, 12, 7, 9, 9, 9, 5, 4, 7];\n    this.animationTimer = null;\n    this.height = 32;\n    this.width = 32;\n    this.attacking = false;\n    this.attackCooldown = 9;\n    this.attackCounter = 0;\n    this.attackTimer = 0;\n    this.attackCombo = 0;\n    this.jumping = false;\n    this.jumpCooldown = 9;\n    this.jumpCounter = 0;\n    this.jumpTimer = 0;\n    this.fps = 10;\n    this.hurtTimer = null;\n    this.hurt = false;\n    this.alive = true;\n    this.clickX = 0;\n    this.clickY = 0;\n    this.clickAction = \"move\";\n    this.clickTarget = null;\n    this.hoverAction = \"move\";\n    // this.startAnimation();\n  }\n\n  die() {\n    this.alive = false;\n    this.doAnimation(7, false);\n  }\n\n  mouseUp(e) {\n    // console.log(e);\n  }\n\n  mouseDown(e, worldXOffset, worldYOffset) {\n    let el = e.target;\n\n    if (el.getTagName == \"canvas\") {\n      this.clickX = e.clientX - el.offsetLeft;\n      this.clickY = e.clientY - el.offsetTop;\n      this.realClickX = e.clientX - el.offsetLeft - worldXOffset;\n      this.realClickY = e.clientY - el.offsetTop - worldYOffset;\n    }\n    this.clickAction = this.hoverAction;\n    this.clickTarget = this.hoverTarget;\n  }\n\n  doAnimation(yOffset, restart = true, duration = 999) {\n    let updateAnimationFrames = this.updateAnimationFrames.bind(this);\n    let getAnimationType = this.getAnimationType.bind(this);\n    let startAnimation = this.startAnimation.bind(this);\n    let stopAnimation = this.stopAnimation.bind(this);\n\n    stopAnimation();\n    // clearInterval(this.animationTimer);\n    if (duration === 999) {\n      duration = this.animationFrames[yOffset] * (1000 / this.fps);\n    }\n    console.log(duration);\n    this.offsetFrameY = 0;\n    if (this.facingX == 0) {\n      this.offsetFrameY += 8;\n    }\n    // this.getAnimationType();\n    this.offsetFrameY += yOffset;\n    this.offsetFrameX = 0;\n    let counter = 0;\n    this.animationTimer = setInterval(function() {\n      counter++;\n      console.log(counter);\n      updateAnimationFrames();\n    }, 1000 / this.fps);\n\n    setTimeout(function() {\n      stopAnimation();\n      if (restart) {\n        startAnimation();\n      }\n    }, duration);\n  }\n\n  stopAnimation() {\n    clearInterval(this.animationTimer);\n  }\n\n  getHurt(damage) {\n    if (!this.hurt) {\n      let doAnimation = this.doAnimation.bind(this);\n      // let setNotHurting = this.setNotHurting.bind(this);\n      let setNotHurt = this.setNotHurt.bind(this);\n\n      clearInterval(this.attackTimer);\n      this.attackCounter = 0;\n      this.attacking = false;\n      this.hurt = true;\n      // this.hurting = true;\n      this.health -= damage;\n      if (this.health <= 0) {\n        this.die();\n        console.log(\"Player died\");\n      } else {\n        this.offsetFrameX = 0;\n        doAnimation(6);\n        this.hurtTimer = setTimeout(function() {\n          // setNotHurting();\n          setNotHurt();\n        }, 400);\n      }\n      // this.hurt = hurt;\n    }\n  }\n\n  pressKey(key, pressed) {\n    this.keyPressed[key] = pressed;\n  }\n\n  getxp(xp) {\n    this.experience += xp;\n    if (this.experience >= this.nextLevel) {\n      this.level += 1;\n      this.nextLevel = this.nextLevel + this.nextLevel * 1.5;\n      this.experience = 0;\n    }\n  }\n\n  setNotHurt() {\n    this.hurt = false;\n  }\n\n  setNotHurting() {\n    this.hurting = false;\n  }\n\n  attack() {\n    if (this.clickTarget.alive) {\n      if (this.attackCombo >= 2) {\n        this.attackCombo = 0;\n      } else {\n        this.attackCombo++;\n      }\n      if (!this.attacking) {\n        let attackTimer = this.attackTimer;\n        let attacking = this.attacking;\n        let offsetFrameX = this.offsetFrameX;\n        let attackCounter = this.attackCounter;\n        let attackCooldown = this.attackCooldown;\n        let damage = this.damage;\n        let clickTarget = this.clickTarget;\n        let setNotAttacking = this.setNotAttacking.bind(this);\n\n        this.stamina -= 10;\n        this.offsetFrameX = 0;\n        this.attacking = true;\n\n        this.doAnimation(2 + this.attackCombo);\n        attackCounter = attackCooldown;\n        this.attackTimer = setInterval(function() {\n          if (attackCounter == attackCooldown - 2) {\n            clickTarget.getHurt(damage);\n          }\n          if (attackCounter == 0) {\n            clearInterval(attackTimer);\n            // attacking = false;\n            setNotAttacking();\n            console.log(\"player not attacking\");\n            offsetFrameX = 0;\n          }\n          attackCounter--;\n        }, 1000 / this.fps);\n      }\n    }\n  }\n\n  setNotAttacking() {\n    this.attacking = false;\n  }\n\n  jump() {\n    this.offsetFrameX = 0;\n    if (!this.jumping && this.jumpCounter <= 0) {\n      this.jumping = true;\n      this.jumpTimer = this.jumpCooldown;\n      this.jumpTimer = setInterval(function() {\n        this.jumpCounter--;\n        if (this.jumpCounter == 0) {\n          clearInterval(this.jumpTimer);\n          this.jumping = false;\n          this.offsetFrameX = 0;\n        }\n      }, 1000 / this.fps);\n    }\n  }\n\n  getXTarget() {\n    let xTarget = this.realClickX;\n\n    if (this.clickTarget !== undefined && this.clickTarget !== null) {\n      xTarget = this.clickTarget.getXCenterPos() - this.clickTarget.getWidth();\n    }\n    return xTarget;\n  }\n\n  getYTarget() {\n    let yTarget = this.realClickY;\n\n    if (this.clickTarget !== undefined && this.clickTarget !== null) {\n      yTarget = this.clickTarget.getYCenterPos() - this.clickTarget.getHeight();\n    }\n    return yTarget;\n  }\n\n  checkObjectsCollision(a1, a2, map) {\n    let objL = map.plane.objects;\n    let ts = map.tileSets[0].tiles;\n\n    // console.log(map);\n    for (let x = map.startX; x < map.endX; x++) {\n      for (let y = map.startY; y < map.endY; y++) {\n        if (objL[x][y]) {\n          let tileType = objL[x][y].getType();\n\n          if (tileType != 0) {\n            let t = {\n              x: objL[x][y].xOffset + map.worldXOffset,\n              y: objL[x][y].yOffset + map.worldYOffset,\n              width: objL[x][y].width,\n              height: objL[x][y].height\n            };\n\n            if (_funcs_js__WEBPACK_IMPORTED_MODULE_0__[\"funcs\"].isCollide(a1, t)) {\n              // console.log(objL[x][y])\n              // console.log('colliding;')\n              this.isCollidingX = true;\n            }\n\n            if (_funcs_js__WEBPACK_IMPORTED_MODULE_0__[\"funcs\"].isCollide(a2, t)) {\n              // console.log('colliding;')\n              this.isCollidingY = true;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  move2(worldOffset, enemies, map) {\n    if (this.alive) {\n      let targetX = this.getXTarget();\n      let targetY = this.getYTarget();\n      let dx = targetX - this.posX;\n      let dy = targetY - this.posY;\n      let hMovement = dx > 0 ? 1 : dx < 0 ? -1 : 0;\n      let vMovement = dy > 0 ? 1 : dy < 0 ? -1 : 0;\n      let distance = Math.round(Math.sqrt(dx * dx + dy * dy));\n\n      distance = this.clickTarget\n        ? distance - this.clickTarget.width * 2 + 5\n        : distance;\n      // console.log(this.attacking, this.hurt);\n      if (!this.attacking && !this.hurt) {\n        // console.log(distance, this.moveSpeed);\n        if (targetX && targetY && distance - this.moveSpeed > this.moveSpeed) {\n          let xSpeed = Math.round((dx / distance) * this.moveSpeed * hMovement);\n          let ySpeed = Math.round((dy / distance) * this.moveSpeed * vMovement);\n\n          let a1 = {\n            x: this.playerXPos + this.moveSpeed * hMovement,\n            y: this.playerYPos,\n            width: this.width * 1.5 - 12,\n            height: this.height * 1.5 - 6\n          };\n          let a2 = {\n            x: this.playerXPos,\n            y: this.playerYPos + this.moveSpeed * vMovement,\n            width: this.width * 1.5 - 12,\n            height: this.height * 1.5 - 6\n          };\n\n          this.isCollidingX = false;\n          this.isCollidingY = false;\n\n          for (let enemy of enemies) {\n            let b = {\n              x: enemy.realXPos,\n              y: enemy.realYPos,\n              width: enemy.width * 2,\n              height: enemy.height * 2\n            };\n\n            if (_funcs_js__WEBPACK_IMPORTED_MODULE_0__[\"funcs\"].isCollide(a1, b)) {\n              this.isCollidingX = true;\n            }\n\n            if (_funcs_js__WEBPACK_IMPORTED_MODULE_0__[\"funcs\"].isCollide(a2, b)) {\n              this.isCollidingY = true;\n            }\n          }\n\n          // console.log(objL, ts)\n\n          this.checkObjectsCollision(a1, a2, map);\n\n          if (this.isCollidingX && this.isCollidingY) {\n            this.stopMoving();\n          } else {\n            if (!this.isCollidingX) {\n              this.posX += xSpeed * hMovement;\n            } else if (ySpeed <= 0.5) {\n              this.stopMoving();\n              // this.posY += this.moveSpeed * vMovement;\n              // this.posX += 0.1 * -hMovement;\n            }\n            if (!this.isCollidingY) {\n              this.posY += ySpeed * vMovement;\n            } else if (xSpeed <= 0.5) {\n              this.stopMoving();\n              // this.posX += this.moveSpeed * hMovement;\n              // this.posY += 0.1 * -vMovement;\n            }\n          }\n\n          if (!this.moving) {\n            this.offsetFrameX = 0;\n          }\n\n          if (dx > 0) {\n            this.facingX = 1;\n          } else if (dx < 0) {\n            this.facingX = 0;\n          }\n\n          this.moving = true;\n        } else {\n          if (this.clickTarget !== null && this.clickTarget !== undefined) {\n            this.attack();\n          }\n          this.stopMoving();\n        }\n      }\n    }\n  }\n\n  move(worldOffset) {\n    if (this.alive) {\n      let hMovement = this.checkPressed(\"d\") - this.checkPressed(\"a\");\n      let vMovement = this.checkPressed(\"s\") - this.checkPressed(\"w\");\n      let attacked = this.checkPressed(\"e\") == 1;\n      let jumped = this.checkPressed(\" \") == 1;\n      let running = this.checkPressed(\"Shift\") == 1;\n      // let moved = this.checkPressed('d') || this.checkPressed('a') || this.checkPressed('s') || this.checkPressed('w');\n\n      // if (moved && !this.moving || !moved && this.moving) {\n      //     this.attacking = false;\n      // }\n      // console.log(this.keyPressed);\n      if (!this.attacking && !this.hurt) {\n        if (hMovement != 0 && vMovement != 0) {\n          if (running) {\n            this.moveSpeed = 20;\n          } else {\n            this.moveSpeed = 8;\n          }\n          let xySpeed = Math.round(\n            Math.sqrt((this.moveSpeed * this.moveSpeed) / 2)\n          );\n          let steph = xySpeed * hMovement;\n          let stepv = xySpeed * vMovement;\n\n          if (!this.moving) {\n            this.offsetFrameX = 0;\n          }\n\n          this.moving = true;\n          if (\n            this.posX + steph >= 0 &&\n            this.posX + steph + this.width * 2 <= worldOffset.w\n          ) {\n            this.posX += steph;\n            // this.posX += steph;\n          }\n          if (\n            this.posY + stepv >= 0 &&\n            this.posY + stepv + this.height * 2 < worldOffset.h\n          ) {\n            this.posY += stepv;\n          }\n          // this.posX += steph;\n          // this.posY += stepv;\n\n          // this.posY += stepv;\n        } else if (hMovement != 0 || vMovement != 0) {\n          if (!this.moving) {\n            this.offsetFrameX = 0;\n          }\n          this.moving = true;\n          var steph = hMovement * this.moveSpeed;\n          var stepv = vMovement * this.moveSpeed;\n\n          if (\n            this.posX + steph >= 0 &&\n            this.posX + steph + this.width * 2 <= worldOffset.w\n          ) {\n            this.posX += steph;\n          }\n\n          if (\n            this.posY + stepv >= 0 &&\n            this.posY + stepv + this.height * 2 < worldOffset.h\n          ) {\n            this.posY += stepv;\n          }\n          // this.posX += hMovement * this.moveSpeed;\n          // this.posY += vMovement * this.moveSpeed;\n        }\n\n        if (vMovement == 0 && hMovement == 0) {\n          if (this.moving) {\n            this.offsetFrameX = 0;\n          }\n          this.moving = false;\n        }\n\n        if (jumped && !this.jumping) {\n          this.jump();\n        }\n\n        this.facing = this.returnDirection();\n      }\n\n      if (attacked && !this.attacking) {\n        this.attack();\n      }\n    }\n  }\n\n  stopMoving() {\n    this.clickTarget = null;\n    this.realClickY = null;\n    this.realClickX = null;\n    this.moving = false;\n  }\n\n  startData() {\n    let updateData = this.updateData.bind(this);\n\n    this.updateTimer = setInterval(function() {\n      updateData();\n    }, 1000 / this.fps);\n  }\n\n  startAnimation() {\n    let getAnimationType = this.getAnimationType.bind(this);\n    let updateData = this.updateData.bind(this);\n    let updateAnimationFrames = this.updateAnimationFrames.bind(this);\n    clearInterval(this.animationTimer);\n\n    this.animationTimer = setInterval(function() {\n      getAnimationType();\n      updateData();\n      updateAnimationFrames();\n    }, 1000 / this.fps);\n    this.started = true;\n  }\n\n  updateData() {\n    if (!this.moving) {\n      if (this.stamina != this.maxStamina) {\n        this.stamina = this.stamina + 0.5;\n      }\n    }\n\n    if (this.stamina < 0) {\n      this.stamina = 0;\n    }\n    if (this.health < 0) {\n      this.health = 0;\n    }\n  }\n\n  updateAnimationFrames() {\n    let outOfBounds =\n      this.offsetFrameX >= this.animationFrames[this.offsetFrameY];\n\n    // if (this.attacking && outOfBounds) {\n    //     this.attacking = false;\n    // }\n\n    // if (this.jumping && outOfBounds) {\n    //     this.jumping = false;\n    // }\n\n    // if (this.hurting && outOfBounds) {\n    //     this.hurting = false;\n    // }\n\n    if (this.animationFrames[this.offsetFrameY] === undefined || outOfBounds) {\n      this.animationFrame = 0;\n      this.offsetFrameX = 0;\n    } else {\n      this.offsetFrameX += 1;\n    }\n  }\n\n  returnDirection() {\n    if (this.moving) {\n      this.action = \"running\";\n      // this.facingX = '';\n      if (this.checkPressed(\"d\")) {\n        this.facingX = 1;\n      } else if (this.checkPressed(\"a\")) {\n        this.facingX = 0;\n      }\n\n      this.facingY = \"\";\n    } else {\n      this.action = \"standing\";\n    }\n\n    return this.action + this.facingY + this.facingX;\n  }\n\n  getAnimationType() {\n    this.offsetFrameY = 0;\n    if (this.facingX == 0) {\n      this.offsetFrameY += 8;\n    }\n\n    if (!this.alive) {\n      this.offsetFrameY += 7;\n    } /*else if (this.jumping) {\n            this.offsetFrameY += 5;\n        } else if (this.attacking) {\n            this.offsetFrameY += 2 + this.attackCombo;\n        } else if (this.hurting) {\n            this.offsetFrameY += 6;\n        } */ else if (\n      this.moving\n    ) {\n      this.offsetFrameY += 1;\n    }\n  }\n\n  checkPressed(key) {\n    return this.keyPressed[key] ? 1 : 0;\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/Player.js\n");

/***/ }),

/***/ "./assets/js/Slime.js":
/*!****************************!*\
  !*** ./assets/js/Slime.js ***!
  \****************************/
/*! exports provided: Slime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Slime\", function() { return Slime; });\n/* harmony import */ var _Enemy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Enemy.js */ \"./assets/js/Enemy.js\");\n\n\n\n// import { TileSet } from './TileSet.js';\n// import { funcs } from './funcs.js';\n\nclass Slime extends _Enemy_js__WEBPACK_IMPORTED_MODULE_0__[\"Enemy\"] {\n  constructor(x, y, name, maxHealth, damage, speed, expGive) {\n    super(x, y, name, maxHealth, damage, speed, expGive);\n    this.image = \"slime_red.png\";\n    this.animationFrames = [3];\n    this.width = 16;\n    this.height = 16;\n    this.moveSpeed = 3;\n    this.attackCooldown = 3000;\n  }\n\n  getImage() {\n    return this.image;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getXPos() {\n    return this.xPos;\n  }\n\n  getYPos() {\n    return this.yPos;\n  }\n\n  startAnimation() {\n    let that = this;\n\n    if (!that.started) {\n      that.animationTimer = setInterval(function() {\n        that.updateAnimationFrames();\n      }, 1000 / 10);\n      that.started = true;\n    }\n  }\n\n  die() {\n    this.alive = false;\n  }\n\n  getHurt(damage) {\n    let that = this;\n\n    if (!that.hurt) {\n      console.log(`${that.name} was damaged ${damage} points!`);\n      that.hurt = true;\n      that.health -= damage;\n      that.hurtTimer = setTimeout(function() {\n        if (that.health <= 0) {\n          that.die();\n          console.log(`${that.name} died!`);\n        }\n        that.hurt = false;\n        console.log(\"not hurt\");\n      }, 1000);\n    }\n  }\n\n  updateAnimationFrames() {\n    let that = this;\n    let outOfBounds =\n      that.offsetFrameX >= that.animationFrames[that.offsetFrameY];\n\n    // if (that.attacking && outOfBounds) {\n    //     that.attacking = false;\n    // }\n\n    if (that.hurt && that.offsetFrameX % 2 != 0) {\n      that.offsetFrameY = 1;\n    } else {\n      that.offsetFrameY = 0;\n    }\n\n    if (that.animationFrames[that.offsetFrameY] === undefined || outOfBounds) {\n      that.animationFrame = 0;\n      that.offsetFrameX = 0;\n    } else {\n      that.offsetFrameX += 1;\n    }\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvU2xpbWUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvU2xpbWUuanM/OGRiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgRW5lbXkgfSBmcm9tIFwiLi9FbmVteS5qc1wiO1xuLy8gaW1wb3J0IHsgVGlsZVNldCB9IGZyb20gJy4vVGlsZVNldC5qcyc7XG4vLyBpbXBvcnQgeyBmdW5jcyB9IGZyb20gJy4vZnVuY3MuanMnO1xuXG5jbGFzcyBTbGltZSBleHRlbmRzIEVuZW15IHtcbiAgY29uc3RydWN0b3IoeCwgeSwgbmFtZSwgbWF4SGVhbHRoLCBkYW1hZ2UsIHNwZWVkLCBleHBHaXZlKSB7XG4gICAgc3VwZXIoeCwgeSwgbmFtZSwgbWF4SGVhbHRoLCBkYW1hZ2UsIHNwZWVkLCBleHBHaXZlKTtcbiAgICB0aGlzLmltYWdlID0gXCJzbGltZV9yZWQucG5nXCI7XG4gICAgdGhpcy5hbmltYXRpb25GcmFtZXMgPSBbM107XG4gICAgdGhpcy53aWR0aCA9IDE2O1xuICAgIHRoaXMuaGVpZ2h0ID0gMTY7XG4gICAgdGhpcy5tb3ZlU3BlZWQgPSAzO1xuICAgIHRoaXMuYXR0YWNrQ29vbGRvd24gPSAzMDAwO1xuICB9XG5cbiAgZ2V0SW1hZ2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW1hZ2U7XG4gIH1cblxuICBnZXRXaWR0aCgpIHtcbiAgICByZXR1cm4gdGhpcy53aWR0aDtcbiAgfVxuXG4gIGdldEhlaWdodCgpIHtcbiAgICByZXR1cm4gdGhpcy5oZWlnaHQ7XG4gIH1cblxuICBnZXRYUG9zKCkge1xuICAgIHJldHVybiB0aGlzLnhQb3M7XG4gIH1cblxuICBnZXRZUG9zKCkge1xuICAgIHJldHVybiB0aGlzLnlQb3M7XG4gIH1cblxuICBzdGFydEFuaW1hdGlvbigpIHtcbiAgICBsZXQgdGhhdCA9IHRoaXM7XG5cbiAgICBpZiAoIXRoYXQuc3RhcnRlZCkge1xuICAgICAgdGhhdC5hbmltYXRpb25UaW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGF0LnVwZGF0ZUFuaW1hdGlvbkZyYW1lcygpO1xuICAgICAgfSwgMTAwMCAvIDEwKTtcbiAgICAgIHRoYXQuc3RhcnRlZCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgZGllKCkge1xuICAgIHRoaXMuYWxpdmUgPSBmYWxzZTtcbiAgfVxuXG4gIGdldEh1cnQoZGFtYWdlKSB7XG4gICAgbGV0IHRoYXQgPSB0aGlzO1xuXG4gICAgaWYgKCF0aGF0Lmh1cnQpIHtcbiAgICAgIGNvbnNvbGUubG9nKGAke3RoYXQubmFtZX0gd2FzIGRhbWFnZWQgJHtkYW1hZ2V9IHBvaW50cyFgKTtcbiAgICAgIHRoYXQuaHVydCA9IHRydWU7XG4gICAgICB0aGF0LmhlYWx0aCAtPSBkYW1hZ2U7XG4gICAgICB0aGF0Lmh1cnRUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGF0LmhlYWx0aCA8PSAwKSB7XG4gICAgICAgICAgdGhhdC5kaWUoKTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhgJHt0aGF0Lm5hbWV9IGRpZWQhYCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhhdC5odXJ0ID0gZmFsc2U7XG4gICAgICAgIGNvbnNvbGUubG9nKFwibm90IGh1cnRcIik7XG4gICAgICB9LCAxMDAwKTtcbiAgICB9XG4gIH1cblxuICB1cGRhdGVBbmltYXRpb25GcmFtZXMoKSB7XG4gICAgbGV0IHRoYXQgPSB0aGlzO1xuICAgIGxldCBvdXRPZkJvdW5kcyA9XG4gICAgICB0aGF0Lm9mZnNldEZyYW1lWCA+PSB0aGF0LmFuaW1hdGlvbkZyYW1lc1t0aGF0Lm9mZnNldEZyYW1lWV07XG5cbiAgICAvLyBpZiAodGhhdC5hdHRhY2tpbmcgJiYgb3V0T2ZCb3VuZHMpIHtcbiAgICAvLyAgICAgdGhhdC5hdHRhY2tpbmcgPSBmYWxzZTtcbiAgICAvLyB9XG5cbiAgICBpZiAodGhhdC5odXJ0ICYmIHRoYXQub2Zmc2V0RnJhbWVYICUgMiAhPSAwKSB7XG4gICAgICB0aGF0Lm9mZnNldEZyYW1lWSA9IDE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoYXQub2Zmc2V0RnJhbWVZID0gMDtcbiAgICB9XG5cbiAgICBpZiAodGhhdC5hbmltYXRpb25GcmFtZXNbdGhhdC5vZmZzZXRGcmFtZVldID09PSB1bmRlZmluZWQgfHwgb3V0T2ZCb3VuZHMpIHtcbiAgICAgIHRoYXQuYW5pbWF0aW9uRnJhbWUgPSAwO1xuICAgICAgdGhhdC5vZmZzZXRGcmFtZVggPSAwO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGF0Lm9mZnNldEZyYW1lWCArPSAxO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgeyBTbGltZSB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./assets/js/Slime.js\n");

/***/ }),

/***/ "./assets/js/Tile.js":
/*!***************************!*\
  !*** ./assets/js/Tile.js ***!
  \***************************/
/*! exports provided: Tile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Tile\", function() { return Tile; });\n\n\n// import { Player } from './Player.js';\n// import { TileSet } from './TileSet.js';\n// import { funcs } from './funcs.js';\n\nclass Tile {\n  constructor(id, xOffset, yOffset, width, height, type) {\n    this.id = id;\n    this.xOffset = xOffset;\n    this.yOffset = yOffset;\n    this.width = width;\n    this.height = height;\n    this.type = type;\n    // var tileAmountWidth = Math.floor(width / tileWidth);\n    // this.lastgid = tileAmountWidth * Math.floor(height / tileHeight) + firstgid - 1;\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  getXOffset() {\n    return this.xOffset;\n  }\n\n  getYOffset() {\n    return this.yOffset;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getType() {\n    return this.type;\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvVGlsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2Fzc2V0cy9qcy9UaWxlLmpzPzAwOTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIGltcG9ydCB7IFBsYXllciB9IGZyb20gJy4vUGxheWVyLmpzJztcbi8vIGltcG9ydCB7IFRpbGVTZXQgfSBmcm9tICcuL1RpbGVTZXQuanMnO1xuLy8gaW1wb3J0IHsgZnVuY3MgfSBmcm9tICcuL2Z1bmNzLmpzJztcblxuY2xhc3MgVGlsZSB7XG4gIGNvbnN0cnVjdG9yKGlkLCB4T2Zmc2V0LCB5T2Zmc2V0LCB3aWR0aCwgaGVpZ2h0LCB0eXBlKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMueE9mZnNldCA9IHhPZmZzZXQ7XG4gICAgdGhpcy55T2Zmc2V0ID0geU9mZnNldDtcbiAgICB0aGlzLndpZHRoID0gd2lkdGg7XG4gICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAvLyB2YXIgdGlsZUFtb3VudFdpZHRoID0gTWF0aC5mbG9vcih3aWR0aCAvIHRpbGVXaWR0aCk7XG4gICAgLy8gdGhpcy5sYXN0Z2lkID0gdGlsZUFtb3VudFdpZHRoICogTWF0aC5mbG9vcihoZWlnaHQgLyB0aWxlSGVpZ2h0KSArIGZpcnN0Z2lkIC0gMTtcbiAgfVxuXG4gIGdldElkKCkge1xuICAgIHJldHVybiB0aGlzLmlkO1xuICB9XG5cbiAgZ2V0WE9mZnNldCgpIHtcbiAgICByZXR1cm4gdGhpcy54T2Zmc2V0O1xuICB9XG5cbiAgZ2V0WU9mZnNldCgpIHtcbiAgICByZXR1cm4gdGhpcy55T2Zmc2V0O1xuICB9XG5cbiAgZ2V0V2lkdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMud2lkdGg7XG4gIH1cblxuICBnZXRIZWlnaHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGVpZ2h0O1xuICB9XG5cbiAgZ2V0VHlwZSgpIHtcbiAgICByZXR1cm4gdGhpcy50eXBlO1xuICB9XG59XG5cbmV4cG9ydCB7IFRpbGUgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/js/Tile.js\n");

/***/ }),

/***/ "./assets/js/TileSet.js":
/*!******************************!*\
  !*** ./assets/js/TileSet.js ***!
  \******************************/
/*! exports provided: TileSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TileSet\", function() { return TileSet; });\n/* harmony import */ var _Tile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tile.js */ \"./assets/js/Tile.js\");\n\n\n// import { Player } from './Player.js';\n// import { TileSet } from './TileSet.js';\n\n\nclass TileSet {\n  constructor(firstgid, tileWidth, tileHeight, source, width, height) {\n    var tileAmountWidth = Math.floor(width / tileWidth);\n\n    this.firstgid = firstgid;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.source = source;\n    this.width = width;\n    this.height = height;\n    this.lastgid =\n      tileAmountWidth * Math.floor(height / tileHeight) + firstgid - 1;\n    this.tiles = [];\n  }\n\n  async loadTileSetImage() {\n    let mapimage = await window.fetch(\n      \"assets/img/map/overworld1.tsx\" /* + this.source*/\n    );\n    let text = await mapimage.text();\n    let xmlDoc = new window.DOMParser().parseFromString(text, \"text/xml\");\n    let tileCounter = 1;\n\n    // console.log(xmlDoc);\n    // console.log(xmlDoc.activeElement.children[0]);\n    this.mapImage = xmlDoc.activeElement.getElementsByTagName(\"image\")[0];\n\n    this.columns = xmlDoc.activeElement.getAttribute(\"columns\");\n    this.tilecount = xmlDoc.activeElement.getAttribute(\"tilecount\");\n    this.tilewidth = xmlDoc.activeElement.getAttribute(\"tilewidth\");\n    this.tileheight = xmlDoc.activeElement.getAttribute(\"tileheight\");\n    this.spacing = xmlDoc.activeElement.getAttribute(\"spacing\");\n    this.rows = this.tilecount / this.columns;\n    console.log(this);\n\n    // console.log(this.tilewidth * 39);\n\n    for (let y = 0; y < this.rows; y++) {\n      // this.tiles[y] = [];\n      for (let x = 0; x < this.columns; x++) {\n        let yOffset = y * (parseInt(this.tileheight) + parseInt(this.spacing));\n        let xOffset = x * (parseInt(this.tilewidth) + parseInt(this.spacing));\n\n        this.tiles[tileCounter] = new _Tile_js__WEBPACK_IMPORTED_MODULE_0__[\"Tile\"](\n          tileCounter + 1,\n          xOffset,\n          yOffset,\n          this.tilewidth,\n          this.tileheight,\n          null //this.layers[0].data[tileCounter]\n        );\n        tileCounter++;\n      }\n    }\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvVGlsZVNldC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2Fzc2V0cy9qcy9UaWxlU2V0LmpzP2U4M2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIGltcG9ydCB7IFBsYXllciB9IGZyb20gJy4vUGxheWVyLmpzJztcbi8vIGltcG9ydCB7IFRpbGVTZXQgfSBmcm9tICcuL1RpbGVTZXQuanMnO1xuaW1wb3J0IHsgVGlsZSB9IGZyb20gXCIuL1RpbGUuanNcIjtcblxuY2xhc3MgVGlsZVNldCB7XG4gIGNvbnN0cnVjdG9yKGZpcnN0Z2lkLCB0aWxlV2lkdGgsIHRpbGVIZWlnaHQsIHNvdXJjZSwgd2lkdGgsIGhlaWdodCkge1xuICAgIHZhciB0aWxlQW1vdW50V2lkdGggPSBNYXRoLmZsb29yKHdpZHRoIC8gdGlsZVdpZHRoKTtcblxuICAgIHRoaXMuZmlyc3RnaWQgPSBmaXJzdGdpZDtcbiAgICB0aGlzLnRpbGVXaWR0aCA9IHRpbGVXaWR0aDtcbiAgICB0aGlzLnRpbGVIZWlnaHQgPSB0aWxlSGVpZ2h0O1xuICAgIHRoaXMuc291cmNlID0gc291cmNlO1xuICAgIHRoaXMud2lkdGggPSB3aWR0aDtcbiAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcbiAgICB0aGlzLmxhc3RnaWQgPVxuICAgICAgdGlsZUFtb3VudFdpZHRoICogTWF0aC5mbG9vcihoZWlnaHQgLyB0aWxlSGVpZ2h0KSArIGZpcnN0Z2lkIC0gMTtcbiAgICB0aGlzLnRpbGVzID0gW107XG4gIH1cblxuICBhc3luYyBsb2FkVGlsZVNldEltYWdlKCkge1xuICAgIGxldCBtYXBpbWFnZSA9IGF3YWl0IHdpbmRvdy5mZXRjaChcbiAgICAgIFwiYXNzZXRzL2ltZy9tYXAvb3ZlcndvcmxkMS50c3hcIiAvKiArIHRoaXMuc291cmNlKi9cbiAgICApO1xuICAgIGxldCB0ZXh0ID0gYXdhaXQgbWFwaW1hZ2UudGV4dCgpO1xuICAgIGxldCB4bWxEb2MgPSBuZXcgd2luZG93LkRPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyh0ZXh0LCBcInRleHQveG1sXCIpO1xuICAgIGxldCB0aWxlQ291bnRlciA9IDE7XG5cbiAgICAvLyBjb25zb2xlLmxvZyh4bWxEb2MpO1xuICAgIC8vIGNvbnNvbGUubG9nKHhtbERvYy5hY3RpdmVFbGVtZW50LmNoaWxkcmVuWzBdKTtcbiAgICB0aGlzLm1hcEltYWdlID0geG1sRG9jLmFjdGl2ZUVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpbWFnZVwiKVswXTtcblxuICAgIHRoaXMuY29sdW1ucyA9IHhtbERvYy5hY3RpdmVFbGVtZW50LmdldEF0dHJpYnV0ZShcImNvbHVtbnNcIik7XG4gICAgdGhpcy50aWxlY291bnQgPSB4bWxEb2MuYWN0aXZlRWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJ0aWxlY291bnRcIik7XG4gICAgdGhpcy50aWxld2lkdGggPSB4bWxEb2MuYWN0aXZlRWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJ0aWxld2lkdGhcIik7XG4gICAgdGhpcy50aWxlaGVpZ2h0ID0geG1sRG9jLmFjdGl2ZUVsZW1lbnQuZ2V0QXR0cmlidXRlKFwidGlsZWhlaWdodFwiKTtcbiAgICB0aGlzLnNwYWNpbmcgPSB4bWxEb2MuYWN0aXZlRWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJzcGFjaW5nXCIpO1xuICAgIHRoaXMucm93cyA9IHRoaXMudGlsZWNvdW50IC8gdGhpcy5jb2x1bW5zO1xuICAgIGNvbnNvbGUubG9nKHRoaXMpO1xuXG4gICAgLy8gY29uc29sZS5sb2codGhpcy50aWxld2lkdGggKiAzOSk7XG5cbiAgICBmb3IgKGxldCB5ID0gMDsgeSA8IHRoaXMucm93czsgeSsrKSB7XG4gICAgICAvLyB0aGlzLnRpbGVzW3ldID0gW107XG4gICAgICBmb3IgKGxldCB4ID0gMDsgeCA8IHRoaXMuY29sdW1uczsgeCsrKSB7XG4gICAgICAgIGxldCB5T2Zmc2V0ID0geSAqIChwYXJzZUludCh0aGlzLnRpbGVoZWlnaHQpICsgcGFyc2VJbnQodGhpcy5zcGFjaW5nKSk7XG4gICAgICAgIGxldCB4T2Zmc2V0ID0geCAqIChwYXJzZUludCh0aGlzLnRpbGV3aWR0aCkgKyBwYXJzZUludCh0aGlzLnNwYWNpbmcpKTtcblxuICAgICAgICB0aGlzLnRpbGVzW3RpbGVDb3VudGVyXSA9IG5ldyBUaWxlKFxuICAgICAgICAgIHRpbGVDb3VudGVyICsgMSxcbiAgICAgICAgICB4T2Zmc2V0LFxuICAgICAgICAgIHlPZmZzZXQsXG4gICAgICAgICAgdGhpcy50aWxld2lkdGgsXG4gICAgICAgICAgdGhpcy50aWxlaGVpZ2h0LFxuICAgICAgICAgIG51bGwgLy90aGlzLmxheWVyc1swXS5kYXRhW3RpbGVDb3VudGVyXVxuICAgICAgICApO1xuICAgICAgICB0aWxlQ291bnRlcisrO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgeyBUaWxlU2V0IH07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./assets/js/TileSet.js\n");

/***/ }),

/***/ "./assets/js/funcs.js":
/*!****************************!*\
  !*** ./assets/js/funcs.js ***!
  \****************************/
/*! exports provided: funcs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"funcs\", function() { return funcs; });\n\n\nlet funcs = {};\n\nfuncs.bind = function(el, action, method) {\n  let element = null;\n\n  if (typeof el == \"string\") {\n    element = document.getElementById(el);\n  } else {\n    element = el;\n  }\n  element.addEventListener(action, method);\n};\n\nString.prototype.toCamelCase = function() {\n  return this.valueOf()\n    .replace(/\\s(.)/g, function($1) {\n      return $1.toUpperCase();\n    })\n    .replace(/\\s/g, \"\")\n    .replace(/^(.)/, function($1) {\n      return $1.toLowerCase();\n    });\n};\n\nfuncs.isCollide = function(a, b) {\n  return !(\n    a.y + a.height < b.y ||\n    a.y > b.y + b.height ||\n    a.x + a.width < b.x ||\n    a.x > b.x + b.width\n  );\n};\n\nfuncs.clone = function(obj) {\n  if (null == obj || \"object\" != typeof obj) {\n    return obj;\n  }\n  var copy = new obj.constructor();\n\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) {\n      copy[attr] = obj[attr];\n    }\n  }\n  return copy;\n};\n\n// funcs.prototype.binds = function(el, action, method) {\n//     let element = null;\n\n//     if (typeof el == 'string') {\n//         element = document.getElementById(el);\n//     }\n//     element.addEventListener(action, method);\n// };\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvZnVuY3MuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvZnVuY3MuanM/YTVjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubGV0IGZ1bmNzID0ge307XG5cbmZ1bmNzLmJpbmQgPSBmdW5jdGlvbihlbCwgYWN0aW9uLCBtZXRob2QpIHtcbiAgbGV0IGVsZW1lbnQgPSBudWxsO1xuXG4gIGlmICh0eXBlb2YgZWwgPT0gXCJzdHJpbmdcIikge1xuICAgIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbCk7XG4gIH0gZWxzZSB7XG4gICAgZWxlbWVudCA9IGVsO1xuICB9XG4gIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihhY3Rpb24sIG1ldGhvZCk7XG59O1xuXG5TdHJpbmcucHJvdG90eXBlLnRvQ2FtZWxDYXNlID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLnZhbHVlT2YoKVxuICAgIC5yZXBsYWNlKC9cXHMoLikvZywgZnVuY3Rpb24oJDEpIHtcbiAgICAgIHJldHVybiAkMS50b1VwcGVyQ2FzZSgpO1xuICAgIH0pXG4gICAgLnJlcGxhY2UoL1xccy9nLCBcIlwiKVxuICAgIC5yZXBsYWNlKC9eKC4pLywgZnVuY3Rpb24oJDEpIHtcbiAgICAgIHJldHVybiAkMS50b0xvd2VyQ2FzZSgpO1xuICAgIH0pO1xufTtcblxuZnVuY3MuaXNDb2xsaWRlID0gZnVuY3Rpb24oYSwgYikge1xuICByZXR1cm4gIShcbiAgICBhLnkgKyBhLmhlaWdodCA8IGIueSB8fFxuICAgIGEueSA+IGIueSArIGIuaGVpZ2h0IHx8XG4gICAgYS54ICsgYS53aWR0aCA8IGIueCB8fFxuICAgIGEueCA+IGIueCArIGIud2lkdGhcbiAgKTtcbn07XG5cbmZ1bmNzLmNsb25lID0gZnVuY3Rpb24ob2JqKSB7XG4gIGlmIChudWxsID09IG9iaiB8fCBcIm9iamVjdFwiICE9IHR5cGVvZiBvYmopIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG4gIHZhciBjb3B5ID0gbmV3IG9iai5jb25zdHJ1Y3RvcigpO1xuXG4gIGZvciAodmFyIGF0dHIgaW4gb2JqKSB7XG4gICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShhdHRyKSkge1xuICAgICAgY29weVthdHRyXSA9IG9ialthdHRyXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGNvcHk7XG59O1xuXG4vLyBmdW5jcy5wcm90b3R5cGUuYmluZHMgPSBmdW5jdGlvbihlbCwgYWN0aW9uLCBtZXRob2QpIHtcbi8vICAgICBsZXQgZWxlbWVudCA9IG51bGw7XG5cbi8vICAgICBpZiAodHlwZW9mIGVsID09ICdzdHJpbmcnKSB7XG4vLyAgICAgICAgIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbCk7XG4vLyAgICAgfVxuLy8gICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihhY3Rpb24sIG1ldGhvZCk7XG4vLyB9O1xuXG5leHBvcnQgeyBmdW5jcyB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/js/funcs.js\n");

/***/ }),

/***/ "./assets/js/main.js":
/*!***************************!*\
  !*** ./assets/js/main.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Game_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game.js */ \"./assets/js/Game.js\");\n/* harmony import */ var _Player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Player.js */ \"./assets/js/Player.js\");\n/* harmony import */ var _Map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Map.js */ \"./assets/js/Map.js\");\n\n\n\n\n\n\nlet game = new _Game_js__WEBPACK_IMPORTED_MODULE_0__[\"Game\"](800, 600);\nlet map = new _Map_js__WEBPACK_IMPORTED_MODULE_2__[\"Map\"](\"assets/img/map/overworld1.json\");\n\nmap.loadMap().then(function() {\n  console.log(\"map loaded\");\n  game.map = map;\n\n  let initGame = game.init.bind(game);\n\n  initGame();\n  // game.init();\n  window.addEventListener(\"keyup\", function(e) {\n    game.player.pressKey(e.key, false);\n  });\n  window.addEventListener(\"keydown\", function(e) {\n    game.player.pressKey(e.key, true);\n  });\n  // window.addEventListener('mousedown', function(e) { game.player.mouseDown(e, true); });\n  // window.addEventListener('mouseup', function(e) { game.player.mouseUp(e, true); });\n  //     game.init();\n  //     window.addEventListener('keyup', function(e) { game.player.pressKey(e.key, false); });\n  //     window.addEventListener('keydown', function(e) { game.player.pressKey(e.key, true); });\n  //     console.log(map.xmlDoc);\n});\n\n/*app.keyPressed[e.key] = false;*/\n/*app.keyPressed[e.key] = true;*/\n\n// var xmlDoc = window.fetch(\"assets/img/map/map.xml\")\n//     .then(response => response.text())\n//     .then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\"))\n//     .then(data => data);\n\n// console.log(xmlDoc);\n// game.start();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvbWFpbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2Fzc2V0cy9qcy9tYWluLmpzPzQ1ZDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IEdhbWUgfSBmcm9tIFwiLi9HYW1lLmpzXCI7XG5pbXBvcnQgeyBQbGF5ZXIgfSBmcm9tIFwiLi9QbGF5ZXIuanNcIjtcbmltcG9ydCB7IE1hcCB9IGZyb20gXCIuL01hcC5qc1wiO1xuXG5sZXQgZ2FtZSA9IG5ldyBHYW1lKDgwMCwgNjAwKTtcbmxldCBtYXAgPSBuZXcgTWFwKFwiYXNzZXRzL2ltZy9tYXAvb3ZlcndvcmxkMS5qc29uXCIpO1xuXG5tYXAubG9hZE1hcCgpLnRoZW4oZnVuY3Rpb24oKSB7XG4gIGNvbnNvbGUubG9nKFwibWFwIGxvYWRlZFwiKTtcbiAgZ2FtZS5tYXAgPSBtYXA7XG5cbiAgbGV0IGluaXRHYW1lID0gZ2FtZS5pbml0LmJpbmQoZ2FtZSk7XG5cbiAgaW5pdEdhbWUoKTtcbiAgLy8gZ2FtZS5pbml0KCk7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgZnVuY3Rpb24oZSkge1xuICAgIGdhbWUucGxheWVyLnByZXNzS2V5KGUua2V5LCBmYWxzZSk7XG4gIH0pO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgZnVuY3Rpb24oZSkge1xuICAgIGdhbWUucGxheWVyLnByZXNzS2V5KGUua2V5LCB0cnVlKTtcbiAgfSk7XG4gIC8vIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBmdW5jdGlvbihlKSB7IGdhbWUucGxheWVyLm1vdXNlRG93bihlLCB0cnVlKTsgfSk7XG4gIC8vIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZnVuY3Rpb24oZSkgeyBnYW1lLnBsYXllci5tb3VzZVVwKGUsIHRydWUpOyB9KTtcbiAgLy8gICAgIGdhbWUuaW5pdCgpO1xuICAvLyAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgZnVuY3Rpb24oZSkgeyBnYW1lLnBsYXllci5wcmVzc0tleShlLmtleSwgZmFsc2UpOyB9KTtcbiAgLy8gICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZnVuY3Rpb24oZSkgeyBnYW1lLnBsYXllci5wcmVzc0tleShlLmtleSwgdHJ1ZSk7IH0pO1xuICAvLyAgICAgY29uc29sZS5sb2cobWFwLnhtbERvYyk7XG59KTtcblxuLyphcHAua2V5UHJlc3NlZFtlLmtleV0gPSBmYWxzZTsqL1xuLyphcHAua2V5UHJlc3NlZFtlLmtleV0gPSB0cnVlOyovXG5cbi8vIHZhciB4bWxEb2MgPSB3aW5kb3cuZmV0Y2goXCJhc3NldHMvaW1nL21hcC9tYXAueG1sXCIpXG4vLyAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpKVxuLy8gICAgIC50aGVuKHN0ciA9PiAobmV3IHdpbmRvdy5ET01QYXJzZXIoKSkucGFyc2VGcm9tU3RyaW5nKHN0ciwgXCJ0ZXh0L3htbFwiKSlcbi8vICAgICAudGhlbihkYXRhID0+IGRhdGEpO1xuXG4vLyBjb25zb2xlLmxvZyh4bWxEb2MpO1xuLy8gZ2FtZS5zdGFydCgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/js/main.js\n");

/***/ })

/******/ });