/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./assets/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/Enemy.js":
/*!****************************!*\
  !*** ./assets/js/Enemy.js ***!
  \****************************/
/*! exports provided: Enemy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Enemy\", function() { return Enemy; });\n/* harmony import */ var _funcs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./funcs.js */ \"./assets/js/funcs.js\");\n\n\n// import { Player } from './Player.js';\n// import { TileSet } from './TileSet.js';\n\n\nclass Enemy {\n    constructor(x, y, name, maxHealth, damage, speed, expGive) {\n        this.name = name;\n        this.maxHealth = maxHealth;\n        this.health = maxHealth;\n        this.damage = damage;\n        this.speed = speed;\n        this.expGive = expGive;\n        this.xPos = x;\n        this.yPos = y;\n        // this.image = 'slime_red.png';\n        this.offsetFrameY = 0;\n        this.offsetFrameX = 0;\n        this.animationFrames = [\n            3\n        ];\n        this.width = 16;\n        this.height = 16;\n        this.hurtTimer = null;\n        this.alive = true;\n        this.hurt = false;\n        this.missiles = [];\n        this.attacking = false;\n        this.attackCooldown = 2000;\n        this.moveTimer = null;\n        this.canMove = true;\n        this.isCollidingX = false;\n        this.isCollidingY = false;\n    }\n\n    getImage() {\n        return this.image;\n    }\n\n    getWidth() {\n        return this.width;\n    }\n\n    getHeight() {\n        return this.height;\n    }\n\n    calculateAttackCooldown() {\n        return this.attackCooldown;\n    }\n\n    move(player, map) {\n        let dx =  player.posX - this.getXPos();\n        let dy =  player.posY - this.getYPos();\n        let distance = Math.round(Math.sqrt(dx * dx + dy * dy));\n\n        if (distance < 300 && distance > 150) {\n            if (!this.hurt) {\n                this.doMove(distance, dx, dy, map);\n            }\n        } else if (distance > 300) {\n            this.moveRandom();\n        }\n    }\n\n    checkObjectsCollision(a1, a2, map) {\n        let objL = map.plane.objects;\n        let ts = map.tileSets[0].tiles;\n\n        // console.log(map);\n        for (let x = map.startX; x < map.endX; x++) {\n            for (let y = map.startY; y < map.endY; y++) {\n                if (objL[x][y]) {\n                    let tileType = objL[x][y].getType();\n\n                    if (tileType != 0) {\n                        let t = {\n                            x: objL[x][y].xOffset + map.worldXOffset,\n                            y: objL[x][y].yOffset + map.worldYOffset,\n                            width: objL[x][y].width,\n                            height: objL[x][y].height\n                        };\n\n                        if (_funcs_js__WEBPACK_IMPORTED_MODULE_0__[\"funcs\"].isCollide(a1, t)) {\n                            // console.log(objL[x][y])\n                            // console.log('colliding;')\n                            this.isCollidingX = true;\n                        }\n\n                        if (_funcs_js__WEBPACK_IMPORTED_MODULE_0__[\"funcs\"].isCollide(a2, t)) {\n                            // console.log('colliding;')\n                            this.isCollidingY = true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    doMove(distance, dx, dy, map) {\n        if (distance > this.moveSpeed) {\n            clearInterval(this.moveTimer);\n            let hMovement = dx > 0 ? 1 : dx < 0 ? -1 : 0;\n            let vMovement = dy > 0 ? 1 : dy < 0 ? -1 : 0;\n            let xSpeed = Math.round((dx / distance) * this.moveSpeed * hMovement);\n            let ySpeed = Math.round((dy / distance) * this.moveSpeed * vMovement);\n\n\n            let a1 = {\n                x: this.getXPos() + map.worldXOffset + (this.moveSpeed * hMovement),\n                y: this.getYPos() + map.worldYOffset,\n                width: this.width * 2,\n                height: this.height * 2\n            };\n            let a2 = {\n                x: this.getXPos() + map.worldXOffset,\n                y: this.getYPos() + map.worldYOffset + (this.moveSpeed * vMovement),\n                width: this.width * 2,\n                height: this.height * 2\n            };\n\n            this.checkObjectsCollision(a1, a2, map);\n\n\n            // if (this.isCollidingX && this.isCollidingY) {\n            //     // this.stopMoving();\n            // } else {\n                if (!this.isCollidingX) {\n                    this.xPos += xSpeed * hMovement;\n                    // this.posX += xSpeed * hMovement;\n                } else if (ySpeed <= 0.5) {\n                    // this.stopMoving();\n                    // this.posY += this.moveSpeed * vMovement;\n                    // this.posX += 0.1 * -hMovement;\n                }\n                if (!this.isCollidingY) {\n                    this.yPos += ySpeed * vMovement;\n                    // this.posY += ySpeed * vMovement;\n                } else if (xSpeed <= 0.5) {\n                    // this.stopMoving();\n                    // this.posX += this.moveSpeed * hMovement;\n                    // this.posY += 0.1 * -vMovement;\n                }\n            // }\n\n            this.moving = true;\n        } else {\n            this.moving = false;\n        }\n    }\n\n    moveRandom() {\n        let canMove = this.canMove;\n\n        if (canMove) {\n            let r = Math.random();\n            let plusOrMinus = r < 0.33 ? -1 : r > 0.66 ? 1 : 0;\n            let targetX = this.getXPos() + 100 * plusOrMinus;\n\n            r = Math.random();\n            plusOrMinus = r < 0.33 ? -1 : r > 0.66 ? 1 : 0;\n            let targetY = this.getYPos() + 100 * plusOrMinus;\n            let moveLoop = this.moveLoop.bind(this);\n            let moveTimer = this.moveTimer;\n            let setCanMove = this.setCanMove.bind(this);\n            let target = {\n                targetX: targetX,\n                targetY: targetY,\n                posX: this.getXPos(),\n                posY: this.getYPos()\n            };\n\n            this.canMove = false;\n            this.moveTimeout = setTimeout(function() {\n                clearInterval(moveTimer);\n                setCanMove();\n            }, 5000);\n\n            this.moveTimer = setInterval(function() {\n                moveLoop(target);\n            }, 50);\n        }\n    }\n\n    setCanMove() {\n        this.canMove = true;\n    }\n\n    moveLoop(target) {\n        let dx = target.targetX - this.xPos;\n        let dy = target.targetY - this.yPos;\n        let hMovement = dx > 0 ? 1 : dx < 0 ? -1 : 0;\n        let vMovement = dy > 0 ? 1 : dy < 0 ? -1 : 0;\n        let distance = Math.sqrt(dx * dx + dy * dy);\n        let xSpeed = (dx / distance) * this.moveSpeed * hMovement;\n        let ySpeed = (dy / distance) * this.moveSpeed * vMovement;\n\n        if (distance <= this.moveSpeed) {\n            clearInterval(this.moveTimer);\n        } else if (distance > this.moveSpeed) {\n            this.xPos += xSpeed * hMovement;\n            this.yPos += ySpeed * vMovement;\n        }\n    }\n\n    setAttacking() {\n        this.attacking = true;\n    }\n\n    setNotAttacking() {\n        this.attacking = false;\n    }\n\n    checkAttack(player) {\n        if (!this.attacking && player.alive && !this.hurt) {\n            let dx =  player.posX - this.getXPos();\n            let dy =  player.posY - this.getYPos();\n            let distance = Math.round(Math.sqrt(dx * dx + dy * dy));\n            let setNotAttacking = this.setNotAttacking.bind(this);\n\n            if (distance < 160) {\n                this.doAttack(player, dy, dx);\n                this.attackTimeout = setTimeout(function() {\n                    setNotAttacking();\n                }, this.calculateAttackCooldown());\n                this.attacking = true;\n            }\n        }\n    }\n\n    getMissileImage(dy, dx) {\n        let image = 'enemies/slime_red_missile';\n        let theta = Math.atan2(dy, dx); // range (-PI, PI]\n        let range = 22.5;\n\n        theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n\n\n        if (theta <= 0 + range && theta > 0 - range) { // east\n            image += '_east';\n        } else if (theta <= 45 + range && theta > 45 - range) { // south-east\n            image += '_south_east';\n        } else if (theta <= 90 + range && theta > 90 - range) { // south\n            image += '_south';\n        } else if (theta <= 135 + range && theta > 135 - range) { // south-west\n            image += '_south_west';\n        } else if ((theta <= 180 && theta > 180 - range) || (theta <= -180 + range && theta > -180)) { // west\n            image += '_west';\n        } else if (theta <= -135 + range && theta > -135 - range) { // south-west\n            image += '_north_west';\n        } else if (theta <= -90 + range && theta > -90 - range) { // south-west\n            image += '_north';\n        } else if (theta <= -45 + range && theta > -45 - range) { // south-west\n            image += '_north_east';\n        } else {\n            image += '_east';\n        }\n\n        image += '.png';\n        return image;\n    }\n\n    doAttack(player, dy, dx) {\n        let missile = {\n            targetX: player.posX + dx - 16,\n            targetY: player.posY + dy - 16,\n            posX: this.getXPos() - 12,\n            posY: this.getYPos() - 16,\n            moveSpeed: 15,\n            width: 16,\n            height: 16,\n            image: this.getMissileImage(dy, dx),\n            hit: false\n        };\n        let attackLoop = this.attackLoop.bind(this);\n        let missileId = this.missiles.push(missile);\n\n        missile.id = missileId;\n        let attackTimer = setInterval(function() {\n            attackLoop(missile, attackTimer);\n        }, 100);\n    }\n\n    attackLoop(missile, timer) {\n        let dx = missile.targetX - missile.posX;\n        let dy = missile.targetY - missile.posY;\n        let hMovement = dx > 0 ? 1 : dx < 0 ? -1 : 0;\n        let vMovement = dy > 0 ? 1 : dy < 0 ? -1 : 0;\n\n        let distance = Math.sqrt(dx * dx + dy * dy);\n\n        let xSpeed = (dx / distance) * missile.moveSpeed * hMovement;\n        let ySpeed = (dy / distance) * missile.moveSpeed * vMovement;\n\n        if (distance <= missile.moveSpeed || missile.hit) {\n            for (let m in this.missiles) {\n                if (this.missiles[m].id == missile.id) {\n                    this.missiles.splice(m, 1);\n                    clearInterval(timer);\n                }\n            }\n        } else if (distance > missile.moveSpeed) {\n            missile.posX += xSpeed * hMovement;\n            missile.posY += ySpeed * vMovement;\n        }\n    }\n\n    getXPos() {\n        return this.xPos;\n    }\n\n    getYPos() {\n        return this.yPos;\n    }\n\n    getXCenterPos() {\n        return this.xPos + this.width * 2 / 2;\n    }\n\n    getYCenterPos() {\n        return this.yPos + this.height * 2 / 2;\n    }\n\n    startAnimation() {\n        let that = this;\n\n        if (!that.started) {\n            that.animationTimer = setInterval(function() {\n                that.updateAnimationFrames();\n            }, 1000 / 10);\n            that.started = true;\n        }\n    }\n\n    die() {\n        this.alive = false;\n    }\n\n    getHurt(damage) {\n        let that = this;\n\n        if (!that.hurt) {\n            console.log(`${that.name} was damaged ${damage} points!`);\n            that.hurt = true;\n            that.health -= damage;\n            that.hurtTimer = setTimeout(function() {\n                if (that.health <= 0) {\n                    that.die();\n                    console.log(`${that.name} died!`);\n                }\n                that.hurt = false;\n                console.log('not hurt');\n            }, 200);\n        }\n    }\n\n    updateAnimationFrames() {\n        let that = this;\n        let outOfBounds = that.offsetFrameX >= that.animationFrames[that.offsetFrameY];\n\n        // if (that.attacking && outOfBounds) {\n        //     that.attacking = false;\n        // }\n\n        if (that.hurt && that.offsetFrameX % 2 != 0) {\n            that.offsetFrameY = 1;\n        } else {\n            that.offsetFrameY = 0;\n        }\n\n        if (that.animationFrames[that.offsetFrameY] === undefined || outOfBounds) {\n            that.animationFrame = 0;\n            that.offsetFrameX = 0;\n        } else {\n            that.offsetFrameX += 1;\n        }\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/Enemy.js\n");

/***/ }),

/***/ "./assets/js/Game.js":
/*!***************************!*\
  !*** ./assets/js/Game.js ***!
  \***************************/
/*! exports provided: Game */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Game\", function() { return Game; });\n/* harmony import */ var _Player_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Player.js */ \"./assets/js/Player.js\");\n/* harmony import */ var _Enemy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Enemy.js */ \"./assets/js/Enemy.js\");\n/* harmony import */ var _Slime_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Slime.js */ \"./assets/js/Slime.js\");\n/* harmony import */ var _funcs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./funcs.js */ \"./assets/js/funcs.js\");\n\n\n\n\n\n\n\nclass Game {\n    constructor(width, height) {\n        this.barWidth = 200;\n        this.barHeight = 10;\n        this.started = false;\n        this.plane = [];\n        this.player = null;\n        this.image = null;\n        this.imageUrls = [\n            'adventurer/adventurer.png',\n            'enemies/slime_red.png',\n            'cross.png',\n            'glove.png',\n            'sword.png',\n            'enemies/slime_red_missile_east.png',\n            'enemies/slime_red_missile_south_east.png',\n            'enemies/slime_red_missile_south.png',\n            'enemies/slime_red_missile_south_west.png',\n            'enemies/slime_red_missile_west.png',\n            'enemies/slime_red_missile_north_west.png',\n            'enemies/slime_red_missile_north.png',\n            'enemies/slime_red_missile_north_east.png'\n        ];\n        this.images = {};\n        this.enemies = [];\n        this.directions = [\n            'standingnorth',\n            'standingwest',\n            'standingeast',\n            'standingsouth',\n            'runningeast1',\n            'runningeast2'\n        ];\n        this.width = width;\n        this.height = height;\n        this.canvas = document.createElement('canvas');\n        this.canvas.id = 'CursorLayer';\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n        this.canvas.style.zIndex = 8;\n        this.canvas.style.margin = 'auto';\n        this.canvas.style.display = 'block';\n        this.canvas.style.border = '1px solid #bbb';\n        this.fps = 20;\n        this.timer = null;\n        this.map = null;\n        this.mouseX;\n        this.mouseY;\n    }\n\n    init() {\n        if (this.map.layers.ground) {\n            let startPoint = this.map.dataLayer.startingPoint;\n            let mouseMove = this.mouseMove.bind(this);\n\n            this.imageUrls.push('map/' + this.map.tileSets[0].mapImage.getAttribute('source'));\n            this.map.realWidth = this.map.width * this.map.layers.ground.tileWidth;\n            this.map.realHeight = this.map.height * this.map.layers.ground.tileHeight;\n\n            this.stop();\n            this.player = new _Player_js__WEBPACK_IMPORTED_MODULE_0__[\"Player\"](startPoint.x, startPoint.y);\n            this.enemies.push(new _Slime_js__WEBPACK_IMPORTED_MODULE_2__[\"Slime\"](\n                startPoint.x + 200,\n                startPoint.y + 200,\n                'redSlime',\n                20,\n                10,\n                1,\n                100)\n            );\n            // this.enemies.push(new Slime(\n            //     startPoint.x + 300,\n            //     startPoint.y + 300,\n            //     'redSlime',\n            //     20,\n            //     10,\n            //     1,\n            //     10)\n            // );\n            this.centerCamera();\n\n            let player = this.player;\n            let map = this.map;\n\n            window.addEventListener('mousedown', function(e) { player.mouseDown(e, map.worldXOffset, map.worldYOffset); });\n            window.addEventListener('mouseup', function(e) { player.mouseUp(e, true); });\n            window.addEventListener('mousemove', function(e) { mouseMove(e, true); });\n\n            document.getElementById('plane').appendChild(this.canvas);\n            this.ctx = this.canvas.getContext('2d');\n\n            let loadImage = this.loadImage.bind(this);\n\n            loadImage();\n            // this.loadImage();\n        } else {\n            console.log('No ground layer found');\n        }\n    }\n\n    mouseMove(e) {\n        let el = e.target;\n\n        if (el.getTagName = \"canvas\") {\n            this.mouseX = (e.clientX - el.offsetLeft);\n            this.mouseY = (e.clientY - el.offsetTop);\n        }\n    }\n\n    stop() {\n        if (this.started) {\n            clearInterval(this.timer);\n            this.started = false;\n        }\n    }\n\n    start() {\n        let redraw = this.redraw.bind(this);\n        let startAnimation = this.player.startAnimation.bind(this.player);\n        let startData = this.player.startData.bind(this.player);\n\n        startData();\n        startAnimation();\n        for (let enemy of this.enemies) {\n            enemy.startAnimation();\n        }\n\n\n        if (!this.started) {\n            this.timer = setInterval(function() {\n                redraw();\n            // }, 1500);\n            }, 1000 / this.fps);\n            this.started = true;\n        }\n    }\n\n    redraw() {\n        this.getMapScope();\n        this.player.move2({\n            x: this.map.worldXOffset,\n            y: this.map.worldYOffset,\n            w: this.map.realWidth,\n            h: this.map.realHeight\n        }, this.enemies, this.map);\n        this.checkEnemies();\n        this.mapScroll();\n        this.draw();\n    }\n\n    checkEnemies() {\n        for (let enemy in this.enemies) {\n            this.enemies[enemy].realXPos = this.enemies[enemy].getXPos() - 16 + this.map.worldXOffset;\n            this.enemies[enemy].realYPos = this.enemies[enemy].getYPos() - 16 + this.map.worldYOffset;\n            this.enemies[enemy].realXCenterPos = this.enemies[enemy].getXCenterPos() + this.map.worldXOffset;\n            this.enemies[enemy].realYCenterPos = this.enemies[enemy].getYCenterPos() + this.map.worldYOffset;\n            if (!this.enemies[enemy].alive) {\n                this.player.getxp(this.enemies[enemy].expGive);\n                this.enemies.splice(enemy, 1);\n            } else {\n                this.enemies[enemy].move(this.player, this.map);\n                this.enemies[enemy].checkAttack(this.player);\n            }\n        }\n    }\n\n    centerCamera() {\n        this.map.worldXOffset = -this.player.posX + this.width / 2 - this.player.height;\n        this.map.worldYOffset = -this.player.posY + this.height / 2 - this.player.height;\n    }\n\n    mapScroll() {\n        let margin = 300;\n        let realYPos = this.player.posY + this.map.worldYOffset;\n        let realXPos = this.player.posX + this.map.worldXOffset;\n        let isBelow = realYPos > this.height - margin ? 1 : 0;\n        let isAbove = realYPos + this.player.height * 2 < margin ? 1 : 0;\n        let isRight = realXPos + this.player.width * 2 > this.width - margin ? 1 : 0;\n        let isLeft = realXPos < margin ? 1 : 0;\n        let dx = (this.player.realClickX) - this.player.posX;\n        let dy = (this.player.realClickY) - this.player.posY;\n        let hMovement = dx > 0 ? 1 : dx < 0 ? -1 : 0;\n        let vMovement = dy > 0 ? 1 : dy < 0 ? -1 : 0;\n        let distance = Math.sqrt(dx * dx + dy * dy);\n        let xSpeed = (dx / distance) * this.player.moveSpeed * hMovement;\n        let ySpeed = (dy / distance) * this.player.moveSpeed * vMovement;\n\n        if (isRight && this.map.worldXOffset - xSpeed * 1 > -this.map.realWidth + this.width) {\n            this.map.worldXOffset -= xSpeed * 1;\n        } else if (isLeft && this.map.worldXOffset + xSpeed * 1 <= 0) {\n            this.map.worldXOffset += xSpeed * 1;\n        }\n\n        if (isBelow && this.map.worldYOffset - ySpeed * 1 > -this.map.realHeight + this.height) {\n            this.map.worldYOffset -= ySpeed * 1;\n        } else if (isAbove && this.map.worldYOffset + ySpeed * 1 < 0) {\n            this.map.worldYOffset += ySpeed * 1;\n        }\n    }\n\n    loadImage() {\n        let imageUrls = this.imageUrls;\n        let start = this.start.bind(this);\n        let loadCounter = 0;\n\n        for (let image of imageUrls) {\n            this.images[image] = new Image();\n            this.images[image].onload = function() {\n                loadCounter++;\n                if (loadCounter === imageUrls.length) {\n                    start();\n                }\n            };\n            this.images[image].src = 'assets/img/' + image;\n        }\n    }\n\n    reset() {\n        this.player.posX = this.player.startX;\n        this.player.posY = this.player.startY;\n    }\n\n    draw() {\n        let getAnimationType = this.player.getAnimationType.bind(this.player);\n\n        // getAnimationType();\n\n\n        this.ctx.font = '14px courier';\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        this.ctx.msImageSmoothingEnabled = false;\n        this.ctx.webkitImageSmoothingEnabled = false;\n        this.ctx.imageSmoothingEnabled = false;\n\n        this.drawMap();\n        this.drawPlayer();\n        this.drawEnemies();\n        this.drawOverlayObjects();\n        // this.drawAttackingSquares();\n        // this.drawStatusText();\n        this.drawHealthbar();\n        this.drawPointer();\n    }\n\n    getMapScope() {\n        let tileWidth = this.map.tileWidth;\n        let restY = -this.map.worldXOffset % tileWidth;\n\n        let startY = (-this.map.worldXOffset - restY) / tileWidth;\n        let restX = -this.map.worldYOffset % tileWidth;\n\n        let startX = (-this.map.worldYOffset - restX) / tileWidth;\n        let restEndX = (-this.map.worldYOffset + this.width) % tileWidth;\n        let endX = (-this.map.worldYOffset + this.width - restEndX) / tileWidth;\n        let restEndY = (-this.map.worldXOffset + this.width) % tileWidth;\n        let endY = (-this.map.worldXOffset + this.width - restEndY) / tileWidth;\n\n        this.map.startX = startX > 0 ? startX - 1 : 0;\n        this.map.startY = startY > 0 ? startY - 1 : 0;\n\n\n        this.map.endX = endX + 1 < this.map.width ? endX + 1 : this.map.width;\n        this.map.endY = endY + 1 < this.map.height ? endY + 1 : this.map.height;\n    }\n\n    drawMap() {\n        for (let layer in this.map.plane) {\n            for (let x = this.map.startX; x < this.map.endX; x++) {\n                for (let y = this.map.startY; y < this.map.endY; y++) {\n                    if (this.map.plane[layer][x][y] && this.map.tileSets[0].tiles[this.map.plane[layer][x][y].getType()]) {\n                        let tileType = this.map.plane[layer][x][y].getType();\n\n                        this.ctx.drawImage(\n                            this.images['map/overworld1.png'], //bilden\n                            this.map.tileSets[0].tiles[tileType].xOffset,\n                            this.map.tileSets[0].tiles[tileType].yOffset,\n                            this.map.tileSets[0].tiles[tileType].getWidth(),\n                            this.map.tileSets[0].tiles[tileType].getHeight(),\n                            this.map.plane[layer][x][y].xOffset + this.map.worldXOffset,\n                            this.map.plane[layer][x][y].yOffset + this.map.worldYOffset,\n                            this.map.plane[layer][x][y].getWidth(),\n                            this.map.plane[layer][x][y].getHeight()\n                        );\n                    }\n                }\n            }\n        }\n    }\n\n    drawOverlayObjects() {\n        for (let x = this.map.startX; x < this.map.endX; x++) {\n            for (let y = this.map.startY; y < this.map.endY; y++) {\n                if (this.map.objectsOverlay[x][y] && this.map.tileSets[0].tiles[this.map.objectsOverlay[x][y].getType()]) {\n                    let tileType = this.map.objectsOverlay[x][y].getType();\n\n                    this.ctx.drawImage(\n                        this.images['map/overworld1.png'], //bilden\n                        this.map.tileSets[0].tiles[tileType].xOffset,\n                        this.map.tileSets[0].tiles[tileType].yOffset,\n                        this.map.tileSets[0].tiles[tileType].getWidth(),\n                        this.map.tileSets[0].tiles[tileType].getHeight(),\n                        this.map.objectsOverlay[x][y].xOffset + this.map.worldXOffset,\n                        this.map.objectsOverlay[x][y].yOffset + this.map.worldYOffset,\n                        this.map.objectsOverlay[x][y].getWidth(),\n                        this.map.objectsOverlay[x][y].getHeight()\n                    );\n                }\n            }\n        }\n    }\n\n    drawPlayer() {\n        // let facingPlayerOffset = this.player.facingX == 1 ? 10 : 18;\n        let playerYPos = this.player.posY + 18 + this.map.worldYOffset - 32;\n        let playerXPos = this.player.posX + 14 + this.map.worldXOffset - 32;\n        // let targetX = this.player.realClickX + this.map.worldXOffset - 16;\n        // let targetY = this.player.realClickY + this.map.worldYOffset - 16;\n\n        // this.player.facingPlayerOffset = facingPlayerOffset;\n        this.player.playerXPos = playerXPos;\n        this.player.playerYPos = playerYPos;\n\n        // if (this.player.clickTarget) {\n        //     targetX = this.player.clickTarget.getXPos() + this.map.worldXOffset - 16;\n        //     targetY = this.player.clickTarget.getYPos() + this.map.worldYOffset - 16;\n        // }\n\n        // if (this.player.realClickX && this.player.realClickX) {\n        //     this.ctx.drawImage(\n        //         this.images['cross.png'],\n        //         targetX,\n        //         targetY,\n        //         32,\n        //         32\n        //     );\n        // }\n\n        // this.ctx.fillStyle = '#BBBBBB4D';\n        // this.ctx.fillRect(\n        //     this.player.playerXPos,\n        //     this.player.playerYPos,\n        //     (this.player.width * 1.5) - 12,\n        //     (this.player.height * 1.5) - 6\n        // );\n\n        this.ctx.drawImage(\n            this.images['adventurer/adventurer.png'],\n            this.player.offsetFrameX * this.player.width, // sidled/animation\n            (this.player.offsetFrameY * this.player.height) + 1, // höjden\n            this.player.width,\n            this.player.height,\n            this.player.posX + this.map.worldXOffset - 32,\n            this.player.posY + this.map.worldYOffset - 32,\n            // playerXPos,\n            // playerYPos,\n            // this.player.posX + this.map.worldXOffset,\n            // this.player.posY + this.map.worldYOffset,\n            this.player.width * 2,\n            this.player.height * 2\n        );\n        // this.ctx.fillStyle = '#000000';\n        // this.ctx.fillRect(\n        //     this.player.posX + this.map.worldXOffset,\n        //     this.player.posY + this.map.worldYOffset,\n        //     1,\n        //     1\n        // );\n    }\n\n    drawEnemies() {\n        let a = {\n            x: this.player.playerXPos,\n            y: this.player.playerYPos,\n            width: (this.player.width * 1.5) - 12,\n            height: (this.player.height * 1.5) - 6\n        };\n\n        // this.ctx.fillStyle = '#BBBBBB4D';\n        // this.ctx.fillRect(\n        //     this.player.playerXPos,\n        //     this.player.playerYPos,\n        //     (this.player.width * 1.5) - 12,\n        //     (this.player.height * 1.5) - 6\n        // );\n\n        for (let enemy of this.enemies) {\n\n            this.ctx.drawImage(\n                this.images['enemies/' + enemy.getImage()],\n                enemy.offsetFrameX * enemy.width, // sidled/animation\n                (enemy.offsetFrameY * enemy.height), // höjden\n                enemy.getWidth(),\n                enemy.getHeight(),\n                enemy.realXPos,\n                enemy.realYPos,\n                enemy.getWidth() * 2,\n                enemy.getHeight() * 2\n            );\n            this.ctx.fillStyle = '#000000';\n            this.ctx.fillRect(\n                enemy.realXPos + enemy.width * 2 / 2,\n                enemy.realYPos + enemy.height * 2 / 2,\n                3,\n                3\n                // enemy.getWidth() * 2,\n                // enemy.getHeight() * 2\n            );\n\n            if (enemy.missiles) {\n                for (let missile of enemy.missiles) {\n                    this.ctx.drawImage(\n                        this.images[missile.image],\n                        missile.posX - 8 + this.map.worldXOffset,\n                        missile.posY - 8 + this.map.worldYOffset,\n                        32,\n                        32\n                    );\n                    // this.ctx.fillRect(\n                    //     missile.posX + this.map.worldXOffset,\n                    //     missile.posY + this.map.worldYOffset,\n                    //     missile.width,\n                    //     missile.height\n                    // );\n                    let b = {\n                        x: missile.posX + this.map.worldXOffset,\n                        y: missile.posY + this.map.worldYOffset,\n                        width: missile.width,\n                        height: missile.height\n                    };\n\n                    if (_funcs_js__WEBPACK_IMPORTED_MODULE_3__[\"funcs\"].isCollide(a, b)) {\n                        missile.hit = true;\n                        this.player.getHurt(enemy.damage);\n                        // enemy.getHurt(this.player.damage);\n                    }\n                }\n\n\n                // for (let enemy of this.enemies) {\n                // }\n            }\n\n            /*if (funcs.isCollide({\n                x: this.player.playerXPos,\n                y: this.player.playerYPos,\n                width: (this.player.width * 1.5) - 12,\n                height: (this.player.height * 1.5) - 6\n            }, {\n                x: enemy.realXPos,\n                y: enemy.realYPos,\n                width: enemy.getWidth() * 2,\n                height: enemy.getHeight() * 2\n            }) && !enemy.hurt) {\n            // if (realXPos > attackXPos &&\n            //     realXPos < attackXPos + 20 &&\n            //     realYPos > attackYPos &&\n            //     realYPos < attackYPos + 40\n            // ) {\n                this.player.getHurt(enemy.damage);\n            }*/\n        }\n    }\n\n    drawAttackingSquares() {\n        if (this.player.attacking) {\n            let facingOffset = this.player.facingX == 1 ? 32 + 12 : 0;\n            let attackYPos = this.player.posY + 20 + this.map.worldYOffset - 32;\n            let attackXPos = this.player.posX + facingOffset + this.map.worldXOffset - 32;\n\n            let a = {\n                x: attackXPos,\n                y: attackYPos,\n                width: 20,\n                height: 40\n            };\n\n            this.ctx.fillStyle = '#005AFF4D';\n            this.ctx.fillRect(attackXPos, attackYPos, 20, 40);\n            this.ctx.fillStyle = '#005AFF';\n            this.ctx.strokeRect(attackXPos, attackYPos, 20, 40);\n\n            for (let enemy of this.enemies) {\n                let b = {\n                    x: enemy.realXPos,\n                    y: enemy.realYPos,\n                    width: enemy.getWidth() * 2,\n                    height: enemy.getHeight() * 2\n                };\n\n                if (_funcs_js__WEBPACK_IMPORTED_MODULE_3__[\"funcs\"].isCollide(a, b)) {\n                    enemy.getHurt(this.player.damage);\n                }\n            }\n        }\n    }\n\n    drawStatusText() {\n        this.ctx.font = '20px courier';\n        this.ctx.fillStyle = '#fff';\n        this.ctx.fillText('lvl: ' + this.player.level + '  xp ' + this.player.experience + '/' + this.player.nextLevel, 20, 80);\n        this.ctx.fillStyle = '#ffffffc';\n        this.ctx.fillText(this.player.facing, 10, 120);\n        this.ctx.fillText(Math.round(this.player.posY) + ', ' + Math.round(this.player.posX), 10, 140);\n\n\n\n        this.ctx.fillText(Math.round(this.player.posY + this.map.worldYOffset - this.player.height * 2) + ', ' + Math.round(this.player.posX + this.map.worldXOffset - this.player.width * 2), 10, 160);\n\n\n\n        this.ctx.fillText(Math.round(this.player.clickY - this.map.worldYOffset) + ', ' + Math.round(this.player.clickX - this.map.worldXOffset), 10, 180);\n        this.ctx.stroke();\n    }\n\n    drawHealthbar() {\n        this.ctx.font = '20px courier';\n        this.ctx.fillStyle = '#fff';\n        this.ctx.fillText('lvl: ' + this.player.level + '  xp ' + this.player.experience + '/' + this.player.nextLevel, 20, 80);\n        this.ctx.fillStyle = '#FFFFFF55';\n        this.ctx.fillRect(\n            17,\n            17,\n            this.barWidth + 6,\n            this.barHeight + 6\n        );\n\n        this.ctx.fillStyle = '#CB2E2E';\n        this.ctx.fillRect(\n            20,\n            20,\n            this.barWidth * (this.player.health / this.player.maxHealth),\n            this.barHeight\n        );\n\n        this.ctx.fillStyle = '#FFFFFF55';\n        this.ctx.fillRect(\n            17,\n            37,\n            this.barWidth + 6,\n            this.barHeight + 6\n        );\n\n        this.ctx.fillStyle = '#24A733';\n        this.ctx.fillRect(\n            20,\n            40,\n            this.barWidth * (this.player.stamina / this.player.maxStamina),\n            this.barHeight\n        );\n    }\n\n    drawPointer() {\n        let image = this.images['glove.png'];\n        this.player.hoverAction = 'move';\n        this.player.hoverTarget = null;\n\n        let a = {\n            x: this.mouseX,\n            y: this.mouseY,\n            width: 1,\n            height: 1\n        };\n\n        for (let enemy of this.enemies) {\n            let b = {\n                x: enemy.realXPos,\n                y: enemy.realYPos,\n                width: enemy.getWidth() * 2,\n                height: enemy.getHeight() * 2\n            };\n\n            if (_funcs_js__WEBPACK_IMPORTED_MODULE_3__[\"funcs\"].isCollide(a, b)) {\n                this.player.hoverAction = 'attack';\n                this.player.hoverTarget = enemy;\n                image = this.images['sword.png'];\n            }\n        }\n\n        if (this.mouseX && this.mouseY) {\n            this.ctx.drawImage(\n                image,\n                this.mouseX,\n                this.mouseY,\n                32,\n                32\n            );\n        }\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvR2FtZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2Fzc2V0cy9qcy9HYW1lLmpzP2EwMjYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBQbGF5ZXIgfSBmcm9tICcuL1BsYXllci5qcyc7XG5pbXBvcnQgeyBFbmVteSB9IGZyb20gJy4vRW5lbXkuanMnO1xuaW1wb3J0IHsgU2xpbWUgfSBmcm9tICcuL1NsaW1lLmpzJztcbmltcG9ydCB7IGZ1bmNzIH0gZnJvbSAnLi9mdW5jcy5qcyc7XG5cbmNsYXNzIEdhbWUge1xuICAgIGNvbnN0cnVjdG9yKHdpZHRoLCBoZWlnaHQpIHtcbiAgICAgICAgdGhpcy5iYXJXaWR0aCA9IDIwMDtcbiAgICAgICAgdGhpcy5iYXJIZWlnaHQgPSAxMDtcbiAgICAgICAgdGhpcy5zdGFydGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMucGxhbmUgPSBbXTtcbiAgICAgICAgdGhpcy5wbGF5ZXIgPSBudWxsO1xuICAgICAgICB0aGlzLmltYWdlID0gbnVsbDtcbiAgICAgICAgdGhpcy5pbWFnZVVybHMgPSBbXG4gICAgICAgICAgICAnYWR2ZW50dXJlci9hZHZlbnR1cmVyLnBuZycsXG4gICAgICAgICAgICAnZW5lbWllcy9zbGltZV9yZWQucG5nJyxcbiAgICAgICAgICAgICdjcm9zcy5wbmcnLFxuICAgICAgICAgICAgJ2dsb3ZlLnBuZycsXG4gICAgICAgICAgICAnc3dvcmQucG5nJyxcbiAgICAgICAgICAgICdlbmVtaWVzL3NsaW1lX3JlZF9taXNzaWxlX2Vhc3QucG5nJyxcbiAgICAgICAgICAgICdlbmVtaWVzL3NsaW1lX3JlZF9taXNzaWxlX3NvdXRoX2Vhc3QucG5nJyxcbiAgICAgICAgICAgICdlbmVtaWVzL3NsaW1lX3JlZF9taXNzaWxlX3NvdXRoLnBuZycsXG4gICAgICAgICAgICAnZW5lbWllcy9zbGltZV9yZWRfbWlzc2lsZV9zb3V0aF93ZXN0LnBuZycsXG4gICAgICAgICAgICAnZW5lbWllcy9zbGltZV9yZWRfbWlzc2lsZV93ZXN0LnBuZycsXG4gICAgICAgICAgICAnZW5lbWllcy9zbGltZV9yZWRfbWlzc2lsZV9ub3J0aF93ZXN0LnBuZycsXG4gICAgICAgICAgICAnZW5lbWllcy9zbGltZV9yZWRfbWlzc2lsZV9ub3J0aC5wbmcnLFxuICAgICAgICAgICAgJ2VuZW1pZXMvc2xpbWVfcmVkX21pc3NpbGVfbm9ydGhfZWFzdC5wbmcnXG4gICAgICAgIF07XG4gICAgICAgIHRoaXMuaW1hZ2VzID0ge307XG4gICAgICAgIHRoaXMuZW5lbWllcyA9IFtdO1xuICAgICAgICB0aGlzLmRpcmVjdGlvbnMgPSBbXG4gICAgICAgICAgICAnc3RhbmRpbmdub3J0aCcsXG4gICAgICAgICAgICAnc3RhbmRpbmd3ZXN0JyxcbiAgICAgICAgICAgICdzdGFuZGluZ2Vhc3QnLFxuICAgICAgICAgICAgJ3N0YW5kaW5nc291dGgnLFxuICAgICAgICAgICAgJ3J1bm5pbmdlYXN0MScsXG4gICAgICAgICAgICAncnVubmluZ2Vhc3QyJ1xuICAgICAgICBdO1xuICAgICAgICB0aGlzLndpZHRoID0gd2lkdGg7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICB0aGlzLmNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuICAgICAgICB0aGlzLmNhbnZhcy5pZCA9ICdDdXJzb3JMYXllcic7XG4gICAgICAgIHRoaXMuY2FudmFzLndpZHRoID0gdGhpcy53aWR0aDtcbiAgICAgICAgdGhpcy5jYW52YXMuaGVpZ2h0ID0gdGhpcy5oZWlnaHQ7XG4gICAgICAgIHRoaXMuY2FudmFzLnN0eWxlLnpJbmRleCA9IDg7XG4gICAgICAgIHRoaXMuY2FudmFzLnN0eWxlLm1hcmdpbiA9ICdhdXRvJztcbiAgICAgICAgdGhpcy5jYW52YXMuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICAgIHRoaXMuY2FudmFzLnN0eWxlLmJvcmRlciA9ICcxcHggc29saWQgI2JiYic7XG4gICAgICAgIHRoaXMuZnBzID0gMjA7XG4gICAgICAgIHRoaXMudGltZXIgPSBudWxsO1xuICAgICAgICB0aGlzLm1hcCA9IG51bGw7XG4gICAgICAgIHRoaXMubW91c2VYO1xuICAgICAgICB0aGlzLm1vdXNlWTtcbiAgICB9XG5cbiAgICBpbml0KCkge1xuICAgICAgICBpZiAodGhpcy5tYXAubGF5ZXJzLmdyb3VuZCkge1xuICAgICAgICAgICAgbGV0IHN0YXJ0UG9pbnQgPSB0aGlzLm1hcC5kYXRhTGF5ZXIuc3RhcnRpbmdQb2ludDtcbiAgICAgICAgICAgIGxldCBtb3VzZU1vdmUgPSB0aGlzLm1vdXNlTW92ZS5iaW5kKHRoaXMpO1xuXG4gICAgICAgICAgICB0aGlzLmltYWdlVXJscy5wdXNoKCdtYXAvJyArIHRoaXMubWFwLnRpbGVTZXRzWzBdLm1hcEltYWdlLmdldEF0dHJpYnV0ZSgnc291cmNlJykpO1xuICAgICAgICAgICAgdGhpcy5tYXAucmVhbFdpZHRoID0gdGhpcy5tYXAud2lkdGggKiB0aGlzLm1hcC5sYXllcnMuZ3JvdW5kLnRpbGVXaWR0aDtcbiAgICAgICAgICAgIHRoaXMubWFwLnJlYWxIZWlnaHQgPSB0aGlzLm1hcC5oZWlnaHQgKiB0aGlzLm1hcC5sYXllcnMuZ3JvdW5kLnRpbGVIZWlnaHQ7XG5cbiAgICAgICAgICAgIHRoaXMuc3RvcCgpO1xuICAgICAgICAgICAgdGhpcy5wbGF5ZXIgPSBuZXcgUGxheWVyKHN0YXJ0UG9pbnQueCwgc3RhcnRQb2ludC55KTtcbiAgICAgICAgICAgIHRoaXMuZW5lbWllcy5wdXNoKG5ldyBTbGltZShcbiAgICAgICAgICAgICAgICBzdGFydFBvaW50LnggKyAyMDAsXG4gICAgICAgICAgICAgICAgc3RhcnRQb2ludC55ICsgMjAwLFxuICAgICAgICAgICAgICAgICdyZWRTbGltZScsXG4gICAgICAgICAgICAgICAgMjAsXG4gICAgICAgICAgICAgICAgMTAsXG4gICAgICAgICAgICAgICAgMSxcbiAgICAgICAgICAgICAgICAxMDApXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgLy8gdGhpcy5lbmVtaWVzLnB1c2gobmV3IFNsaW1lKFxuICAgICAgICAgICAgLy8gICAgIHN0YXJ0UG9pbnQueCArIDMwMCxcbiAgICAgICAgICAgIC8vICAgICBzdGFydFBvaW50LnkgKyAzMDAsXG4gICAgICAgICAgICAvLyAgICAgJ3JlZFNsaW1lJyxcbiAgICAgICAgICAgIC8vICAgICAyMCxcbiAgICAgICAgICAgIC8vICAgICAxMCxcbiAgICAgICAgICAgIC8vICAgICAxLFxuICAgICAgICAgICAgLy8gICAgIDEwKVxuICAgICAgICAgICAgLy8gKTtcbiAgICAgICAgICAgIHRoaXMuY2VudGVyQ2FtZXJhKCk7XG5cbiAgICAgICAgICAgIGxldCBwbGF5ZXIgPSB0aGlzLnBsYXllcjtcbiAgICAgICAgICAgIGxldCBtYXAgPSB0aGlzLm1hcDtcblxuICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGZ1bmN0aW9uKGUpIHsgcGxheWVyLm1vdXNlRG93bihlLCBtYXAud29ybGRYT2Zmc2V0LCBtYXAud29ybGRZT2Zmc2V0KTsgfSk7XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGZ1bmN0aW9uKGUpIHsgcGxheWVyLm1vdXNlVXAoZSwgdHJ1ZSk7IH0pO1xuICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGZ1bmN0aW9uKGUpIHsgbW91c2VNb3ZlKGUsIHRydWUpOyB9KTtcblxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BsYW5lJykuYXBwZW5kQ2hpbGQodGhpcy5jYW52YXMpO1xuICAgICAgICAgICAgdGhpcy5jdHggPSB0aGlzLmNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuXG4gICAgICAgICAgICBsZXQgbG9hZEltYWdlID0gdGhpcy5sb2FkSW1hZ2UuYmluZCh0aGlzKTtcblxuICAgICAgICAgICAgbG9hZEltYWdlKCk7XG4gICAgICAgICAgICAvLyB0aGlzLmxvYWRJbWFnZSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ05vIGdyb3VuZCBsYXllciBmb3VuZCcpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbW91c2VNb3ZlKGUpIHtcbiAgICAgICAgbGV0IGVsID0gZS50YXJnZXQ7XG5cbiAgICAgICAgaWYgKGVsLmdldFRhZ05hbWUgPSBcImNhbnZhc1wiKSB7XG4gICAgICAgICAgICB0aGlzLm1vdXNlWCA9IChlLmNsaWVudFggLSBlbC5vZmZzZXRMZWZ0KTtcbiAgICAgICAgICAgIHRoaXMubW91c2VZID0gKGUuY2xpZW50WSAtIGVsLm9mZnNldFRvcCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzdG9wKCkge1xuICAgICAgICBpZiAodGhpcy5zdGFydGVkKSB7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpO1xuICAgICAgICAgICAgdGhpcy5zdGFydGVkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzdGFydCgpIHtcbiAgICAgICAgbGV0IHJlZHJhdyA9IHRoaXMucmVkcmF3LmJpbmQodGhpcyk7XG4gICAgICAgIGxldCBzdGFydEFuaW1hdGlvbiA9IHRoaXMucGxheWVyLnN0YXJ0QW5pbWF0aW9uLmJpbmQodGhpcy5wbGF5ZXIpO1xuICAgICAgICBsZXQgc3RhcnREYXRhID0gdGhpcy5wbGF5ZXIuc3RhcnREYXRhLmJpbmQodGhpcy5wbGF5ZXIpO1xuXG4gICAgICAgIHN0YXJ0RGF0YSgpO1xuICAgICAgICBzdGFydEFuaW1hdGlvbigpO1xuICAgICAgICBmb3IgKGxldCBlbmVteSBvZiB0aGlzLmVuZW1pZXMpIHtcbiAgICAgICAgICAgIGVuZW15LnN0YXJ0QW5pbWF0aW9uKCk7XG4gICAgICAgIH1cblxuXG4gICAgICAgIGlmICghdGhpcy5zdGFydGVkKSB7XG4gICAgICAgICAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmVkcmF3KCk7XG4gICAgICAgICAgICAvLyB9LCAxNTAwKTtcbiAgICAgICAgICAgIH0sIDEwMDAgLyB0aGlzLmZwcyk7XG4gICAgICAgICAgICB0aGlzLnN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVkcmF3KCkge1xuICAgICAgICB0aGlzLmdldE1hcFNjb3BlKCk7XG4gICAgICAgIHRoaXMucGxheWVyLm1vdmUyKHtcbiAgICAgICAgICAgIHg6IHRoaXMubWFwLndvcmxkWE9mZnNldCxcbiAgICAgICAgICAgIHk6IHRoaXMubWFwLndvcmxkWU9mZnNldCxcbiAgICAgICAgICAgIHc6IHRoaXMubWFwLnJlYWxXaWR0aCxcbiAgICAgICAgICAgIGg6IHRoaXMubWFwLnJlYWxIZWlnaHRcbiAgICAgICAgfSwgdGhpcy5lbmVtaWVzLCB0aGlzLm1hcCk7XG4gICAgICAgIHRoaXMuY2hlY2tFbmVtaWVzKCk7XG4gICAgICAgIHRoaXMubWFwU2Nyb2xsKCk7XG4gICAgICAgIHRoaXMuZHJhdygpO1xuICAgIH1cblxuICAgIGNoZWNrRW5lbWllcygpIHtcbiAgICAgICAgZm9yIChsZXQgZW5lbXkgaW4gdGhpcy5lbmVtaWVzKSB7XG4gICAgICAgICAgICB0aGlzLmVuZW1pZXNbZW5lbXldLnJlYWxYUG9zID0gdGhpcy5lbmVtaWVzW2VuZW15XS5nZXRYUG9zKCkgLSAxNiArIHRoaXMubWFwLndvcmxkWE9mZnNldDtcbiAgICAgICAgICAgIHRoaXMuZW5lbWllc1tlbmVteV0ucmVhbFlQb3MgPSB0aGlzLmVuZW1pZXNbZW5lbXldLmdldFlQb3MoKSAtIDE2ICsgdGhpcy5tYXAud29ybGRZT2Zmc2V0O1xuICAgICAgICAgICAgdGhpcy5lbmVtaWVzW2VuZW15XS5yZWFsWENlbnRlclBvcyA9IHRoaXMuZW5lbWllc1tlbmVteV0uZ2V0WENlbnRlclBvcygpICsgdGhpcy5tYXAud29ybGRYT2Zmc2V0O1xuICAgICAgICAgICAgdGhpcy5lbmVtaWVzW2VuZW15XS5yZWFsWUNlbnRlclBvcyA9IHRoaXMuZW5lbWllc1tlbmVteV0uZ2V0WUNlbnRlclBvcygpICsgdGhpcy5tYXAud29ybGRZT2Zmc2V0O1xuICAgICAgICAgICAgaWYgKCF0aGlzLmVuZW1pZXNbZW5lbXldLmFsaXZlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIuZ2V0eHAodGhpcy5lbmVtaWVzW2VuZW15XS5leHBHaXZlKTtcbiAgICAgICAgICAgICAgICB0aGlzLmVuZW1pZXMuc3BsaWNlKGVuZW15LCAxKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lbmVtaWVzW2VuZW15XS5tb3ZlKHRoaXMucGxheWVyLCB0aGlzLm1hcCk7XG4gICAgICAgICAgICAgICAgdGhpcy5lbmVtaWVzW2VuZW15XS5jaGVja0F0dGFjayh0aGlzLnBsYXllcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjZW50ZXJDYW1lcmEoKSB7XG4gICAgICAgIHRoaXMubWFwLndvcmxkWE9mZnNldCA9IC10aGlzLnBsYXllci5wb3NYICsgdGhpcy53aWR0aCAvIDIgLSB0aGlzLnBsYXllci5oZWlnaHQ7XG4gICAgICAgIHRoaXMubWFwLndvcmxkWU9mZnNldCA9IC10aGlzLnBsYXllci5wb3NZICsgdGhpcy5oZWlnaHQgLyAyIC0gdGhpcy5wbGF5ZXIuaGVpZ2h0O1xuICAgIH1cblxuICAgIG1hcFNjcm9sbCgpIHtcbiAgICAgICAgbGV0IG1hcmdpbiA9IDMwMDtcbiAgICAgICAgbGV0IHJlYWxZUG9zID0gdGhpcy5wbGF5ZXIucG9zWSArIHRoaXMubWFwLndvcmxkWU9mZnNldDtcbiAgICAgICAgbGV0IHJlYWxYUG9zID0gdGhpcy5wbGF5ZXIucG9zWCArIHRoaXMubWFwLndvcmxkWE9mZnNldDtcbiAgICAgICAgbGV0IGlzQmVsb3cgPSByZWFsWVBvcyA+IHRoaXMuaGVpZ2h0IC0gbWFyZ2luID8gMSA6IDA7XG4gICAgICAgIGxldCBpc0Fib3ZlID0gcmVhbFlQb3MgKyB0aGlzLnBsYXllci5oZWlnaHQgKiAyIDwgbWFyZ2luID8gMSA6IDA7XG4gICAgICAgIGxldCBpc1JpZ2h0ID0gcmVhbFhQb3MgKyB0aGlzLnBsYXllci53aWR0aCAqIDIgPiB0aGlzLndpZHRoIC0gbWFyZ2luID8gMSA6IDA7XG4gICAgICAgIGxldCBpc0xlZnQgPSByZWFsWFBvcyA8IG1hcmdpbiA/IDEgOiAwO1xuICAgICAgICBsZXQgZHggPSAodGhpcy5wbGF5ZXIucmVhbENsaWNrWCkgLSB0aGlzLnBsYXllci5wb3NYO1xuICAgICAgICBsZXQgZHkgPSAodGhpcy5wbGF5ZXIucmVhbENsaWNrWSkgLSB0aGlzLnBsYXllci5wb3NZO1xuICAgICAgICBsZXQgaE1vdmVtZW50ID0gZHggPiAwID8gMSA6IGR4IDwgMCA/IC0xIDogMDtcbiAgICAgICAgbGV0IHZNb3ZlbWVudCA9IGR5ID4gMCA/IDEgOiBkeSA8IDAgPyAtMSA6IDA7XG4gICAgICAgIGxldCBkaXN0YW5jZSA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XG4gICAgICAgIGxldCB4U3BlZWQgPSAoZHggLyBkaXN0YW5jZSkgKiB0aGlzLnBsYXllci5tb3ZlU3BlZWQgKiBoTW92ZW1lbnQ7XG4gICAgICAgIGxldCB5U3BlZWQgPSAoZHkgLyBkaXN0YW5jZSkgKiB0aGlzLnBsYXllci5tb3ZlU3BlZWQgKiB2TW92ZW1lbnQ7XG5cbiAgICAgICAgaWYgKGlzUmlnaHQgJiYgdGhpcy5tYXAud29ybGRYT2Zmc2V0IC0geFNwZWVkICogMSA+IC10aGlzLm1hcC5yZWFsV2lkdGggKyB0aGlzLndpZHRoKSB7XG4gICAgICAgICAgICB0aGlzLm1hcC53b3JsZFhPZmZzZXQgLT0geFNwZWVkICogMTtcbiAgICAgICAgfSBlbHNlIGlmIChpc0xlZnQgJiYgdGhpcy5tYXAud29ybGRYT2Zmc2V0ICsgeFNwZWVkICogMSA8PSAwKSB7XG4gICAgICAgICAgICB0aGlzLm1hcC53b3JsZFhPZmZzZXQgKz0geFNwZWVkICogMTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpc0JlbG93ICYmIHRoaXMubWFwLndvcmxkWU9mZnNldCAtIHlTcGVlZCAqIDEgPiAtdGhpcy5tYXAucmVhbEhlaWdodCArIHRoaXMuaGVpZ2h0KSB7XG4gICAgICAgICAgICB0aGlzLm1hcC53b3JsZFlPZmZzZXQgLT0geVNwZWVkICogMTtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Fib3ZlICYmIHRoaXMubWFwLndvcmxkWU9mZnNldCArIHlTcGVlZCAqIDEgPCAwKSB7XG4gICAgICAgICAgICB0aGlzLm1hcC53b3JsZFlPZmZzZXQgKz0geVNwZWVkICogMTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGxvYWRJbWFnZSgpIHtcbiAgICAgICAgbGV0IGltYWdlVXJscyA9IHRoaXMuaW1hZ2VVcmxzO1xuICAgICAgICBsZXQgc3RhcnQgPSB0aGlzLnN0YXJ0LmJpbmQodGhpcyk7XG4gICAgICAgIGxldCBsb2FkQ291bnRlciA9IDA7XG5cbiAgICAgICAgZm9yIChsZXQgaW1hZ2Ugb2YgaW1hZ2VVcmxzKSB7XG4gICAgICAgICAgICB0aGlzLmltYWdlc1tpbWFnZV0gPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgICAgIHRoaXMuaW1hZ2VzW2ltYWdlXS5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBsb2FkQ291bnRlcisrO1xuICAgICAgICAgICAgICAgIGlmIChsb2FkQ291bnRlciA9PT0gaW1hZ2VVcmxzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBzdGFydCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLmltYWdlc1tpbWFnZV0uc3JjID0gJ2Fzc2V0cy9pbWcvJyArIGltYWdlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMucGxheWVyLnBvc1ggPSB0aGlzLnBsYXllci5zdGFydFg7XG4gICAgICAgIHRoaXMucGxheWVyLnBvc1kgPSB0aGlzLnBsYXllci5zdGFydFk7XG4gICAgfVxuXG4gICAgZHJhdygpIHtcbiAgICAgICAgbGV0IGdldEFuaW1hdGlvblR5cGUgPSB0aGlzLnBsYXllci5nZXRBbmltYXRpb25UeXBlLmJpbmQodGhpcy5wbGF5ZXIpO1xuXG4gICAgICAgIC8vIGdldEFuaW1hdGlvblR5cGUoKTtcblxuXG4gICAgICAgIHRoaXMuY3R4LmZvbnQgPSAnMTRweCBjb3VyaWVyJztcbiAgICAgICAgdGhpcy5jdHguY2xlYXJSZWN0KDAsIDAsIHRoaXMuY2FudmFzLndpZHRoLCB0aGlzLmNhbnZhcy5oZWlnaHQpO1xuXG4gICAgICAgIHRoaXMuY3R4Lm1zSW1hZ2VTbW9vdGhpbmdFbmFibGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY3R4LndlYmtpdEltYWdlU21vb3RoaW5nRW5hYmxlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmN0eC5pbWFnZVNtb290aGluZ0VuYWJsZWQgPSBmYWxzZTtcblxuICAgICAgICB0aGlzLmRyYXdNYXAoKTtcbiAgICAgICAgdGhpcy5kcmF3UGxheWVyKCk7XG4gICAgICAgIHRoaXMuZHJhd0VuZW1pZXMoKTtcbiAgICAgICAgdGhpcy5kcmF3T3ZlcmxheU9iamVjdHMoKTtcbiAgICAgICAgLy8gdGhpcy5kcmF3QXR0YWNraW5nU3F1YXJlcygpO1xuICAgICAgICAvLyB0aGlzLmRyYXdTdGF0dXNUZXh0KCk7XG4gICAgICAgIHRoaXMuZHJhd0hlYWx0aGJhcigpO1xuICAgICAgICB0aGlzLmRyYXdQb2ludGVyKCk7XG4gICAgfVxuXG4gICAgZ2V0TWFwU2NvcGUoKSB7XG4gICAgICAgIGxldCB0aWxlV2lkdGggPSB0aGlzLm1hcC50aWxlV2lkdGg7XG4gICAgICAgIGxldCByZXN0WSA9IC10aGlzLm1hcC53b3JsZFhPZmZzZXQgJSB0aWxlV2lkdGg7XG5cbiAgICAgICAgbGV0IHN0YXJ0WSA9ICgtdGhpcy5tYXAud29ybGRYT2Zmc2V0IC0gcmVzdFkpIC8gdGlsZVdpZHRoO1xuICAgICAgICBsZXQgcmVzdFggPSAtdGhpcy5tYXAud29ybGRZT2Zmc2V0ICUgdGlsZVdpZHRoO1xuXG4gICAgICAgIGxldCBzdGFydFggPSAoLXRoaXMubWFwLndvcmxkWU9mZnNldCAtIHJlc3RYKSAvIHRpbGVXaWR0aDtcbiAgICAgICAgbGV0IHJlc3RFbmRYID0gKC10aGlzLm1hcC53b3JsZFlPZmZzZXQgKyB0aGlzLndpZHRoKSAlIHRpbGVXaWR0aDtcbiAgICAgICAgbGV0IGVuZFggPSAoLXRoaXMubWFwLndvcmxkWU9mZnNldCArIHRoaXMud2lkdGggLSByZXN0RW5kWCkgLyB0aWxlV2lkdGg7XG4gICAgICAgIGxldCByZXN0RW5kWSA9ICgtdGhpcy5tYXAud29ybGRYT2Zmc2V0ICsgdGhpcy53aWR0aCkgJSB0aWxlV2lkdGg7XG4gICAgICAgIGxldCBlbmRZID0gKC10aGlzLm1hcC53b3JsZFhPZmZzZXQgKyB0aGlzLndpZHRoIC0gcmVzdEVuZFkpIC8gdGlsZVdpZHRoO1xuXG4gICAgICAgIHRoaXMubWFwLnN0YXJ0WCA9IHN0YXJ0WCA+IDAgPyBzdGFydFggLSAxIDogMDtcbiAgICAgICAgdGhpcy5tYXAuc3RhcnRZID0gc3RhcnRZID4gMCA/IHN0YXJ0WSAtIDEgOiAwO1xuXG5cbiAgICAgICAgdGhpcy5tYXAuZW5kWCA9IGVuZFggKyAxIDwgdGhpcy5tYXAud2lkdGggPyBlbmRYICsgMSA6IHRoaXMubWFwLndpZHRoO1xuICAgICAgICB0aGlzLm1hcC5lbmRZID0gZW5kWSArIDEgPCB0aGlzLm1hcC5oZWlnaHQgPyBlbmRZICsgMSA6IHRoaXMubWFwLmhlaWdodDtcbiAgICB9XG5cbiAgICBkcmF3TWFwKCkge1xuICAgICAgICBmb3IgKGxldCBsYXllciBpbiB0aGlzLm1hcC5wbGFuZSkge1xuICAgICAgICAgICAgZm9yIChsZXQgeCA9IHRoaXMubWFwLnN0YXJ0WDsgeCA8IHRoaXMubWFwLmVuZFg7IHgrKykge1xuICAgICAgICAgICAgICAgIGZvciAobGV0IHkgPSB0aGlzLm1hcC5zdGFydFk7IHkgPCB0aGlzLm1hcC5lbmRZOyB5KyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubWFwLnBsYW5lW2xheWVyXVt4XVt5XSAmJiB0aGlzLm1hcC50aWxlU2V0c1swXS50aWxlc1t0aGlzLm1hcC5wbGFuZVtsYXllcl1beF1beV0uZ2V0VHlwZSgpXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHRpbGVUeXBlID0gdGhpcy5tYXAucGxhbmVbbGF5ZXJdW3hdW3ldLmdldFR5cGUoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jdHguZHJhd0ltYWdlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2VzWydtYXAvb3ZlcndvcmxkMS5wbmcnXSwgLy9iaWxkZW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1hcC50aWxlU2V0c1swXS50aWxlc1t0aWxlVHlwZV0ueE9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1hcC50aWxlU2V0c1swXS50aWxlc1t0aWxlVHlwZV0ueU9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1hcC50aWxlU2V0c1swXS50aWxlc1t0aWxlVHlwZV0uZ2V0V2lkdGgoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1hcC50aWxlU2V0c1swXS50aWxlc1t0aWxlVHlwZV0uZ2V0SGVpZ2h0KCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXAucGxhbmVbbGF5ZXJdW3hdW3ldLnhPZmZzZXQgKyB0aGlzLm1hcC53b3JsZFhPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXAucGxhbmVbbGF5ZXJdW3hdW3ldLnlPZmZzZXQgKyB0aGlzLm1hcC53b3JsZFlPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXAucGxhbmVbbGF5ZXJdW3hdW3ldLmdldFdpZHRoKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXAucGxhbmVbbGF5ZXJdW3hdW3ldLmdldEhlaWdodCgpXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZHJhd092ZXJsYXlPYmplY3RzKCkge1xuICAgICAgICBmb3IgKGxldCB4ID0gdGhpcy5tYXAuc3RhcnRYOyB4IDwgdGhpcy5tYXAuZW5kWDsgeCsrKSB7XG4gICAgICAgICAgICBmb3IgKGxldCB5ID0gdGhpcy5tYXAuc3RhcnRZOyB5IDwgdGhpcy5tYXAuZW5kWTsgeSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubWFwLm9iamVjdHNPdmVybGF5W3hdW3ldICYmIHRoaXMubWFwLnRpbGVTZXRzWzBdLnRpbGVzW3RoaXMubWFwLm9iamVjdHNPdmVybGF5W3hdW3ldLmdldFR5cGUoKV0pIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHRpbGVUeXBlID0gdGhpcy5tYXAub2JqZWN0c092ZXJsYXlbeF1beV0uZ2V0VHlwZSgpO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3R4LmRyYXdJbWFnZShcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2VzWydtYXAvb3ZlcndvcmxkMS5wbmcnXSwgLy9iaWxkZW5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWFwLnRpbGVTZXRzWzBdLnRpbGVzW3RpbGVUeXBlXS54T2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXAudGlsZVNldHNbMF0udGlsZXNbdGlsZVR5cGVdLnlPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1hcC50aWxlU2V0c1swXS50aWxlc1t0aWxlVHlwZV0uZ2V0V2lkdGgoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWFwLnRpbGVTZXRzWzBdLnRpbGVzW3RpbGVUeXBlXS5nZXRIZWlnaHQoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWFwLm9iamVjdHNPdmVybGF5W3hdW3ldLnhPZmZzZXQgKyB0aGlzLm1hcC53b3JsZFhPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1hcC5vYmplY3RzT3ZlcmxheVt4XVt5XS55T2Zmc2V0ICsgdGhpcy5tYXAud29ybGRZT2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXAub2JqZWN0c092ZXJsYXlbeF1beV0uZ2V0V2lkdGgoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWFwLm9iamVjdHNPdmVybGF5W3hdW3ldLmdldEhlaWdodCgpXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZHJhd1BsYXllcigpIHtcbiAgICAgICAgLy8gbGV0IGZhY2luZ1BsYXllck9mZnNldCA9IHRoaXMucGxheWVyLmZhY2luZ1ggPT0gMSA/IDEwIDogMTg7XG4gICAgICAgIGxldCBwbGF5ZXJZUG9zID0gdGhpcy5wbGF5ZXIucG9zWSArIDE4ICsgdGhpcy5tYXAud29ybGRZT2Zmc2V0IC0gMzI7XG4gICAgICAgIGxldCBwbGF5ZXJYUG9zID0gdGhpcy5wbGF5ZXIucG9zWCArIDE0ICsgdGhpcy5tYXAud29ybGRYT2Zmc2V0IC0gMzI7XG4gICAgICAgIC8vIGxldCB0YXJnZXRYID0gdGhpcy5wbGF5ZXIucmVhbENsaWNrWCArIHRoaXMubWFwLndvcmxkWE9mZnNldCAtIDE2O1xuICAgICAgICAvLyBsZXQgdGFyZ2V0WSA9IHRoaXMucGxheWVyLnJlYWxDbGlja1kgKyB0aGlzLm1hcC53b3JsZFlPZmZzZXQgLSAxNjtcblxuICAgICAgICAvLyB0aGlzLnBsYXllci5mYWNpbmdQbGF5ZXJPZmZzZXQgPSBmYWNpbmdQbGF5ZXJPZmZzZXQ7XG4gICAgICAgIHRoaXMucGxheWVyLnBsYXllclhQb3MgPSBwbGF5ZXJYUG9zO1xuICAgICAgICB0aGlzLnBsYXllci5wbGF5ZXJZUG9zID0gcGxheWVyWVBvcztcblxuICAgICAgICAvLyBpZiAodGhpcy5wbGF5ZXIuY2xpY2tUYXJnZXQpIHtcbiAgICAgICAgLy8gICAgIHRhcmdldFggPSB0aGlzLnBsYXllci5jbGlja1RhcmdldC5nZXRYUG9zKCkgKyB0aGlzLm1hcC53b3JsZFhPZmZzZXQgLSAxNjtcbiAgICAgICAgLy8gICAgIHRhcmdldFkgPSB0aGlzLnBsYXllci5jbGlja1RhcmdldC5nZXRZUG9zKCkgKyB0aGlzLm1hcC53b3JsZFlPZmZzZXQgLSAxNjtcbiAgICAgICAgLy8gfVxuXG4gICAgICAgIC8vIGlmICh0aGlzLnBsYXllci5yZWFsQ2xpY2tYICYmIHRoaXMucGxheWVyLnJlYWxDbGlja1gpIHtcbiAgICAgICAgLy8gICAgIHRoaXMuY3R4LmRyYXdJbWFnZShcbiAgICAgICAgLy8gICAgICAgICB0aGlzLmltYWdlc1snY3Jvc3MucG5nJ10sXG4gICAgICAgIC8vICAgICAgICAgdGFyZ2V0WCxcbiAgICAgICAgLy8gICAgICAgICB0YXJnZXRZLFxuICAgICAgICAvLyAgICAgICAgIDMyLFxuICAgICAgICAvLyAgICAgICAgIDMyXG4gICAgICAgIC8vICAgICApO1xuICAgICAgICAvLyB9XG5cbiAgICAgICAgLy8gdGhpcy5jdHguZmlsbFN0eWxlID0gJyNCQkJCQkI0RCc7XG4gICAgICAgIC8vIHRoaXMuY3R4LmZpbGxSZWN0KFxuICAgICAgICAvLyAgICAgdGhpcy5wbGF5ZXIucGxheWVyWFBvcyxcbiAgICAgICAgLy8gICAgIHRoaXMucGxheWVyLnBsYXllcllQb3MsXG4gICAgICAgIC8vICAgICAodGhpcy5wbGF5ZXIud2lkdGggKiAxLjUpIC0gMTIsXG4gICAgICAgIC8vICAgICAodGhpcy5wbGF5ZXIuaGVpZ2h0ICogMS41KSAtIDZcbiAgICAgICAgLy8gKTtcblxuICAgICAgICB0aGlzLmN0eC5kcmF3SW1hZ2UoXG4gICAgICAgICAgICB0aGlzLmltYWdlc1snYWR2ZW50dXJlci9hZHZlbnR1cmVyLnBuZyddLFxuICAgICAgICAgICAgdGhpcy5wbGF5ZXIub2Zmc2V0RnJhbWVYICogdGhpcy5wbGF5ZXIud2lkdGgsIC8vIHNpZGxlZC9hbmltYXRpb25cbiAgICAgICAgICAgICh0aGlzLnBsYXllci5vZmZzZXRGcmFtZVkgKiB0aGlzLnBsYXllci5oZWlnaHQpICsgMSwgLy8gaMO2amRlblxuICAgICAgICAgICAgdGhpcy5wbGF5ZXIud2lkdGgsXG4gICAgICAgICAgICB0aGlzLnBsYXllci5oZWlnaHQsXG4gICAgICAgICAgICB0aGlzLnBsYXllci5wb3NYICsgdGhpcy5tYXAud29ybGRYT2Zmc2V0IC0gMzIsXG4gICAgICAgICAgICB0aGlzLnBsYXllci5wb3NZICsgdGhpcy5tYXAud29ybGRZT2Zmc2V0IC0gMzIsXG4gICAgICAgICAgICAvLyBwbGF5ZXJYUG9zLFxuICAgICAgICAgICAgLy8gcGxheWVyWVBvcyxcbiAgICAgICAgICAgIC8vIHRoaXMucGxheWVyLnBvc1ggKyB0aGlzLm1hcC53b3JsZFhPZmZzZXQsXG4gICAgICAgICAgICAvLyB0aGlzLnBsYXllci5wb3NZICsgdGhpcy5tYXAud29ybGRZT2Zmc2V0LFxuICAgICAgICAgICAgdGhpcy5wbGF5ZXIud2lkdGggKiAyLFxuICAgICAgICAgICAgdGhpcy5wbGF5ZXIuaGVpZ2h0ICogMlxuICAgICAgICApO1xuICAgICAgICAvLyB0aGlzLmN0eC5maWxsU3R5bGUgPSAnIzAwMDAwMCc7XG4gICAgICAgIC8vIHRoaXMuY3R4LmZpbGxSZWN0KFxuICAgICAgICAvLyAgICAgdGhpcy5wbGF5ZXIucG9zWCArIHRoaXMubWFwLndvcmxkWE9mZnNldCxcbiAgICAgICAgLy8gICAgIHRoaXMucGxheWVyLnBvc1kgKyB0aGlzLm1hcC53b3JsZFlPZmZzZXQsXG4gICAgICAgIC8vICAgICAxLFxuICAgICAgICAvLyAgICAgMVxuICAgICAgICAvLyApO1xuICAgIH1cblxuICAgIGRyYXdFbmVtaWVzKCkge1xuICAgICAgICBsZXQgYSA9IHtcbiAgICAgICAgICAgIHg6IHRoaXMucGxheWVyLnBsYXllclhQb3MsXG4gICAgICAgICAgICB5OiB0aGlzLnBsYXllci5wbGF5ZXJZUG9zLFxuICAgICAgICAgICAgd2lkdGg6ICh0aGlzLnBsYXllci53aWR0aCAqIDEuNSkgLSAxMixcbiAgICAgICAgICAgIGhlaWdodDogKHRoaXMucGxheWVyLmhlaWdodCAqIDEuNSkgLSA2XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gdGhpcy5jdHguZmlsbFN0eWxlID0gJyNCQkJCQkI0RCc7XG4gICAgICAgIC8vIHRoaXMuY3R4LmZpbGxSZWN0KFxuICAgICAgICAvLyAgICAgdGhpcy5wbGF5ZXIucGxheWVyWFBvcyxcbiAgICAgICAgLy8gICAgIHRoaXMucGxheWVyLnBsYXllcllQb3MsXG4gICAgICAgIC8vICAgICAodGhpcy5wbGF5ZXIud2lkdGggKiAxLjUpIC0gMTIsXG4gICAgICAgIC8vICAgICAodGhpcy5wbGF5ZXIuaGVpZ2h0ICogMS41KSAtIDZcbiAgICAgICAgLy8gKTtcblxuICAgICAgICBmb3IgKGxldCBlbmVteSBvZiB0aGlzLmVuZW1pZXMpIHtcblxuICAgICAgICAgICAgdGhpcy5jdHguZHJhd0ltYWdlKFxuICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2VzWydlbmVtaWVzLycgKyBlbmVteS5nZXRJbWFnZSgpXSxcbiAgICAgICAgICAgICAgICBlbmVteS5vZmZzZXRGcmFtZVggKiBlbmVteS53aWR0aCwgLy8gc2lkbGVkL2FuaW1hdGlvblxuICAgICAgICAgICAgICAgIChlbmVteS5vZmZzZXRGcmFtZVkgKiBlbmVteS5oZWlnaHQpLCAvLyBow7ZqZGVuXG4gICAgICAgICAgICAgICAgZW5lbXkuZ2V0V2lkdGgoKSxcbiAgICAgICAgICAgICAgICBlbmVteS5nZXRIZWlnaHQoKSxcbiAgICAgICAgICAgICAgICBlbmVteS5yZWFsWFBvcyxcbiAgICAgICAgICAgICAgICBlbmVteS5yZWFsWVBvcyxcbiAgICAgICAgICAgICAgICBlbmVteS5nZXRXaWR0aCgpICogMixcbiAgICAgICAgICAgICAgICBlbmVteS5nZXRIZWlnaHQoKSAqIDJcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnIzAwMDAwMCc7XG4gICAgICAgICAgICB0aGlzLmN0eC5maWxsUmVjdChcbiAgICAgICAgICAgICAgICBlbmVteS5yZWFsWFBvcyArIGVuZW15LndpZHRoICogMiAvIDIsXG4gICAgICAgICAgICAgICAgZW5lbXkucmVhbFlQb3MgKyBlbmVteS5oZWlnaHQgKiAyIC8gMixcbiAgICAgICAgICAgICAgICAzLFxuICAgICAgICAgICAgICAgIDNcbiAgICAgICAgICAgICAgICAvLyBlbmVteS5nZXRXaWR0aCgpICogMixcbiAgICAgICAgICAgICAgICAvLyBlbmVteS5nZXRIZWlnaHQoKSAqIDJcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIGlmIChlbmVteS5taXNzaWxlcykge1xuICAgICAgICAgICAgICAgIGZvciAobGV0IG1pc3NpbGUgb2YgZW5lbXkubWlzc2lsZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdHguZHJhd0ltYWdlKFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbWFnZXNbbWlzc2lsZS5pbWFnZV0sXG4gICAgICAgICAgICAgICAgICAgICAgICBtaXNzaWxlLnBvc1ggLSA4ICsgdGhpcy5tYXAud29ybGRYT2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgbWlzc2lsZS5wb3NZIC0gOCArIHRoaXMubWFwLndvcmxkWU9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgICAgIDMyLFxuICAgICAgICAgICAgICAgICAgICAgICAgMzJcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy5jdHguZmlsbFJlY3QoXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBtaXNzaWxlLnBvc1ggKyB0aGlzLm1hcC53b3JsZFhPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBtaXNzaWxlLnBvc1kgKyB0aGlzLm1hcC53b3JsZFlPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBtaXNzaWxlLndpZHRoLFxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgbWlzc2lsZS5oZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgLy8gKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGIgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB4OiBtaXNzaWxlLnBvc1ggKyB0aGlzLm1hcC53b3JsZFhPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICB5OiBtaXNzaWxlLnBvc1kgKyB0aGlzLm1hcC53b3JsZFlPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogbWlzc2lsZS53aWR0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogbWlzc2lsZS5oZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoZnVuY3MuaXNDb2xsaWRlKGEsIGIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtaXNzaWxlLmhpdCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBsYXllci5nZXRIdXJ0KGVuZW15LmRhbWFnZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBlbmVteS5nZXRIdXJ0KHRoaXMucGxheWVyLmRhbWFnZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICAgIC8vIGZvciAobGV0IGVuZW15IG9mIHRoaXMuZW5lbWllcykge1xuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLyppZiAoZnVuY3MuaXNDb2xsaWRlKHtcbiAgICAgICAgICAgICAgICB4OiB0aGlzLnBsYXllci5wbGF5ZXJYUG9zLFxuICAgICAgICAgICAgICAgIHk6IHRoaXMucGxheWVyLnBsYXllcllQb3MsXG4gICAgICAgICAgICAgICAgd2lkdGg6ICh0aGlzLnBsYXllci53aWR0aCAqIDEuNSkgLSAxMixcbiAgICAgICAgICAgICAgICBoZWlnaHQ6ICh0aGlzLnBsYXllci5oZWlnaHQgKiAxLjUpIC0gNlxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIHg6IGVuZW15LnJlYWxYUG9zLFxuICAgICAgICAgICAgICAgIHk6IGVuZW15LnJlYWxZUG9zLFxuICAgICAgICAgICAgICAgIHdpZHRoOiBlbmVteS5nZXRXaWR0aCgpICogMixcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGVuZW15LmdldEhlaWdodCgpICogMlxuICAgICAgICAgICAgfSkgJiYgIWVuZW15Lmh1cnQpIHtcbiAgICAgICAgICAgIC8vIGlmIChyZWFsWFBvcyA+IGF0dGFja1hQb3MgJiZcbiAgICAgICAgICAgIC8vICAgICByZWFsWFBvcyA8IGF0dGFja1hQb3MgKyAyMCAmJlxuICAgICAgICAgICAgLy8gICAgIHJlYWxZUG9zID4gYXR0YWNrWVBvcyAmJlxuICAgICAgICAgICAgLy8gICAgIHJlYWxZUG9zIDwgYXR0YWNrWVBvcyArIDQwXG4gICAgICAgICAgICAvLyApIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXllci5nZXRIdXJ0KGVuZW15LmRhbWFnZSk7XG4gICAgICAgICAgICB9Ki9cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRyYXdBdHRhY2tpbmdTcXVhcmVzKCkge1xuICAgICAgICBpZiAodGhpcy5wbGF5ZXIuYXR0YWNraW5nKSB7XG4gICAgICAgICAgICBsZXQgZmFjaW5nT2Zmc2V0ID0gdGhpcy5wbGF5ZXIuZmFjaW5nWCA9PSAxID8gMzIgKyAxMiA6IDA7XG4gICAgICAgICAgICBsZXQgYXR0YWNrWVBvcyA9IHRoaXMucGxheWVyLnBvc1kgKyAyMCArIHRoaXMubWFwLndvcmxkWU9mZnNldCAtIDMyO1xuICAgICAgICAgICAgbGV0IGF0dGFja1hQb3MgPSB0aGlzLnBsYXllci5wb3NYICsgZmFjaW5nT2Zmc2V0ICsgdGhpcy5tYXAud29ybGRYT2Zmc2V0IC0gMzI7XG5cbiAgICAgICAgICAgIGxldCBhID0ge1xuICAgICAgICAgICAgICAgIHg6IGF0dGFja1hQb3MsXG4gICAgICAgICAgICAgICAgeTogYXR0YWNrWVBvcyxcbiAgICAgICAgICAgICAgICB3aWR0aDogMjAsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0MFxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gJyMwMDVBRkY0RCc7XG4gICAgICAgICAgICB0aGlzLmN0eC5maWxsUmVjdChhdHRhY2tYUG9zLCBhdHRhY2tZUG9zLCAyMCwgNDApO1xuICAgICAgICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gJyMwMDVBRkYnO1xuICAgICAgICAgICAgdGhpcy5jdHguc3Ryb2tlUmVjdChhdHRhY2tYUG9zLCBhdHRhY2tZUG9zLCAyMCwgNDApO1xuXG4gICAgICAgICAgICBmb3IgKGxldCBlbmVteSBvZiB0aGlzLmVuZW1pZXMpIHtcbiAgICAgICAgICAgICAgICBsZXQgYiA9IHtcbiAgICAgICAgICAgICAgICAgICAgeDogZW5lbXkucmVhbFhQb3MsXG4gICAgICAgICAgICAgICAgICAgIHk6IGVuZW15LnJlYWxZUG9zLFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogZW5lbXkuZ2V0V2lkdGgoKSAqIDIsXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogZW5lbXkuZ2V0SGVpZ2h0KCkgKiAyXG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgIGlmIChmdW5jcy5pc0NvbGxpZGUoYSwgYikpIHtcbiAgICAgICAgICAgICAgICAgICAgZW5lbXkuZ2V0SHVydCh0aGlzLnBsYXllci5kYW1hZ2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRyYXdTdGF0dXNUZXh0KCkge1xuICAgICAgICB0aGlzLmN0eC5mb250ID0gJzIwcHggY291cmllcic7XG4gICAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICcjZmZmJztcbiAgICAgICAgdGhpcy5jdHguZmlsbFRleHQoJ2x2bDogJyArIHRoaXMucGxheWVyLmxldmVsICsgJyAgeHAgJyArIHRoaXMucGxheWVyLmV4cGVyaWVuY2UgKyAnLycgKyB0aGlzLnBsYXllci5uZXh0TGV2ZWwsIDIwLCA4MCk7XG4gICAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICcjZmZmZmZmYyc7XG4gICAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KHRoaXMucGxheWVyLmZhY2luZywgMTAsIDEyMCk7XG4gICAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KE1hdGgucm91bmQodGhpcy5wbGF5ZXIucG9zWSkgKyAnLCAnICsgTWF0aC5yb3VuZCh0aGlzLnBsYXllci5wb3NYKSwgMTAsIDE0MCk7XG5cblxuXG4gICAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KE1hdGgucm91bmQodGhpcy5wbGF5ZXIucG9zWSArIHRoaXMubWFwLndvcmxkWU9mZnNldCAtIHRoaXMucGxheWVyLmhlaWdodCAqIDIpICsgJywgJyArIE1hdGgucm91bmQodGhpcy5wbGF5ZXIucG9zWCArIHRoaXMubWFwLndvcmxkWE9mZnNldCAtIHRoaXMucGxheWVyLndpZHRoICogMiksIDEwLCAxNjApO1xuXG5cblxuICAgICAgICB0aGlzLmN0eC5maWxsVGV4dChNYXRoLnJvdW5kKHRoaXMucGxheWVyLmNsaWNrWSAtIHRoaXMubWFwLndvcmxkWU9mZnNldCkgKyAnLCAnICsgTWF0aC5yb3VuZCh0aGlzLnBsYXllci5jbGlja1ggLSB0aGlzLm1hcC53b3JsZFhPZmZzZXQpLCAxMCwgMTgwKTtcbiAgICAgICAgdGhpcy5jdHguc3Ryb2tlKCk7XG4gICAgfVxuXG4gICAgZHJhd0hlYWx0aGJhcigpIHtcbiAgICAgICAgdGhpcy5jdHguZm9udCA9ICcyMHB4IGNvdXJpZXInO1xuICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnI2ZmZic7XG4gICAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KCdsdmw6ICcgKyB0aGlzLnBsYXllci5sZXZlbCArICcgIHhwICcgKyB0aGlzLnBsYXllci5leHBlcmllbmNlICsgJy8nICsgdGhpcy5wbGF5ZXIubmV4dExldmVsLCAyMCwgODApO1xuICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnI0ZGRkZGRjU1JztcbiAgICAgICAgdGhpcy5jdHguZmlsbFJlY3QoXG4gICAgICAgICAgICAxNyxcbiAgICAgICAgICAgIDE3LFxuICAgICAgICAgICAgdGhpcy5iYXJXaWR0aCArIDYsXG4gICAgICAgICAgICB0aGlzLmJhckhlaWdodCArIDZcbiAgICAgICAgKTtcblxuICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnI0NCMkUyRSc7XG4gICAgICAgIHRoaXMuY3R4LmZpbGxSZWN0KFxuICAgICAgICAgICAgMjAsXG4gICAgICAgICAgICAyMCxcbiAgICAgICAgICAgIHRoaXMuYmFyV2lkdGggKiAodGhpcy5wbGF5ZXIuaGVhbHRoIC8gdGhpcy5wbGF5ZXIubWF4SGVhbHRoKSxcbiAgICAgICAgICAgIHRoaXMuYmFySGVpZ2h0XG4gICAgICAgICk7XG5cbiAgICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gJyNGRkZGRkY1NSc7XG4gICAgICAgIHRoaXMuY3R4LmZpbGxSZWN0KFxuICAgICAgICAgICAgMTcsXG4gICAgICAgICAgICAzNyxcbiAgICAgICAgICAgIHRoaXMuYmFyV2lkdGggKyA2LFxuICAgICAgICAgICAgdGhpcy5iYXJIZWlnaHQgKyA2XG4gICAgICAgICk7XG5cbiAgICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gJyMyNEE3MzMnO1xuICAgICAgICB0aGlzLmN0eC5maWxsUmVjdChcbiAgICAgICAgICAgIDIwLFxuICAgICAgICAgICAgNDAsXG4gICAgICAgICAgICB0aGlzLmJhcldpZHRoICogKHRoaXMucGxheWVyLnN0YW1pbmEgLyB0aGlzLnBsYXllci5tYXhTdGFtaW5hKSxcbiAgICAgICAgICAgIHRoaXMuYmFySGVpZ2h0XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZHJhd1BvaW50ZXIoKSB7XG4gICAgICAgIGxldCBpbWFnZSA9IHRoaXMuaW1hZ2VzWydnbG92ZS5wbmcnXTtcbiAgICAgICAgdGhpcy5wbGF5ZXIuaG92ZXJBY3Rpb24gPSAnbW92ZSc7XG4gICAgICAgIHRoaXMucGxheWVyLmhvdmVyVGFyZ2V0ID0gbnVsbDtcblxuICAgICAgICBsZXQgYSA9IHtcbiAgICAgICAgICAgIHg6IHRoaXMubW91c2VYLFxuICAgICAgICAgICAgeTogdGhpcy5tb3VzZVksXG4gICAgICAgICAgICB3aWR0aDogMSxcbiAgICAgICAgICAgIGhlaWdodDogMVxuICAgICAgICB9O1xuXG4gICAgICAgIGZvciAobGV0IGVuZW15IG9mIHRoaXMuZW5lbWllcykge1xuICAgICAgICAgICAgbGV0IGIgPSB7XG4gICAgICAgICAgICAgICAgeDogZW5lbXkucmVhbFhQb3MsXG4gICAgICAgICAgICAgICAgeTogZW5lbXkucmVhbFlQb3MsXG4gICAgICAgICAgICAgICAgd2lkdGg6IGVuZW15LmdldFdpZHRoKCkgKiAyLFxuICAgICAgICAgICAgICAgIGhlaWdodDogZW5lbXkuZ2V0SGVpZ2h0KCkgKiAyXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBpZiAoZnVuY3MuaXNDb2xsaWRlKGEsIGIpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIuaG92ZXJBY3Rpb24gPSAnYXR0YWNrJztcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXllci5ob3ZlclRhcmdldCA9IGVuZW15O1xuICAgICAgICAgICAgICAgIGltYWdlID0gdGhpcy5pbWFnZXNbJ3N3b3JkLnBuZyddO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMubW91c2VYICYmIHRoaXMubW91c2VZKSB7XG4gICAgICAgICAgICB0aGlzLmN0eC5kcmF3SW1hZ2UoXG4gICAgICAgICAgICAgICAgaW1hZ2UsXG4gICAgICAgICAgICAgICAgdGhpcy5tb3VzZVgsXG4gICAgICAgICAgICAgICAgdGhpcy5tb3VzZVksXG4gICAgICAgICAgICAgICAgMzIsXG4gICAgICAgICAgICAgICAgMzJcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCB7IEdhbWUgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/js/Game.js\n");

/***/ }),

/***/ "./assets/js/Layer.js":
/*!****************************!*\
  !*** ./assets/js/Layer.js ***!
  \****************************/
/*! exports provided: Layer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Layer\", function() { return Layer; });\n\n\n// import { Player } from './Player.js';\n// import { TileSet } from './TileSet.js';\n// import { funcs } from './funcs.js';\n\nclass Layer {\n    constructor(id, data, width, height, visible, opacity, layerName, tileWidth, tileHeight, objects) {\n        this.id = id;\n        this.name = layerName;\n        this.width = width;\n        this.height = height;\n        this.visible = visible;\n        this.opacity = opacity;\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n        this.data = data;\n        this.objects = objects;\n        // console.log(this.image);\n        // var tileAmountWidth = Math.floor(width / tileWidth);\n        // this.lastgid = tileAmountWidth * Math.floor(height / tileHeight) + firstgid - 1;\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvTGF5ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvTGF5ZXIuanM/MGQ1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLy8gaW1wb3J0IHsgUGxheWVyIH0gZnJvbSAnLi9QbGF5ZXIuanMnO1xuLy8gaW1wb3J0IHsgVGlsZVNldCB9IGZyb20gJy4vVGlsZVNldC5qcyc7XG4vLyBpbXBvcnQgeyBmdW5jcyB9IGZyb20gJy4vZnVuY3MuanMnO1xuXG5jbGFzcyBMYXllciB7XG4gICAgY29uc3RydWN0b3IoaWQsIGRhdGEsIHdpZHRoLCBoZWlnaHQsIHZpc2libGUsIG9wYWNpdHksIGxheWVyTmFtZSwgdGlsZVdpZHRoLCB0aWxlSGVpZ2h0LCBvYmplY3RzKSB7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy5uYW1lID0gbGF5ZXJOYW1lO1xuICAgICAgICB0aGlzLndpZHRoID0gd2lkdGg7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICB0aGlzLnZpc2libGUgPSB2aXNpYmxlO1xuICAgICAgICB0aGlzLm9wYWNpdHkgPSBvcGFjaXR5O1xuICAgICAgICB0aGlzLnRpbGVXaWR0aCA9IHRpbGVXaWR0aDtcbiAgICAgICAgdGhpcy50aWxlSGVpZ2h0ID0gdGlsZUhlaWdodDtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICAgICAgdGhpcy5vYmplY3RzID0gb2JqZWN0cztcbiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5pbWFnZSk7XG4gICAgICAgIC8vIHZhciB0aWxlQW1vdW50V2lkdGggPSBNYXRoLmZsb29yKHdpZHRoIC8gdGlsZVdpZHRoKTtcbiAgICAgICAgLy8gdGhpcy5sYXN0Z2lkID0gdGlsZUFtb3VudFdpZHRoICogTWF0aC5mbG9vcihoZWlnaHQgLyB0aWxlSGVpZ2h0KSArIGZpcnN0Z2lkIC0gMTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IExheWVyIH07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/js/Layer.js\n");

/***/ }),

/***/ "./assets/js/Map.js":
/*!**************************!*\
  !*** ./assets/js/Map.js ***!
  \**************************/
/*! exports provided: Map */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Map\", function() { return Map; });\n/* harmony import */ var _Player_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Player.js */ \"./assets/js/Player.js\");\n/* harmony import */ var _TileSet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TileSet.js */ \"./assets/js/TileSet.js\");\n/* harmony import */ var _Layer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Layer.js */ \"./assets/js/Layer.js\");\n/* harmony import */ var _Tile_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tile.js */ \"./assets/js/Tile.js\");\n/* harmony import */ var _funcs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./funcs.js */ \"./assets/js/funcs.js\");\n\n\n\n\n\n\n\n\nclass Map {\n    constructor(url) {\n        this.url = url;\n        this.xmlDoc = null;\n        this.tileSets = [];\n        this.layers = {};\n        this.plane = [];\n        this.data = null;\n        this.worldXOffset = 0;\n        this.worldYOffset = 0;\n        this.realWidth = 0;\n        this.realHeight = 0;\n        this.dataLayer = {};\n    }\n\n    loadLayers() {\n        console.log(this.data);\n        for (let datalayer of this.data.layers) {\n            let id = datalayer.id;\n            let width = datalayer.width;\n            let height = datalayer.height;\n            let visible = datalayer.visible;\n            let opacity = datalayer.opacity;\n            let layerName = datalayer.name.toCamelCase();\n            let tileWidth = this.data.tilewidth;\n            let tiledata = datalayer.data;\n            let tileHeight = this.data.tileheight;\n            let objects = datalayer.objects;\n\n            this.layers[layerName] = new _Layer_js__WEBPACK_IMPORTED_MODULE_2__[\"Layer\"](id, tiledata, width, height, visible, opacity, layerName, tileWidth, tileHeight, objects);\n        }\n    }\n\n    loadTilesets() {\n        // console.log(this.data.tilesets)\n        for (let tileset of this.data.tilesets) {\n            console.log(tileset);\n            let firstGid = tileset.firstgid;\n            let tilesetImagePath = tileset.image;\n            let width = this.data.width;\n            let height = this.data.height;\n            let tileWidth = this.data.tilewidth;\n            let tileHeight = this.data.tileheight;\n\n            this.tileSets.push(new _TileSet_js__WEBPACK_IMPORTED_MODULE_1__[\"TileSet\"](\n                firstGid,\n                tileWidth,\n                tileHeight,\n                tilesetImagePath,\n                width,\n                height\n            ));\n        }\n    }\n\n    setMapData() {\n        if (this.layers['dataLayer']) {\n            for (let dataObj of this.layers['dataLayer'].objects) {\n                this.dataLayer[dataObj.name.toCamelCase()] = dataObj;\n            }\n            delete this.layers['dataLayer'];\n            // this.layers.splice(dataLayer, 1);\n        }\n    }\n\n    async loadTileSetimages() {\n        for (let tileset of this.tileSets) {\n            await tileset.loadTileSetImage();\n        }\n    }\n\n    async getMapData() {\n        let that = this;\n        let object = await window.fetch(that.url);\n        let data = await object.json();\n\n        that.data = data;\n    }\n\n    async loadMap() {\n        await this.getMapData();\n        let that = this;\n\n        that.width = that.data.width;\n        that.height = that.data.height;\n        that.tileWidth = that.data.tilewidth;\n        that.tileHeight = that.data.tileheight;\n\n        that.loadLayers();\n        that.loadTilesets();\n        await that.loadTileSetimages();\n        that.setMapData();\n        // that.layers[0].data\n        for (let layer in that.layers) {\n            let tileCounter = 0;\n\n            that.plane[layer] = [];\n            for (let y = 0; y < that.data.height; y++) {\n                that.plane[layer][y] = [];\n                for (let x = 0; x < that.data.width; x++) {\n                    let xOffset = x * that.data.tilewidth;\n                    let yOffset = y * that.data.tileheight;\n\n                    that.plane[layer][y][x] = new _Tile_js__WEBPACK_IMPORTED_MODULE_3__[\"Tile\"](\n                        tileCounter,\n                        xOffset,\n                        yOffset,\n                        that.data.tilewidth,\n                        that.data.tileheight,\n                        that.layers[layer].data[tileCounter]\n                    );\n                    tileCounter++;\n                }\n            }\n        }\n        that.objectsOverlay = that.plane.objectsOverlay;\n        delete that.plane.objectsOverlay;\n        console.log(that.objectsOverlay);\n        /*for (let y = 0; y < that.data.height; y++) {\n            that.plane[y] = [];\n            for (let x = 0; x < that.data.width; x++) {\n                let xOffset = x * that.data.tilewidth;\n                let yOffset = y * that.data.tileheight;\n\n                that.plane[y][x] = new Tile(\n                    tileCounter,\n                    xOffset,\n                    yOffset,\n                    that.data.tilewidth,\n                    that.data.tileheight,\n                    that.layers['ground'].data[tileCounter]\n                );\n                tileCounter++;\n            }\n        }*/\n        // let screenBitmap = new Bitmap(new BitmapData(mapWidth * tileWidth, mapHeight * tileHeight, false, 0x22ffff));\n        // let screenBitmapTopLayer = new Bitmap(new BitmapData(mapWidth*tileWidth,mapHeight*tileHeight,true,0));\n\n        // load images for tileset\n        // for (let i = 0; i < that.tileSets.length; i++) {\n        //     // let loader = new TileCodeEventLoader();\n        //     // loader.contentLoaderInfo.addEventListener(Event.COMPLETE, tilesLoadComplete);\n        //     // loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, progressHandler);\n        //     // loader.tileSet = tileSets[i];\n        //     // loader.load(new URLRequest(\"../assets/\" + tileSets[i].source));\n        //     // eventLoaders.push(loader);\n        //     let mapimage = await window.fetch('assets/img/map/' + that.tileSets[i].source);\n        //     let text = await mapimage.text();\n        //     let xmlDoc = (new window.DOMParser()).parseFromString(text, \"text/xml\");\n\n        //     console.log(xmlDoc);\n        //     // console.log(xmlDoc.activeElement.children[0]);\n        //     that.mapImage = xmlDoc.activeElement.children[0];\n        // }\n        // let screenBitmap = image\n    }\n\n    /*async loadMap() {\n        let that = this;\n        let xmlDoc = window.fetch(that.url)\n            .then(response => response.text())\n            .then(function(str) {\n                return (new window.DOMParser()).parseFromString(str, \"text/xml\")\n            })\n            // .then(str => return (new window.DOMParser()).parseFromString(str, \"text/xml\"))\n            .then(function(ret) {\n                console.log(ret.activeElement);\n                let map = ret.activeElement;\n                that.width = map.getAttribute(\"width\");\n                that.height = map.getAttribute(\"height\");\n                that.tileWidth = map.getAttribute(\"tilewidth\");\n                that.tileHeight = map.getAttribute(\"tileheight\");\n                that.xmlDoc = ret;\n\n                for (let tileSet of map.getElementsByTagName('tileset')) {\n                    console.log(tileSet);\n                    let imageWidth = tileSet.getAttribute('width');\n                    let imageHeight = tileSet.getAttribute('height');\n                    let firstGid = tileSet.getAttribute(\"firstgid\");\n                    let tilesetName = tileSet.getAttribute(\"name\");\n                    let tilesetTileWidth = tileSet.getAttribute(\"tilewidth\");\n                    let tilesetTileHeight = tileSet.getAttribute(\"tileheight\");\n                    let tilesetImagePath = tileSet.getAttribute(\"source\");\n                    that.tileSets.push(new TileSet(firstGid, tilesetName, tilesetTileWidth, tilesetTileHeight, tilesetImagePath, imageWidth, imageHeight));\n                }\n\n                let xmlCounter = 0;\n            });\n            // .then(data => console.log(data));\n            // that.width = xmlDoc.attribute(\"width\");\n            // that.height = xmlDoc.attribute(\"height\");\n            // that.tileWidth = xmlDoc.attribute(\"tilewidth\");\n            // that.tileHeight = xmlDoc.attribute(\"tileheight\");\n        // console.log(xmlDoc);\n    }*/\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/Map.js\n");

/***/ }),

/***/ "./assets/js/Player.js":
/*!*****************************!*\
  !*** ./assets/js/Player.js ***!
  \*****************************/
/*! exports provided: Player */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Player\", function() { return Player; });\n/* harmony import */ var _funcs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./funcs.js */ \"./assets/js/funcs.js\");\n\n// import { Game } from './Game.js';\n\n\nclass Player {\n    constructor(startX, startY) {\n        this.level = 1;\n        this.experience = 0;\n        this.nextLevel = 100;\n        this.damage = 5;\n        this.health = 100;\n        this.stamina = 100;\n        this.maxHealth = 100;\n        this.maxStamina = 100;\n        this.facing = '';\n        this.facingY = 'south';\n        this.facingX = 1;\n        this.frame = 1;\n        this.startX = startX;\n        this.startY = startY;\n        this.keyPressed = {};\n        this.posX = startX;\n        this.posY = startY;\n        this.moving = false;\n        this.moveSpeed = 8;\n        this.calculatedMoveSpeed = 1;\n        this.offsetFrameY = 0;\n        this.offsetFrameX = 0;\n        this.animationFrame = 0;\n        this.animationFrames = [\n            12, 7, 9, 9, 9, 5, 4, 7,\n            12, 7, 9, 9, 9, 5, 4, 7\n        ];\n        this.animationTimer = null;\n        this.height = 32;\n        this.width = 32;\n        this.attacking = false;\n        this.attackCooldown = 9;\n        this.attackCounter = 0;\n        this.attackTimer = 0;\n        this.attackCombo = 0;\n        this.jumping = false;\n        this.jumpCooldown = 9;\n        this.jumpCounter = 0;\n        this.jumpTimer = 0;\n        this.fps = 10;\n        this.hurtTimer = null;\n        this.hurt = false;\n        this.alive = true;\n        this.clickX = 0;\n        this.clickY = 0;\n        this.clickAction = 'move';\n        this.clickTarget = null;\n        this.hoverAction = 'move';\n        // this.startAnimation();\n    }\n\n    die() {\n        this.alive = false;\n        this.doAnimation(7, false);\n    }\n\n    mouseUp(e) {\n        // console.log(e);\n    }\n\n    mouseDown(e, worldXOffset, worldYOffset) {\n        let el = e.target;\n\n        if (el.getTagName == \"canvas\") {\n            this.clickX = (e.clientX - el.offsetLeft);\n            this.clickY = (e.clientY - el.offsetTop);\n            this.realClickX = (e.clientX - el.offsetLeft - worldXOffset);\n            this.realClickY = (e.clientY - el.offsetTop - worldYOffset);\n        }\n        this.clickAction = this.hoverAction;\n        this.clickTarget = this.hoverTarget;\n    }\n\n    doAnimation(yOffset, restart = true, duration = 999) {\n        let updateAnimationFrames = this.updateAnimationFrames.bind(this);\n        let getAnimationType = this.getAnimationType.bind(this);\n        let startAnimation = this.startAnimation.bind(this);\n        let stopAnimation = this.stopAnimation.bind(this);\n\n        stopAnimation();\n        // clearInterval(this.animationTimer);\n        if (duration === 999) {\n            duration = this.animationFrames[yOffset] * (1000 / this.fps);\n        }\n        console.log(duration)\n        this.offsetFrameY = 0;\n        if (this.facingX == 0) {\n            this.offsetFrameY += 8;\n        }\n        // this.getAnimationType();\n        this.offsetFrameY += yOffset;\n        this.offsetFrameX = 0;\n        let counter = 0;\n        this.animationTimer = setInterval(function() {\n            counter++;\n            console.log(counter);\n            updateAnimationFrames();\n        }, 1000 / this.fps);\n\n        setTimeout(function() {\n            stopAnimation();\n            if (restart) {\n                startAnimation();\n            }\n        }, duration);\n    }\n\n    stopAnimation() {\n        clearInterval(this.animationTimer);\n    }\n\n    getHurt(damage) {\n        if (!this.hurt) {\n            let doAnimation = this.doAnimation.bind(this);\n            // let setNotHurting = this.setNotHurting.bind(this);\n            let setNotHurt = this.setNotHurt.bind(this);\n\n            clearInterval(this.attackTimer);\n            this.attackCounter = 0;\n            this.attacking = false;\n            this.hurt = true;\n            // this.hurting = true;\n            this.health -= damage;\n            if (this.health <= 0) {\n                this.die();\n                console.log('Player died');\n            } else {\n                this.offsetFrameX = 0;\n                doAnimation(6);\n                this.hurtTimer = setTimeout(function() {\n                    // setNotHurting();\n                    setNotHurt();\n                }, 400);\n            }\n            // this.hurt = hurt;\n        }\n    }\n\n    pressKey(key, pressed) {\n        this.keyPressed[key] = pressed;\n    }\n\n    getxp(xp) {\n        this.experience += xp;\n        if (this.experience >= this.nextLevel) {\n            this.level += 1;\n            this.nextLevel = this.nextLevel + this.nextLevel * 1.5;\n            this.experience = 0;\n        }\n    }\n\n    setNotHurt() {\n        this.hurt = false;\n    }\n\n    setNotHurting() {\n        this.hurting = false;\n    }\n\n    attack() {\n        if (this.clickTarget.alive) {\n            if (this.attackCombo >= 2) {\n                this.attackCombo = 0;\n            } else {\n                this.attackCombo++;\n            }\n            if (!this.attacking) {\n                let attackTimer = this.attackTimer;\n                let attacking = this.attacking;\n                let offsetFrameX = this.offsetFrameX;\n                let attackCounter = this.attackCounter;\n                let attackCooldown = this.attackCooldown;\n                let damage = this.damage;\n                let clickTarget = this.clickTarget;\n                let setNotAttacking = this.setNotAttacking.bind(this);\n\n                this.stamina -= 10;\n                this.offsetFrameX = 0;\n                this.attacking = true;\n\n                this.doAnimation(2 + this.attackCombo);\n                attackCounter = attackCooldown;\n                this.attackTimer = setInterval(function() {\n                    if (attackCounter == attackCooldown - 2) {\n                        clickTarget.getHurt(damage);\n                    }\n                    if (attackCounter == 0) {\n                        clearInterval(attackTimer);\n                        // attacking = false;\n                        setNotAttacking();\n                        console.log('player not attacking');\n                        offsetFrameX = 0;\n                    }\n                    attackCounter--;\n                }, 1000 / this.fps);\n            }\n        }\n    }\n\n    setNotAttacking() {\n        this.attacking = false;\n    }\n\n    jump() {\n        this.offsetFrameX = 0;\n        if (!this.jumping && this.jumpCounter <= 0) {\n            this.jumping = true;\n            this.jumpTimer = this.jumpCooldown;\n            this.jumpTimer = setInterval(function() {\n                this.jumpCounter--;\n                if (this.jumpCounter == 0) {\n                    clearInterval(this.jumpTimer);\n                    this.jumping = false;\n                    this.offsetFrameX = 0;\n                }\n            }, 1000 / this.fps);\n        }\n    }\n\n    getXTarget() {\n        let xTarget = this.realClickX;\n\n        if (this.clickTarget !== undefined && this.clickTarget !== null) {\n            xTarget = this.clickTarget.getXCenterPos() - this.clickTarget.getWidth();\n        }\n        return xTarget;\n    }\n\n    getYTarget() {\n        let yTarget = this.realClickY;\n\n        if (this.clickTarget !== undefined && this.clickTarget !== null) {\n            yTarget = this.clickTarget.getYCenterPos() - this.clickTarget.getHeight();\n        }\n        return yTarget;\n    }\n\n    checkObjectsCollision(a1, a2, map) {\n        let objL = map.plane.objects;\n        let ts = map.tileSets[0].tiles;\n\n        // console.log(map);\n        for (let x = map.startX; x < map.endX; x++) {\n            for (let y = map.startY; y < map.endY; y++) {\n                if (objL[x][y]) {\n                    let tileType = objL[x][y].getType();\n\n                    if (tileType != 0) {\n                        let t = {\n                            x: objL[x][y].xOffset + map.worldXOffset,\n                            y: objL[x][y].yOffset + map.worldYOffset,\n                            width: objL[x][y].width,\n                            height: objL[x][y].height\n                        };\n\n                        if (_funcs_js__WEBPACK_IMPORTED_MODULE_0__[\"funcs\"].isCollide(a1, t)) {\n                            // console.log(objL[x][y])\n                            // console.log('colliding;')\n                            this.isCollidingX = true;\n                        }\n\n                        if (_funcs_js__WEBPACK_IMPORTED_MODULE_0__[\"funcs\"].isCollide(a2, t)) {\n                            // console.log('colliding;')\n                            this.isCollidingY = true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    move2(worldOffset, enemies, map) {\n        if (this.alive) {\n            let targetX = this.getXTarget();\n            let targetY = this.getYTarget();\n            let dx = targetX - this.posX;\n            let dy = targetY - this.posY;\n            let hMovement = dx > 0 ? 1 : dx < 0 ? -1 : 0;\n            let vMovement = dy > 0 ? 1 : dy < 0 ? -1 : 0;\n            let distance = Math.round(Math.sqrt(dx * dx + dy * dy));\n\n            distance = this.clickTarget ? distance - this.clickTarget.width * 2 + 5 : distance;\n            // console.log(this.attacking, this.hurt);\n            if (!this.attacking && !this.hurt) {\n                // console.log(distance, this.moveSpeed);\n                if (targetX && targetY && distance - this.moveSpeed > this.moveSpeed) {\n                    let xSpeed = Math.round((dx / distance) * this.moveSpeed * hMovement);\n                    let ySpeed = Math.round((dy / distance) * this.moveSpeed * vMovement);\n\n                    let a1 = {\n                        x: this.playerXPos + (this.moveSpeed * hMovement),\n                        y: this.playerYPos,\n                        width: (this.width * 1.5) - 12,\n                        height: (this.height * 1.5) - 6\n                    };\n                    let a2 = {\n                        x: this.playerXPos,\n                        y: this.playerYPos + (this.moveSpeed * vMovement),\n                        width: (this.width * 1.5) - 12,\n                        height: (this.height * 1.5) - 6\n                    };\n\n                    this.isCollidingX = false;\n                    this.isCollidingY = false;\n\n                    for (let enemy of enemies) {\n                        let b = {\n                            x: enemy.realXPos,\n                            y: enemy.realYPos,\n                            width: enemy.width * 2,\n                            height: enemy.height * 2\n                        };\n\n                        if (_funcs_js__WEBPACK_IMPORTED_MODULE_0__[\"funcs\"].isCollide(a1, b)) {\n                            this.isCollidingX = true;\n                        }\n\n                        if (_funcs_js__WEBPACK_IMPORTED_MODULE_0__[\"funcs\"].isCollide(a2, b)) {\n                            this.isCollidingY = true;\n                        }\n                    }\n\n                    // console.log(objL, ts)\n\n                    this.checkObjectsCollision(a1, a2, map);\n\n                    if (this.isCollidingX && this.isCollidingY) {\n                        this.stopMoving();\n                    } else {\n                        if (!this.isCollidingX) {\n                            this.posX += xSpeed * hMovement;\n                        } else if (ySpeed <= 0.5) {\n                            this.stopMoving();\n                            // this.posY += this.moveSpeed * vMovement;\n                            // this.posX += 0.1 * -hMovement;\n                        }\n                        if (!this.isCollidingY) {\n                            this.posY += ySpeed * vMovement;\n                        } else if (xSpeed <= 0.5) {\n                            this.stopMoving();\n                            // this.posX += this.moveSpeed * hMovement;\n                            // this.posY += 0.1 * -vMovement;\n                        }\n                    }\n\n                    if (!this.moving) {\n                        this.offsetFrameX = 0;\n                    }\n\n                    if (dx > 0) {\n                        this.facingX = 1;\n                    } else if (dx < 0) {\n                        this.facingX = 0;\n                    }\n\n                    this.moving = true;\n                } else {\n                    if (this.clickTarget !== null && this.clickTarget !== undefined) {\n                        this.attack();\n                    }\n                    this.stopMoving();\n                }\n            }\n        }\n    }\n\n    move(worldOffset) {\n        if (this.alive) {\n            let hMovement = this.checkPressed('d') - this.checkPressed('a');\n            let vMovement = this.checkPressed('s') - this.checkPressed('w');\n            let attacked = this.checkPressed('e') == 1;\n            let jumped = this.checkPressed(' ') == 1;\n            let running = this.checkPressed('Shift') == 1;\n            // let moved = this.checkPressed('d') || this.checkPressed('a') || this.checkPressed('s') || this.checkPressed('w');\n\n            // if (moved && !this.moving || !moved && this.moving) {\n            //     this.attacking = false;\n            // }\n            // console.log(this.keyPressed);\n            if (!this.attacking && !this.hurt) {\n                if (hMovement != 0 && vMovement != 0) {\n                    if (running) {\n                        this.moveSpeed = 20;\n                    } else {\n                        this.moveSpeed = 8;\n                    }\n                    let xySpeed = Math.round(Math.sqrt((this.moveSpeed * this.moveSpeed) / 2));\n                    let steph = xySpeed * hMovement;\n                    let stepv = xySpeed * vMovement;\n\n                    if (!this.moving) {\n                        this.offsetFrameX = 0;\n                    }\n\n                    this.moving = true;\n                    if (this.posX + steph >= 0 && this.posX + steph + this.width * 2 <= worldOffset.w) {\n                        this.posX += steph;\n                        // this.posX += steph;\n                    }\n                    if (this.posY + stepv >= 0 && this.posY + stepv + this.height * 2 < worldOffset.h) {\n                        this.posY += stepv;\n                    }\n                    // this.posX += steph;\n                    // this.posY += stepv;\n\n                    // this.posY += stepv;\n                } else if (hMovement != 0 || vMovement != 0) {\n                    if (!this.moving) {\n                        this.offsetFrameX = 0;\n                    }\n                    this.moving = true;\n                    var steph = hMovement * this.moveSpeed;\n                    var stepv = vMovement * this.moveSpeed;\n\n                    if (this.posX + steph >= 0 && this.posX + steph + this.width * 2 <= worldOffset.w) {\n                        this.posX += steph;\n                    }\n\n\n                    if (this.posY + stepv >= 0 && this.posY + stepv + this.height * 2 < worldOffset.h) {\n                        this.posY += stepv;\n                    }\n                    // this.posX += hMovement * this.moveSpeed;\n                    // this.posY += vMovement * this.moveSpeed;\n                }\n\n                if (vMovement == 0 && hMovement == 0) {\n                    if (this.moving) {\n                        this.offsetFrameX = 0;\n                    }\n                    this.moving = false;\n                }\n\n                if (jumped && !this.jumping) {\n                    this.jump();\n                }\n\n                this.facing = this.returnDirection();\n            }\n\n            if (attacked && !this.attacking) {\n                this.attack();\n            }\n        }\n    }\n\n    stopMoving() {\n        this.clickTarget = null;\n        this.realClickY = null;\n        this.realClickX = null;\n        this.moving = false;\n    }\n\n    startData() {\n        let updateData = this.updateData.bind(this);\n\n        this.updateTimer = setInterval(function() {\n            updateData();\n        }, 1000 / this.fps);\n    }\n\n    startAnimation() {\n        let getAnimationType = this.getAnimationType.bind(this);\n        let updateData = this.updateData.bind(this);\n        let updateAnimationFrames = this.updateAnimationFrames.bind(this);\n        clearInterval(this.animationTimer);\n\n        this.animationTimer = setInterval(function() {\n            getAnimationType();\n            updateData();\n            updateAnimationFrames();\n        }, 1000 / this.fps);\n        this.started = true;\n    }\n\n    updateData() {\n        if (!this.moving) {\n            if (this.stamina != this.maxStamina) {\n                this.stamina = this.stamina + 0.5\n            }\n        }\n\n        if (this.stamina < 0) {\n            this.stamina = 0;\n        }\n        if (this.health < 0) {\n            this.health = 0;\n        }\n    }\n\n    updateAnimationFrames() {\n        let outOfBounds = this.offsetFrameX >= this.animationFrames[this.offsetFrameY];\n\n        // if (this.attacking && outOfBounds) {\n        //     this.attacking = false;\n        // }\n\n        // if (this.jumping && outOfBounds) {\n        //     this.jumping = false;\n        // }\n\n        // if (this.hurting && outOfBounds) {\n        //     this.hurting = false;\n        // }\n\n        if (this.animationFrames[this.offsetFrameY] === undefined || outOfBounds) {\n            this.animationFrame = 0;\n            this.offsetFrameX = 0;\n        } else {\n            this.offsetFrameX += 1;\n        }\n    }\n\n    returnDirection() {\n        if (this.moving) {\n            this.action = 'running';\n            // this.facingX = '';\n            if (this.checkPressed('d')) {\n                this.facingX = 1;\n            } else if (this.checkPressed('a')) {\n                this.facingX = 0;\n            }\n\n            this.facingY = '';\n        } else {\n            this.action = 'standing';\n        }\n\n        return this.action + this.facingY + this.facingX;\n    }\n\n    getAnimationType() {\n        this.offsetFrameY = 0;\n        if (this.facingX == 0) {\n            this.offsetFrameY += 8;\n        }\n\n        if (!this.alive) {\n            this.offsetFrameY += 7;\n        } /*else if (this.jumping) {\n            this.offsetFrameY += 5;\n        } else if (this.attacking) {\n            this.offsetFrameY += 2 + this.attackCombo;\n        } else if (this.hurting) {\n            this.offsetFrameY += 6;\n        } */else if (this.moving) {\n            this.offsetFrameY += 1;\n        }\n    }\n\n    checkPressed(key) {\n        return this.keyPressed[key] ? 1 : 0;\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/Player.js\n");

/***/ }),

/***/ "./assets/js/Slime.js":
/*!****************************!*\
  !*** ./assets/js/Slime.js ***!
  \****************************/
/*! exports provided: Slime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Slime\", function() { return Slime; });\n/* harmony import */ var _Enemy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Enemy.js */ \"./assets/js/Enemy.js\");\n\n\n\n// import { TileSet } from './TileSet.js';\n// import { funcs } from './funcs.js';\n\nclass Slime extends _Enemy_js__WEBPACK_IMPORTED_MODULE_0__[\"Enemy\"] {\n    constructor(x, y, name, maxHealth, damage, speed, expGive) {\n        super(x, y, name, maxHealth, damage, speed, expGive);\n        this.image = 'slime_red.png';\n        this.animationFrames = [\n            3\n        ];\n        this.width = 16;\n        this.height = 16;\n        this.moveSpeed = 3;\n        this.attackCooldown = 3000;\n    }\n\n    getImage() {\n        return this.image;\n    }\n\n    getWidth() {\n        return this.width;\n    }\n\n    getHeight() {\n        return this.height;\n    }\n\n    getXPos() {\n        return this.xPos;\n    }\n\n    getYPos() {\n        return this.yPos;\n    }\n\n    startAnimation() {\n        let that = this;\n\n        if (!that.started) {\n            that.animationTimer = setInterval(function() {\n                that.updateAnimationFrames();\n            }, 1000 / 10);\n            that.started = true;\n        }\n    }\n\n    die() {\n        this.alive = false;\n    }\n\n    getHurt(damage) {\n        let that = this;\n\n        if (!that.hurt) {\n            console.log(`${that.name} was damaged ${damage} points!`);\n            that.hurt = true;\n            that.health -= damage;\n            that.hurtTimer = setTimeout(function() {\n                if (that.health <= 0) {\n                    that.die();\n                    console.log(`${that.name} died!`);\n                }\n                that.hurt = false;\n                console.log('not hurt');\n            }, 1000);\n        }\n    }\n\n    updateAnimationFrames() {\n        let that = this;\n        let outOfBounds = that.offsetFrameX >= that.animationFrames[that.offsetFrameY];\n\n        // if (that.attacking && outOfBounds) {\n        //     that.attacking = false;\n        // }\n\n        if (that.hurt && that.offsetFrameX % 2 != 0) {\n            that.offsetFrameY = 1;\n        } else {\n            that.offsetFrameY = 0;\n        }\n\n        if (that.animationFrames[that.offsetFrameY] === undefined || outOfBounds) {\n            that.animationFrame = 0;\n            that.offsetFrameX = 0;\n        } else {\n            that.offsetFrameX += 1;\n        }\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvU2xpbWUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvU2xpbWUuanM/OGRiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgRW5lbXkgfSBmcm9tICcuL0VuZW15LmpzJztcbi8vIGltcG9ydCB7IFRpbGVTZXQgfSBmcm9tICcuL1RpbGVTZXQuanMnO1xuLy8gaW1wb3J0IHsgZnVuY3MgfSBmcm9tICcuL2Z1bmNzLmpzJztcblxuY2xhc3MgU2xpbWUgZXh0ZW5kcyBFbmVteSB7XG4gICAgY29uc3RydWN0b3IoeCwgeSwgbmFtZSwgbWF4SGVhbHRoLCBkYW1hZ2UsIHNwZWVkLCBleHBHaXZlKSB7XG4gICAgICAgIHN1cGVyKHgsIHksIG5hbWUsIG1heEhlYWx0aCwgZGFtYWdlLCBzcGVlZCwgZXhwR2l2ZSk7XG4gICAgICAgIHRoaXMuaW1hZ2UgPSAnc2xpbWVfcmVkLnBuZyc7XG4gICAgICAgIHRoaXMuYW5pbWF0aW9uRnJhbWVzID0gW1xuICAgICAgICAgICAgM1xuICAgICAgICBdO1xuICAgICAgICB0aGlzLndpZHRoID0gMTY7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gMTY7XG4gICAgICAgIHRoaXMubW92ZVNwZWVkID0gMztcbiAgICAgICAgdGhpcy5hdHRhY2tDb29sZG93biA9IDMwMDA7XG4gICAgfVxuXG4gICAgZ2V0SW1hZ2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmltYWdlO1xuICAgIH1cblxuICAgIGdldFdpZHRoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy53aWR0aDtcbiAgICB9XG5cbiAgICBnZXRIZWlnaHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmhlaWdodDtcbiAgICB9XG5cbiAgICBnZXRYUG9zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy54UG9zO1xuICAgIH1cblxuICAgIGdldFlQb3MoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnlQb3M7XG4gICAgfVxuXG4gICAgc3RhcnRBbmltYXRpb24oKSB7XG4gICAgICAgIGxldCB0aGF0ID0gdGhpcztcblxuICAgICAgICBpZiAoIXRoYXQuc3RhcnRlZCkge1xuICAgICAgICAgICAgdGhhdC5hbmltYXRpb25UaW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHRoYXQudXBkYXRlQW5pbWF0aW9uRnJhbWVzKCk7XG4gICAgICAgICAgICB9LCAxMDAwIC8gMTApO1xuICAgICAgICAgICAgdGhhdC5zdGFydGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRpZSgpIHtcbiAgICAgICAgdGhpcy5hbGl2ZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIGdldEh1cnQoZGFtYWdlKSB7XG4gICAgICAgIGxldCB0aGF0ID0gdGhpcztcblxuICAgICAgICBpZiAoIXRoYXQuaHVydCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYCR7dGhhdC5uYW1lfSB3YXMgZGFtYWdlZCAke2RhbWFnZX0gcG9pbnRzIWApO1xuICAgICAgICAgICAgdGhhdC5odXJ0ID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoYXQuaGVhbHRoIC09IGRhbWFnZTtcbiAgICAgICAgICAgIHRoYXQuaHVydFRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhhdC5oZWFsdGggPD0gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGF0LmRpZSgpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgJHt0aGF0Lm5hbWV9IGRpZWQhYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoYXQuaHVydCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdub3QgaHVydCcpO1xuICAgICAgICAgICAgfSwgMTAwMCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB1cGRhdGVBbmltYXRpb25GcmFtZXMoKSB7XG4gICAgICAgIGxldCB0aGF0ID0gdGhpcztcbiAgICAgICAgbGV0IG91dE9mQm91bmRzID0gdGhhdC5vZmZzZXRGcmFtZVggPj0gdGhhdC5hbmltYXRpb25GcmFtZXNbdGhhdC5vZmZzZXRGcmFtZVldO1xuXG4gICAgICAgIC8vIGlmICh0aGF0LmF0dGFja2luZyAmJiBvdXRPZkJvdW5kcykge1xuICAgICAgICAvLyAgICAgdGhhdC5hdHRhY2tpbmcgPSBmYWxzZTtcbiAgICAgICAgLy8gfVxuXG4gICAgICAgIGlmICh0aGF0Lmh1cnQgJiYgdGhhdC5vZmZzZXRGcmFtZVggJSAyICE9IDApIHtcbiAgICAgICAgICAgIHRoYXQub2Zmc2V0RnJhbWVZID0gMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoYXQub2Zmc2V0RnJhbWVZID0gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGF0LmFuaW1hdGlvbkZyYW1lc1t0aGF0Lm9mZnNldEZyYW1lWV0gPT09IHVuZGVmaW5lZCB8fCBvdXRPZkJvdW5kcykge1xuICAgICAgICAgICAgdGhhdC5hbmltYXRpb25GcmFtZSA9IDA7XG4gICAgICAgICAgICB0aGF0Lm9mZnNldEZyYW1lWCA9IDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGF0Lm9mZnNldEZyYW1lWCArPSAxO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgeyBTbGltZSB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/js/Slime.js\n");

/***/ }),

/***/ "./assets/js/Tile.js":
/*!***************************!*\
  !*** ./assets/js/Tile.js ***!
  \***************************/
/*! exports provided: Tile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Tile\", function() { return Tile; });\n\n\n// import { Player } from './Player.js';\n// import { TileSet } from './TileSet.js';\n// import { funcs } from './funcs.js';\n\nclass Tile {\n    constructor(id, xOffset, yOffset, width, height, type) {\n        this.id = id;\n        this.xOffset = xOffset;\n        this.yOffset = yOffset;\n        this.width = width;\n        this.height = height;\n        this.type = type;\n        // var tileAmountWidth = Math.floor(width / tileWidth);\n        // this.lastgid = tileAmountWidth * Math.floor(height / tileHeight) + firstgid - 1;\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    getXOffset() {\n        return this.xOffset;\n    }\n\n    getYOffset() {\n        return this.yOffset;\n    }\n\n    getWidth() {\n        return this.width;\n    }\n\n    getHeight() {\n        return this.height;\n    }\n\n    getType() {\n        return this.type;\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvVGlsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2Fzc2V0cy9qcy9UaWxlLmpzPzAwOTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIGltcG9ydCB7IFBsYXllciB9IGZyb20gJy4vUGxheWVyLmpzJztcbi8vIGltcG9ydCB7IFRpbGVTZXQgfSBmcm9tICcuL1RpbGVTZXQuanMnO1xuLy8gaW1wb3J0IHsgZnVuY3MgfSBmcm9tICcuL2Z1bmNzLmpzJztcblxuY2xhc3MgVGlsZSB7XG4gICAgY29uc3RydWN0b3IoaWQsIHhPZmZzZXQsIHlPZmZzZXQsIHdpZHRoLCBoZWlnaHQsIHR5cGUpIHtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLnhPZmZzZXQgPSB4T2Zmc2V0O1xuICAgICAgICB0aGlzLnlPZmZzZXQgPSB5T2Zmc2V0O1xuICAgICAgICB0aGlzLndpZHRoID0gd2lkdGg7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICAvLyB2YXIgdGlsZUFtb3VudFdpZHRoID0gTWF0aC5mbG9vcih3aWR0aCAvIHRpbGVXaWR0aCk7XG4gICAgICAgIC8vIHRoaXMubGFzdGdpZCA9IHRpbGVBbW91bnRXaWR0aCAqIE1hdGguZmxvb3IoaGVpZ2h0IC8gdGlsZUhlaWdodCkgKyBmaXJzdGdpZCAtIDE7XG4gICAgfVxuXG4gICAgZ2V0SWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlkO1xuICAgIH1cblxuICAgIGdldFhPZmZzZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnhPZmZzZXQ7XG4gICAgfVxuXG4gICAgZ2V0WU9mZnNldCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMueU9mZnNldDtcbiAgICB9XG5cbiAgICBnZXRXaWR0aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMud2lkdGg7XG4gICAgfVxuXG4gICAgZ2V0SGVpZ2h0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5oZWlnaHQ7XG4gICAgfVxuXG4gICAgZ2V0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHlwZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IFRpbGUgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/js/Tile.js\n");

/***/ }),

/***/ "./assets/js/TileSet.js":
/*!******************************!*\
  !*** ./assets/js/TileSet.js ***!
  \******************************/
/*! exports provided: TileSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TileSet\", function() { return TileSet; });\n/* harmony import */ var _Tile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tile.js */ \"./assets/js/Tile.js\");\n\n\n// import { Player } from './Player.js';\n// import { TileSet } from './TileSet.js';\n\n\nclass TileSet {\n    constructor(firstgid, tileWidth, tileHeight, source, width, height) {\n        var tileAmountWidth = Math.floor(width / tileWidth);\n\n        this.firstgid = firstgid;\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n        this.source = source;\n        this.width = width;\n        this.height = height;\n        this.lastgid = tileAmountWidth * Math.floor(height / tileHeight) + firstgid - 1;\n        this.tiles = [];\n    }\n\n    async loadTileSetImage() {\n        let mapimage = await window.fetch('assets/img/map/overworld1.tsx'/* + this.source*/);\n        let text = await mapimage.text();\n        let xmlDoc = (new window.DOMParser()).parseFromString(text, \"text/xml\");\n        let tileCounter = 1;\n\n        // console.log(xmlDoc);\n        // console.log(xmlDoc.activeElement.children[0]);\n        // console.log(xmlDoc);\n        this.mapImage = xmlDoc.activeElement.getElementsByTagName('image')[0];\n\n        this.columns = xmlDoc.activeElement.getAttribute('columns');\n        this.tilecount = xmlDoc.activeElement.getAttribute('tilecount');\n        this.tilewidth = xmlDoc.activeElement.getAttribute('tilewidth');\n        this.tileheight = xmlDoc.activeElement.getAttribute('tileheight');\n        this.rows = this.tilecount / this.columns;\n\n        // console.log(this.tilewidth * 39);\n\n        for (let y = 0; y < this.rows; y++) {\n            // this.tiles[y] = [];\n            for (let x = 0; x < this.columns; x++) {\n                let yOffset = y * (parseInt(this.tileheight) + 2);\n                let xOffset = x * (parseInt(this.tilewidth) + 2);\n\n                this.tiles[tileCounter] = new _Tile_js__WEBPACK_IMPORTED_MODULE_0__[\"Tile\"](\n                    tileCounter + 1,\n                    xOffset,\n                    yOffset,\n                    this.tilewidth,\n                    this.tileheight,\n                    null//this.layers[0].data[tileCounter]\n                );\n                tileCounter++;\n            }\n        }\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvVGlsZVNldC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2Fzc2V0cy9qcy9UaWxlU2V0LmpzP2U4M2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIGltcG9ydCB7IFBsYXllciB9IGZyb20gJy4vUGxheWVyLmpzJztcbi8vIGltcG9ydCB7IFRpbGVTZXQgfSBmcm9tICcuL1RpbGVTZXQuanMnO1xuaW1wb3J0IHsgVGlsZSB9IGZyb20gJy4vVGlsZS5qcyc7XG5cbmNsYXNzIFRpbGVTZXQge1xuICAgIGNvbnN0cnVjdG9yKGZpcnN0Z2lkLCB0aWxlV2lkdGgsIHRpbGVIZWlnaHQsIHNvdXJjZSwgd2lkdGgsIGhlaWdodCkge1xuICAgICAgICB2YXIgdGlsZUFtb3VudFdpZHRoID0gTWF0aC5mbG9vcih3aWR0aCAvIHRpbGVXaWR0aCk7XG5cbiAgICAgICAgdGhpcy5maXJzdGdpZCA9IGZpcnN0Z2lkO1xuICAgICAgICB0aGlzLnRpbGVXaWR0aCA9IHRpbGVXaWR0aDtcbiAgICAgICAgdGhpcy50aWxlSGVpZ2h0ID0gdGlsZUhlaWdodDtcbiAgICAgICAgdGhpcy5zb3VyY2UgPSBzb3VyY2U7XG4gICAgICAgIHRoaXMud2lkdGggPSB3aWR0aDtcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICAgIHRoaXMubGFzdGdpZCA9IHRpbGVBbW91bnRXaWR0aCAqIE1hdGguZmxvb3IoaGVpZ2h0IC8gdGlsZUhlaWdodCkgKyBmaXJzdGdpZCAtIDE7XG4gICAgICAgIHRoaXMudGlsZXMgPSBbXTtcbiAgICB9XG5cbiAgICBhc3luYyBsb2FkVGlsZVNldEltYWdlKCkge1xuICAgICAgICBsZXQgbWFwaW1hZ2UgPSBhd2FpdCB3aW5kb3cuZmV0Y2goJ2Fzc2V0cy9pbWcvbWFwL292ZXJ3b3JsZDEudHN4Jy8qICsgdGhpcy5zb3VyY2UqLyk7XG4gICAgICAgIGxldCB0ZXh0ID0gYXdhaXQgbWFwaW1hZ2UudGV4dCgpO1xuICAgICAgICBsZXQgeG1sRG9jID0gKG5ldyB3aW5kb3cuRE9NUGFyc2VyKCkpLnBhcnNlRnJvbVN0cmluZyh0ZXh0LCBcInRleHQveG1sXCIpO1xuICAgICAgICBsZXQgdGlsZUNvdW50ZXIgPSAxO1xuXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHhtbERvYyk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHhtbERvYy5hY3RpdmVFbGVtZW50LmNoaWxkcmVuWzBdKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coeG1sRG9jKTtcbiAgICAgICAgdGhpcy5tYXBJbWFnZSA9IHhtbERvYy5hY3RpdmVFbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdpbWFnZScpWzBdO1xuXG4gICAgICAgIHRoaXMuY29sdW1ucyA9IHhtbERvYy5hY3RpdmVFbGVtZW50LmdldEF0dHJpYnV0ZSgnY29sdW1ucycpO1xuICAgICAgICB0aGlzLnRpbGVjb3VudCA9IHhtbERvYy5hY3RpdmVFbGVtZW50LmdldEF0dHJpYnV0ZSgndGlsZWNvdW50Jyk7XG4gICAgICAgIHRoaXMudGlsZXdpZHRoID0geG1sRG9jLmFjdGl2ZUVsZW1lbnQuZ2V0QXR0cmlidXRlKCd0aWxld2lkdGgnKTtcbiAgICAgICAgdGhpcy50aWxlaGVpZ2h0ID0geG1sRG9jLmFjdGl2ZUVsZW1lbnQuZ2V0QXR0cmlidXRlKCd0aWxlaGVpZ2h0Jyk7XG4gICAgICAgIHRoaXMucm93cyA9IHRoaXMudGlsZWNvdW50IC8gdGhpcy5jb2x1bW5zO1xuXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMudGlsZXdpZHRoICogMzkpO1xuXG4gICAgICAgIGZvciAobGV0IHkgPSAwOyB5IDwgdGhpcy5yb3dzOyB5KyspIHtcbiAgICAgICAgICAgIC8vIHRoaXMudGlsZXNbeV0gPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IHggPSAwOyB4IDwgdGhpcy5jb2x1bW5zOyB4KyspIHtcbiAgICAgICAgICAgICAgICBsZXQgeU9mZnNldCA9IHkgKiAocGFyc2VJbnQodGhpcy50aWxlaGVpZ2h0KSArIDIpO1xuICAgICAgICAgICAgICAgIGxldCB4T2Zmc2V0ID0geCAqIChwYXJzZUludCh0aGlzLnRpbGV3aWR0aCkgKyAyKTtcblxuICAgICAgICAgICAgICAgIHRoaXMudGlsZXNbdGlsZUNvdW50ZXJdID0gbmV3IFRpbGUoXG4gICAgICAgICAgICAgICAgICAgIHRpbGVDb3VudGVyICsgMSxcbiAgICAgICAgICAgICAgICAgICAgeE9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgeU9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50aWxld2lkdGgsXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGlsZWhlaWdodCxcbiAgICAgICAgICAgICAgICAgICAgbnVsbC8vdGhpcy5sYXllcnNbMF0uZGF0YVt0aWxlQ291bnRlcl1cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHRpbGVDb3VudGVyKys7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCB7IFRpbGVTZXQgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./assets/js/TileSet.js\n");

/***/ }),

/***/ "./assets/js/funcs.js":
/*!****************************!*\
  !*** ./assets/js/funcs.js ***!
  \****************************/
/*! exports provided: funcs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"funcs\", function() { return funcs; });\n\n\nlet funcs = {};\n\nfuncs.bind = function(el, action, method) {\n    let element = null;\n\n    if (typeof el == 'string') {\n        element = document.getElementById(el);\n    } else {\n        element = el;\n    }\n    element.addEventListener(action, method);\n};\n\nString.prototype.toCamelCase = function() {\n    return this.valueOf()\n        .replace(/\\s(.)/g, function($1) { return $1.toUpperCase(); })\n        .replace(/\\s/g, '')\n        .replace(/^(.)/, function($1) { return $1.toLowerCase(); });\n};\n\nfuncs.isCollide = function (a, b) {\n    return !(\n        ((a.y + a.height) < (b.y)) ||\n        (a.y > (b.y + b.height)) ||\n        ((a.x + a.width) < b.x) ||\n        (a.x > (b.x + b.width))\n    );\n};\n\nfuncs.clone = function (obj) {\n    if (null == obj || \"object\" != typeof obj) {\n        return obj;\n    }\n    var copy = new obj.constructor();\n\n    for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) {\n            copy[attr] = obj[attr];\n        }\n    }\n    return copy;\n};\n\n// funcs.prototype.binds = function(el, action, method) {\n//     let element = null;\n\n//     if (typeof el == 'string') {\n//         element = document.getElementById(el);\n//     }\n//     element.addEventListener(action, method);\n// };\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvZnVuY3MuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvZnVuY3MuanM/YTVjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubGV0IGZ1bmNzID0ge307XG5cbmZ1bmNzLmJpbmQgPSBmdW5jdGlvbihlbCwgYWN0aW9uLCBtZXRob2QpIHtcbiAgICBsZXQgZWxlbWVudCA9IG51bGw7XG5cbiAgICBpZiAodHlwZW9mIGVsID09ICdzdHJpbmcnKSB7XG4gICAgICAgIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZWxlbWVudCA9IGVsO1xuICAgIH1cbiAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoYWN0aW9uLCBtZXRob2QpO1xufTtcblxuU3RyaW5nLnByb3RvdHlwZS50b0NhbWVsQ2FzZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnZhbHVlT2YoKVxuICAgICAgICAucmVwbGFjZSgvXFxzKC4pL2csIGZ1bmN0aW9uKCQxKSB7IHJldHVybiAkMS50b1VwcGVyQ2FzZSgpOyB9KVxuICAgICAgICAucmVwbGFjZSgvXFxzL2csICcnKVxuICAgICAgICAucmVwbGFjZSgvXiguKS8sIGZ1bmN0aW9uKCQxKSB7IHJldHVybiAkMS50b0xvd2VyQ2FzZSgpOyB9KTtcbn07XG5cbmZ1bmNzLmlzQ29sbGlkZSA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuICEoXG4gICAgICAgICgoYS55ICsgYS5oZWlnaHQpIDwgKGIueSkpIHx8XG4gICAgICAgIChhLnkgPiAoYi55ICsgYi5oZWlnaHQpKSB8fFxuICAgICAgICAoKGEueCArIGEud2lkdGgpIDwgYi54KSB8fFxuICAgICAgICAoYS54ID4gKGIueCArIGIud2lkdGgpKVxuICAgICk7XG59O1xuXG5mdW5jcy5jbG9uZSA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICBpZiAobnVsbCA9PSBvYmogfHwgXCJvYmplY3RcIiAhPSB0eXBlb2Ygb2JqKSB7XG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIHZhciBjb3B5ID0gbmV3IG9iai5jb25zdHJ1Y3RvcigpO1xuXG4gICAgZm9yICh2YXIgYXR0ciBpbiBvYmopIHtcbiAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShhdHRyKSkge1xuICAgICAgICAgICAgY29weVthdHRyXSA9IG9ialthdHRyXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY29weTtcbn07XG5cbi8vIGZ1bmNzLnByb3RvdHlwZS5iaW5kcyA9IGZ1bmN0aW9uKGVsLCBhY3Rpb24sIG1ldGhvZCkge1xuLy8gICAgIGxldCBlbGVtZW50ID0gbnVsbDtcblxuLy8gICAgIGlmICh0eXBlb2YgZWwgPT0gJ3N0cmluZycpIHtcbi8vICAgICAgICAgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVsKTtcbi8vICAgICB9XG4vLyAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGFjdGlvbiwgbWV0aG9kKTtcbi8vIH07XG5cbmV4cG9ydCB7IGZ1bmNzIH07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/js/funcs.js\n");

/***/ }),

/***/ "./assets/js/main.js":
/*!***************************!*\
  !*** ./assets/js/main.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Game_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game.js */ \"./assets/js/Game.js\");\n/* harmony import */ var _Player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Player.js */ \"./assets/js/Player.js\");\n/* harmony import */ var _Map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Map.js */ \"./assets/js/Map.js\");\n\n\n\n\n\n\n\nlet game = new _Game_js__WEBPACK_IMPORTED_MODULE_0__[\"Game\"](800, 600);\nlet map = new _Map_js__WEBPACK_IMPORTED_MODULE_2__[\"Map\"](\"assets/img/map/overworld1.json\");\n\nmap.loadMap().then(function() {\n    console.log('map loaded');\n    game.map = map;\n\n    let initGame = game.init.bind(game);\n\n    initGame();\n    // game.init();\n    window.addEventListener('keyup', function(e) { game.player.pressKey(e.key, false); });\n    window.addEventListener('keydown', function(e) { game.player.pressKey(e.key, true); });\n    // window.addEventListener('mousedown', function(e) { game.player.mouseDown(e, true); });\n    // window.addEventListener('mouseup', function(e) { game.player.mouseUp(e, true); });\n//     game.init();\n//     window.addEventListener('keyup', function(e) { game.player.pressKey(e.key, false); });\n//     window.addEventListener('keydown', function(e) { game.player.pressKey(e.key, true); });\n//     console.log(map.xmlDoc);\n});\n\n\n/*app.keyPressed[e.key] = false;*/\n/*app.keyPressed[e.key] = true;*/\n\n// var xmlDoc = window.fetch(\"assets/img/map/map.xml\")\n//     .then(response => response.text())\n//     .then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\"))\n//     .then(data => data);\n\n// console.log(xmlDoc);\n// game.start();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvbWFpbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2Fzc2V0cy9qcy9tYWluLmpzPzQ1ZDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IEdhbWUgfSBmcm9tICcuL0dhbWUuanMnO1xuaW1wb3J0IHsgUGxheWVyIH0gZnJvbSAnLi9QbGF5ZXIuanMnO1xuaW1wb3J0IHsgTWFwIH0gZnJvbSAnLi9NYXAuanMnO1xuXG5cbmxldCBnYW1lID0gbmV3IEdhbWUoODAwLCA2MDApO1xubGV0IG1hcCA9IG5ldyBNYXAoXCJhc3NldHMvaW1nL21hcC9vdmVyd29ybGQxLmpzb25cIik7XG5cbm1hcC5sb2FkTWFwKCkudGhlbihmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZygnbWFwIGxvYWRlZCcpO1xuICAgIGdhbWUubWFwID0gbWFwO1xuXG4gICAgbGV0IGluaXRHYW1lID0gZ2FtZS5pbml0LmJpbmQoZ2FtZSk7XG5cbiAgICBpbml0R2FtZSgpO1xuICAgIC8vIGdhbWUuaW5pdCgpO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIGZ1bmN0aW9uKGUpIHsgZ2FtZS5wbGF5ZXIucHJlc3NLZXkoZS5rZXksIGZhbHNlKTsgfSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7IGdhbWUucGxheWVyLnByZXNzS2V5KGUua2V5LCB0cnVlKTsgfSk7XG4gICAgLy8gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGZ1bmN0aW9uKGUpIHsgZ2FtZS5wbGF5ZXIubW91c2VEb3duKGUsIHRydWUpOyB9KTtcbiAgICAvLyB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGZ1bmN0aW9uKGUpIHsgZ2FtZS5wbGF5ZXIubW91c2VVcChlLCB0cnVlKTsgfSk7XG4vLyAgICAgZ2FtZS5pbml0KCk7XG4vLyAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgZnVuY3Rpb24oZSkgeyBnYW1lLnBsYXllci5wcmVzc0tleShlLmtleSwgZmFsc2UpOyB9KTtcbi8vICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uKGUpIHsgZ2FtZS5wbGF5ZXIucHJlc3NLZXkoZS5rZXksIHRydWUpOyB9KTtcbi8vICAgICBjb25zb2xlLmxvZyhtYXAueG1sRG9jKTtcbn0pO1xuXG5cbi8qYXBwLmtleVByZXNzZWRbZS5rZXldID0gZmFsc2U7Ki9cbi8qYXBwLmtleVByZXNzZWRbZS5rZXldID0gdHJ1ZTsqL1xuXG4vLyB2YXIgeG1sRG9jID0gd2luZG93LmZldGNoKFwiYXNzZXRzL2ltZy9tYXAvbWFwLnhtbFwiKVxuLy8gICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLnRleHQoKSlcbi8vICAgICAudGhlbihzdHIgPT4gKG5ldyB3aW5kb3cuRE9NUGFyc2VyKCkpLnBhcnNlRnJvbVN0cmluZyhzdHIsIFwidGV4dC94bWxcIikpXG4vLyAgICAgLnRoZW4oZGF0YSA9PiBkYXRhKTtcblxuLy8gY29uc29sZS5sb2coeG1sRG9jKTtcbi8vIGdhbWUuc3RhcnQoKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/js/main.js\n");

/***/ })

/******/ });